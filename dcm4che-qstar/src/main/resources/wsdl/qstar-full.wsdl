<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions name="WSWebService"
  targetNamespace="WSWebService"
  xmlns:tns="WSWebService"
  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/"
  xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
  xmlns:s="http://www.w3.org/2001/XMLSchema"
  xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
  xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
 <wsdl:types>
	<schema targetNamespace="WSWebService"
		xmlns="http://www.w3.org/2001/XMLSchema">

            <s:complexType name="WSVLSet">
              <s:sequence>

                <s:element name="version" type="s:string" />

                <!-- 
                    Cache parameters
                -->
                <s:element name="cacheRoot" type="s:string" />
                <s:element name="paramSetMask" type="s:int" />
                <s:element name="maxPagesNumber" type="s:long" />
                <s:element name="pageSize" type="s:unsignedInt" />
                <s:element name="rdonlyGracePeriod" type="s:long" />
                <s:element name="retentionPeriod" type="s:long" />
                <s:element name="digestType" type="s:int" />
                <s:element name="encryptionType" type="s:int" />
                <s:element name="cfsId" type="s:long" />
                <s:element name="lowPrimaryCapacity" type="s:long" />
                <s:element name="highPrimaryCapacity" type="s:long" />
                <s:element name="readReservedCapacity" type="s:long" />
                <s:element name="setMask" type="s:int" />
                <s:element name="setFeatureFlags" type="s:int" />
                <s:element name="setFeatureHardFlags" type="s:int" />
                <s:element name="backEndRetentionType" type="s:int" />
                <s:element name="ownerAccessPeriod" type="s:long" />                             

                <!-- 
                    Set parameters
                -->
                <s:element name="mountPoint" type="s:string" />                
                <s:element name="setStatus" type="s:int" />
                <s:element name="setType" type="s:int" />
                <s:element name="setTypeStr" type="s:string" />
                <s:element name="essenceMask" type="s:int" />
                <s:element name="accessMask" type="s:int" />
                <s:element name="spread" type="s:int" />
                <s:element name="setFlags" type="s:unsignedInt" />
                <s:element name="readonly" type="s:int" />
                <s:element name="quota" type="s:unsignedInt" />
                <s:element name="qmageSchedule" type="s:string" />
                <s:element name="mcopyReplicas" type="s:unsignedInt" />
                <s:element name="mcopyTimeSlice" type="s:unsignedInt" />
                <s:element name="mcopyDataPerSlice" type="s:unsignedInt" />
                <s:element name="mcopyPolicy" type="s:unsignedInt" />
                <s:element name="defaultMountPoint" type="s:string" />
                <s:element name="mjukeList" type="s:string" />

                <!-- 
                    Set specific parameters
                -->
                <s:element minOccurs="0" maxOccurs="1" name="unionSpecific" type="tns:WSVLSetParamSpecific"/>


                <!-- 
                    In Set medium parameters
                -->
                <s:element minOccurs="0" maxOccurs="unbounded" name="mediaList" type="tns:WSVLInSetMedium"/>

              </s:sequence>
            </s:complexType>
           
            <s:complexType name="WSVLSetParamSpecific">
              <s:sequence>

                <s:element minOccurs="0" maxOccurs="1" name="sdf" type="tns:WSVLSDFParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="udf" type="tns:WSVLUDFParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="uvfs" type="tns:WSVLUVFSParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="cluster" type="tns:WSVLClusterParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="scas" type="tns:WSVLSCASParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="aafs" type="tns:WSVLAAFSParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="ltfs" type="tns:WSVLLTFSParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="gfs" type="tns:WSVLGFSParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="hcap" type="tns:WSVLHCAPParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="rpl" type="tns:WSVLRPLParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="tdo" type="tns:WSVLTDOParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="xa" type="tns:WSVLXAParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="cloud" type="tns:WSVLCloudParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="vskin" type="tns:WSVLVSKINParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="atm" type="tns:WSVLATMParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="ostk" type="tns:WSVLOSTKParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="s3" type="tns:WSVLS3Param"/>
                <s:element minOccurs="0" maxOccurs="1" name="s3d" type="tns:WSVLS3DParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="ohcp" type="tns:WSVLOHCPParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="tar" type="tns:WSVLTARParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="proxy" type="tns:WSVLProxyParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="gas" type="tns:WSVLDASMParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="wos" type="tns:WSVLWOSParam"/>
                <s:element minOccurs="0" maxOccurs="1" name="az" type="tns:WSVLAzureParam"/>
                
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLSDFParam">
              <s:sequence>

                <s:element name="setIdHost" type="s:unsignedInt" />
                <s:element name="setIdTime" type="s:unsignedInt" />
                <s:element name="maxOpens" type="s:unsignedInt" />
                <s:element name="compression" type="s:unsignedInt" />
                <s:element name="mirrStat" type="s:unsignedInt" />
                <s:element name="hsyncControl" type="s:unsignedInt" />
                <s:element name="flags" type="s:unsignedInt" />
                <s:element name="mirrorHost" type="s:string" />
                <s:element name="mirrorSet" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLUDFParam">
              <s:sequence>

                <s:element name="logVolId" type="s:string" />
                <s:element name="fileSetNumber" type="s:unsignedInt" />
                <s:element name="cfsId" type="s:long" />
                <s:element name="udfRevision" type="s:unsignedShort" />
                <s:element name="interchangeLevel" type="s:unsignedShort" />
                <s:element name="flags" type="s:int" />
                <s:element name="blockSize" type="s:unsignedInt" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLUVFSParam">
              <s:sequence>

                <s:element name="setId" type="s:string" />
                <s:element name="interchangeLevel" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLClusterParam">
              <s:sequence>

                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLSCASParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLOSTKMedia">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLAAFSParam">
              <s:sequence>

                <s:element name="partUUID" type="s:string" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLLTFSParam">
              <s:sequence>

                <s:element name="gbPerSide" type="s:unsignedInt" />
                <s:element name="blockSize" type="s:unsignedInt" />
                <s:element name="volSerial" type="s:string" />
                <s:element name="volName" type="s:string" />
                <s:element name="volUUID" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLGFSParam">
              <s:sequence>

                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLHCAPParam">
              <s:sequence>

                <s:element name="flags" type="s:int" />
                <s:element name="extentSizeMb" type="s:unsignedShort" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLRPLParam">
              <s:sequence>

                <s:element name="flags" type="s:int" />
                <s:element name="rplId" type="s:string" />
                <s:element name="readReplicaIndex" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLTDOParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />
                <s:element name="slaveSetHostId" type="s:unsignedInt" />
                <s:element name="slaveSetTimeId" type="s:unsignedInt" />
                
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLXAParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLAzureParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLCloudParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLVSKINParam">
              <s:sequence>

                <s:element name="setStyle" type="s:byte" />
                <s:element name="volumeType" type="s:byte" />
                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />
                <s:element name="VolumeId" type="s:string" />
                <s:element name="singleVolumeId" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLATMParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLOSTKParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLS3Param">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLS3DParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLOHCPParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLTARParam">
              <s:sequence>

                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLProxyParam">
              <s:sequence>

                <s:element name="targetHostName" type="s:string" />
                <s:element name="targetSetName" type="s:string" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLDASMParam">
              <s:sequence>
                <s:element name="setId" type="s:string" />
                <s:element name="flags" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLWOSParam">
              <s:sequence>
                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLInSetMedium">
              <s:sequence>

                <s:element name="onOff" type="s:byte" />
                <s:element name="deviceName" type="s:string" />
                <s:element name="shelfNumber" type="s:unsignedInt" />
                <s:element name="offline" type="s:string" />
                <s:element name="barcode" type="s:string" />
                <s:element name="insetKbPerSideA" type="s:long" />
                <s:element name="insetKbPerSideB" type="s:long" />
                <s:element name="insetFlags" type="s:unsignedInt" />
                <s:element name="insetCopyNumber" type="s:unsignedInt" />
                <s:element minOccurs="0" maxOccurs="1" name="specific" type="tns:WSVLInSetSpecific"/>

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLInSetSpecific">
              <s:sequence>

                <s:element minOccurs="0" maxOccurs="1" name="sdf" type="tns:WSVLSDFInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="udf" type="tns:WSVLUDFInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="uvfs" type="tns:WSVLUVFSInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="aafs" type="tns:WSVLAAFSInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="ltfs" type="tns:WSVLLTFSInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="scas" type="tns:WSVLSCASInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="hcap" type="tns:WSVLHCAPInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="rpl" type="tns:WSVLRPLInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="tdo" type="tns:WSVLTDOInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="xa" type="tns:WSVLXAInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="cloud" type="tns:WSVLCloudInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="vskin" type="tns:WSVLVSKINInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="atm" type="tns:WSVLATMInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="ostk" type="tns:WSVLOSTKInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="s3" type="tns:WSVLS3InSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="s3d" type="tns:WSVLS3DInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="ohcp" type="tns:WSVLOHCPInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="tar" type="tns:WSVLTARInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="gas" type="tns:WSVLDASMInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="wos" type="tns:WSVLWOSInSetMedium"/>
                <s:element minOccurs="0" maxOccurs="1" name="az" type="tns:WSVLAzureInSetMedium"/>

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLSDFInSetMedium">
              <s:sequence>

                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLUDFInSetMedium">
              <s:sequence>

                <s:element name="logVolIdA" type="s:string" />
                <s:element name="logVolIdB" type="s:string" />
                <s:element name="dirIdA" type="s:string" />
                <s:element name="dirIdB" type="s:string" />
                <s:element name="onDiskTimeA" type="s:long" />
                <s:element name="onDiskTimeB" type="s:long" />
                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLUVFSInSetMedium">
              <s:sequence>

                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />
                <s:element name="dirNameA" type="s:string" />
                <s:element name="dirNameB" type="s:string" />
                <s:element name="dirIdA" type="s:string" />
                <s:element name="dirIdB" type="s:string" />
                <s:element name="flagsA" type="s:int" />
                <s:element name="flagsB" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLAAFSInSetMedium">
              <s:sequence>

                <s:element name="pollUUID" type="s:string" />
                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLLTFSInSetMedium">
              <s:sequence>

                <s:element name="gbPerSide" type="s:unsignedInt" />
                <s:element name="blockSize" type="s:unsignedInt" />
                <s:element name="volSerial" type="s:string" />
                <s:element name="volName" type="s:string" />
                <s:element name="volUUID" type="s:string" />
                <s:element name="sequenceNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLSCASInSetMedium">
              <s:sequence>

                <s:element name="sequenceNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />
                <s:element name="partId" type="s:long" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLHCAPInSetMedium">
              <s:sequence>

                <s:element name="partitionName" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLRPLInSetMedium">
              <s:sequence>

                <s:element name="flags" type="s:int" />
                <s:element name="level" type="s:long" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLTDOInSetMedium">
              <s:sequence>

                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLXAInSetMedium">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLAzureInSetMedium">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLCloudInSetMedium">
              <s:sequence>

                <s:element name="sequenceNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />
                <s:element name="partName" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLVSKINInSetMedium">
              <s:sequence>

                <s:element name="volumeId" type="s:string" />
                <s:element name="dirName" type="s:string" />
                <s:element name="totalKb" type="s:long" />
                <s:element name="volumeNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />
                <s:element name="flags" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLATMInSetMedium">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLOSTKInSetMedium">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLS3InSetMedium">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLS3DInSetMedium">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLOHCPInSetMedium">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLTARInSetMedium">
              <s:sequence>

                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />
                <s:element name="dadBarcode" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLDASMInSetMedium">
              <s:sequence>

                <s:element name="setType" type="s:int" />
                <s:element name="hostName" type="s:string" />
                <s:element name="setName" type="s:string" />
                <s:element name="setId" type="s:long" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLWOSInSetMedium">
              <s:sequence>

                <s:element name="setType" type="s:int" />
                <s:element name="partName" type="s:string" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatSDFData">
              <s:sequence>
                <s:element name="deviceType" type="s:string" />
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="mediaNumber" type="s:int" />
                <s:element name="openedDeviceMaxNumber" type="s:int" />
                <s:element name="bufferSize" type="s:int" />
                <s:element name="compression" type="s:int" />
                <s:element name="mirrorState" type="s:string" />
                <s:element name="backupDeviceForWriting" type="s:string" />
                <s:element name="migratorStatus" type="s:unsignedInt" />
                <s:element name="hsyncControl" type="s:int" />
                <s:element name="hsyncKB" type="s:unsignedInt" />
                <s:element name="currentVolumeFreeSpaceKB" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatUDFData">
              <s:sequence>
                <s:element name="lastWriteVolume" type="s:string" />
                <s:element name="lastWriteAvailableBlocks" type="s:unsignedInt" />
                <s:element name="lastWriteBlockSize" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatUVFSData">
              <s:sequence>
                <s:element name="deviceType" type="s:string" />
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="mediaNumber" type="s:int" />
                <s:element name="openedDeviceMaxNumber" type="s:int" />
                <s:element name="bufferSize" type="s:int" />
                <s:element name="currentVolumeFreeSpaceKB" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSRPLFullMigratorStatEntry">
              <s:sequence>
                <s:element name="setName" type="s:string" />
                <s:element name="migratorName" type="s:string" />
                <s:element name="deviceForWriting" type="s:string" />        
                <s:element name="currentVolumeFreeSpaceKB" type="s:string" />
                <s:element name="mirrorStatus" type="s:string" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSRPLFullMigratorStatList">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSRPLFullMigratorStatEntry" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSFSStatRPLData">
              <s:sequence>
                <s:element name="replicaCount" type="s:int" />
                <s:element name="replicaReadIndex" type="s:int" />
                <s:element name="onlineMask" type="s:int" />
                <s:element name="inSyncMask" type="s:int" />
                <s:element name="replicaBadMask" type="s:int" />
                <s:element name="fullStatList" type="tns:WSRPLFullMigratorStatList" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatClusterData">
              <s:sequence>
                <s:element name="nodeCount" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatTDOData">
              <s:sequence>
                <s:element name="deviceType" type="s:string" />
                <s:element name="driveCount" type="s:int" />
                <s:element name="driveWritingCount" type="s:int" />
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="extSize" type="s:int" />
                <s:element name="writePoolCount" type="s:int" />
                <s:element name="currentVolumeFreeSpace" type="s:long" />
                <s:element name="mirrorStatus" type="s:string" />
                <s:element name="compression" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatOSMData">
              <s:sequence>
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="extSize" type="s:int" />
                <s:element name="writePoolCount" type="s:int" />
                <s:element name="currentVolumeFreeSpace" type="s:long" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatVSKINData">
              <s:sequence>
                <s:element name="setStyle" type="s:int" />
                <s:element name="volumeType" type="s:int" />
                <s:element name="lastWriteVolume" type="s:string" />
                <s:element name="currentVolumeFreeSpaceKB" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatDASMManagedIVSEntry">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="1" name="setName" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="setType" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="lockState" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="transitSent" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="transitRead" type="s:string" />
                <s:element name="availableSpace" type="s:long" />
                <s:element name="usedSpace" type="s:long" />
                <s:element name="perfInstantSent" type="s:long" />
                <s:element name="perfAverageSent" type="s:long" />
                <s:element name="perfInstantRead" type="s:long" />
                <s:element name="perfAverageRead" type="s:long" />
                <s:element name="entriesNumber" type="s:long" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatDASMManagedIVSList">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSFSStatDASMManagedIVSEntry" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatDASMData">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="1" name="writePolicy" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="lastWriteSet" type="s:string" />
                <s:element name="statList" type="tns:WSFSStatDASMManagedIVSList" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatUnion">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="1" name="sdf" type="tns:WSFSStatSDFData"/>
                <s:element minOccurs="0" maxOccurs="1" name="udf" type="tns:WSFSStatUDFData"/>
                <s:element minOccurs="0" maxOccurs="1" name="uvfs" type="tns:WSFSStatUVFSData"/>
                <s:element minOccurs="0" maxOccurs="1" name="rpl" type="tns:WSFSStatRPLData"/>
                <s:element minOccurs="0" maxOccurs="1" name="cluster" type="tns:WSFSStatClusterData"/>
                <s:element minOccurs="0" maxOccurs="1" name="tdo" type="tns:WSFSStatTDOData"/>
                <s:element minOccurs="0" maxOccurs="1" name="osm" type="tns:WSFSStatOSMData"/>
                <s:element minOccurs="0" maxOccurs="1" name="vskin" type="tns:WSFSStatVSKINData"/>
                <s:element minOccurs="0" maxOccurs="1" name="gas" type="tns:WSFSStatDASMData"/>
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStat">
              <s:sequence>
                <s:element name="cacheRoot" type="s:string" />
                <s:element name="shareName" type="s:string" />
                <s:element name="maxPages" type="s:long" />
                <s:element name="primaryCapacityLow" type="s:long" />
                <s:element name="primaryCapacityHigh" type="s:long" />
                <s:element name="readReservedCapacity" type="s:long" />
                <s:element name="prefetchPriorityPeriod" type="s:long" />
                <s:element name="prefetchMode" type="s:string" />
                <s:element name="pageSize" type="s:long" />
                <s:element name="pagesPresent" type="s:long" />
                <s:element name="pagesPrimary" type="s:long" />
                <s:element name="pagesReplicated" type="s:long" />
                <s:element name="pagesArchived" type="s:long" />
                <s:element name="boosterPresent" type="s:long" />
                <s:element name="boosterPrimary" type="s:long" />
                <s:element name="boosterReplicated" type="s:long" />
                <s:element name="boosterArchived" type="s:long" />
                <s:element name="boosterTotal" type="s:long" />
                <s:element name="keepInCache" type="s:long" />
                <s:element name="sinceMountArchived" type="s:long" />
                <s:element name="sinceMountReplicated" type="s:long" />
                <s:element name="filesInCache" type="s:long" />
                <s:element name="directories" type="s:long" />
                <s:element name="streams" type="s:long" />
                <s:element name="streamsSpecial" type="s:long" />
                <s:element name="streamsSpecialPrimary" type="s:long" />
                <s:element name="dwarfs" type="s:long" />
                <s:element name="dwarfsPrimary" type="s:long" />
                <s:element name="delayedEvents" type="s:long" />
                <s:element name="accessReadWrite" type="s:string" />
                <s:element name="gracePeriodRO" type="s:long" />
                <s:element name="gracePeriodROHard" type="s:int" />
                <s:element name="retentionPeriod" type="s:long" />
                <s:element name="retentionPeriodHard" type="s:int" />
                <s:element name="wormFS" type="s:int" />
                <s:element name="wormFSHard" type="s:int" />
                <s:element name="wormRenameNo" type="s:int" />
                <s:element name="wormRenameNoHard" type="s:int" />
                <s:element name="digestType" type="s:int" />
                <s:element name="digestTypeHard" type="s:int" />
                <s:element name="encryptionType" type="s:int" />
                <s:element name="encryptionTypeHard" type="s:int" />
                <s:element name="retentionBackEndType" type="s:int" />
                <s:element name="retentionBackEndTypeHard" type="s:int" />
                <s:element name="updateATime" type="s:int" />
                <s:element name="updateATimeHard" type="s:int" />
                <s:element name="ownerAccessPeriod" type="s:int" />
                <s:element name="ownerAccessPeriodHard" type="s:int" />
                <s:element name="errorCondition" type="s:string" />
                <s:element name="stopOnCoveredError" type="s:int" />
                <s:element name="archiving" type="s:string" />
                <s:element name="migratorName" type="s:string" />
                <s:element name="spaceUsed" type="s:long" />
                <s:element name="spaceFree" type="s:long" />
                <s:element name="performanceMeasurement" type="s:string" />
                <s:element name="performanceChartsPresent" type="s:int" />
                <!--[RAM Disk info string]-->
                <s:element name="ramDiskInfo" type="s:string" />
                <s:element minOccurs="0" name="fsstatUnion" type="tns:WSFSStatUnion"/>
                <!-- mm_traffic data -->                
                <s:element minOccurs="0" name="trafficList" type="tns:WSFSStatTrafficDataList"/>
                
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFSStatTrafficDataList">
              <s:sequence>

                <s:element name="portCount" type="s:int" />
                <s:element minOccurs="0" maxOccurs="unbounded" name="trafficData" type="tns:WSFSStatTrafficDataEntry"/>
                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSFSStatTrafficDataEntry">
              <s:sequence>

                <s:element name="type" type="s:int" />
                <s:element name="cnodeNumber" type="s:long" />
                <s:element name="pageNumber" type="s:long" />
                <s:element name="presentCount" type="s:long" />
                <s:element name="primaryCount" type="s:long" />
                <s:element name="replicatedCount" type="s:long" />
                <s:element name="archivedCount" type="s:long" />
                <s:element name="transitionCount" type="s:long" />
                <s:element name="fileSize" type="s:long" />
                <s:element name="currentTimeUSec" type="s:long" />
                <s:element name="path" type="s:string" />
                
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSMMRamDiskRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="setName" type="s:string" />
                <s:element name="ramDiskInfo" type="s:string" />
            </s:sequence>
            </s:complexType> 
    
            <s:complexType name="WSMMRamDiskResponse">
              <s:sequence>
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>
              </s:sequence>
            </s:complexType>               
              
            <s:complexType name="WSVLConfPorts">
              <s:sequence>  
                <s:element name="scsi" type="s:int" />
                <s:element name="jb" type="s:int" />
                <s:element name="mm" type="s:int" />
                <s:element name="vl" type="s:int" />
                <s:element name="slave" type="s:int" />
                <s:element name="centera" type="s:int" />
                <s:element name="crypto" type="s:int" />
                <s:element name="qmage" type="s:int" />
                <s:element name="multicastPort" type="s:int" />
                <s:element name="multicastIP" type="s:string" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLConfSecurity">
              <s:sequence>  
                <s:element name="securityLevel" type="s:byte" />
                <s:element name="tokenExpTime" type="s:long" />
                <s:element name="remoteAdminMode" type="s:int" />
                <s:element name="allowedHosts" type="s:string" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLConfLog">
              <s:sequence>  
                <s:element name="maxSyslogSizeMB" type="s:int" />
                <s:element name="maxSyslogGenerations" type="s:int" />
                <s:element name="disableCollapse" type="s:byte" />
                <s:element name="printThreadID" type="s:byte" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLConfMisc">
              <s:sequence>  
                <s:element name="errorOnOffline" type="s:byte" />
                <s:element name="bigSpaceRoot" type="s:string" />
                <s:element name="minFsSpaceMB" type="s:long" />
                <s:element name="copyBufferSizeMB" type="s:int" />
                <s:element name="minErasedMedia" type="s:int" />
                <s:element name="minBlankMedia" type="s:int" />
                <s:element name="enableSnmpTraps" type="s:byte" />
                <s:element name="avProtection" type="s:byte" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSVLConfCopy">
              <s:sequence>  
                <s:element name="jbName" type="s:string" />
                <s:element name="beginSlotNumber" type="s:int" />
                <s:element name="endSlotNumber" type="s:int" />
                <s:element name="bufferCapacity" type="s:int" />
                <s:element name="delayedStartCopy" type="s:string" />
                <s:element name="delayedStartCompare" type="s:string" />
                <s:element name="compareAfterCopy" type="s:int" />
                <s:element name="wormRewritableMix" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLConfRequest">
              <s:sequence>  
                <s:element name="userToken" type="s:string" />
                <s:element name="cmd" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="confSecurity"  type="tns:WSVLConfSecurity" />
                <s:element minOccurs="0" maxOccurs="1" name="confPorts"  type="tns:WSVLConfPorts" />
                <s:element minOccurs="0" maxOccurs="1" name="confLog"  type="tns:WSVLConfLog" />
                <s:element minOccurs="0" maxOccurs="1" name="confMisc"  type="tns:WSVLConfMisc" />
                <s:element minOccurs="0" maxOccurs="1" name="confCopy"  type="tns:WSVLConfCopy" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSVLConfResponse">
              <s:sequence>  
                <s:element minOccurs="0" maxOccurs="1" name="confSecurity"  type="tns:WSVLConfSecurity" />
                <s:element minOccurs="0" maxOccurs="1" name="confPorts"  type="tns:WSVLConfPorts" />
                <s:element minOccurs="0" maxOccurs="1" name="confLog"  type="tns:WSVLConfLog" />
                <s:element minOccurs="0" maxOccurs="1" name="confMisc"  type="tns:WSVLConfMisc" />
                <s:element minOccurs="0" maxOccurs="1" name="confCopy"  type="tns:WSVLConfCopy" />
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>
              </s:sequence>
            </s:complexType>


    <!-- WSGetIVInfo structures for compatibility with 6.1 ver -->
            <s:complexType name="WSIVInfoSDFVolumeData">
              <s:sequence>
                <s:element name="deviceType" type="s:string" />
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="mediaNumber" type="s:int" />
                <s:element name="openedDeviceMaxNumber" type="s:int" />
                <s:element name="bufferSize" type="s:int" />
                <s:element name="compression" type="s:int" />
                <s:element name="mirrorState" type="s:int" />
                <s:element name="backupDeviceForWriting" type="s:string" />
                <s:element name="migratorStatus" type="s:unsignedInt" />
                <s:element name="hsyncControl" type="s:int" />
                <s:element name="hsyncKB" type="s:unsignedInt" />
                <s:element name="currentVolumeFreeSpaceKB" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoUDFVolumeData">
              <s:sequence>
                <s:element name="lastWriteVolume" type="s:string" />
                <s:element name="lastWriteAvailableBlocks" type="s:unsignedInt" />
                <s:element name="lastWriteBlockSize" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoUVFSVolumeData">
              <s:sequence>
                <s:element name="deviceType" type="s:string" />
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="mediaNumber" type="s:int" />
                <s:element name="openedDeviceMaxNumber" type="s:int" />
                <s:element name="bufferSize" type="s:int" />
                <s:element name="currentVolumeFreeSpaceKB" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoRPLVolumeData">
              <s:sequence>
                <s:element name="replicaCount" type="s:int" />
                <s:element name="replicaReadIndex" type="s:int" />
                <s:element name="onlineMask" type="s:int" />
                <s:element name="inSyncMask" type="s:int" />
                <s:element name="replicaBadMask" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoClusterVolumeData">
              <s:sequence>
                <s:element name="nodeCount" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoTDOVolumeData">
              <s:sequence>
                <s:element name="deviceType" type="s:string" />
                <s:element name="driveCount" type="s:int" />
                <s:element name="driveWritingCount" type="s:int" />
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="extSize" type="s:int" />
                <s:element name="writePoolCount" type="s:int" />
                <s:element name="currentVolumeFreeSpace" type="s:long" />
                <s:element name="mirrorStatus" type="s:long" />
                <s:element name="compression" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoOSMVolumeData">
              <s:sequence>
                <s:element name="deviceForWriting" type="s:string" />
                <s:element name="extSize" type="s:int" />
                <s:element name="writePoolCount" type="s:int" />
                <s:element name="currentVolumeFreeSpace" type="s:long" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoVSKINVolumeData">
              <s:sequence>
                <s:element name="setStyle" type="s:int" />
                <s:element name="volumeType" type="s:int" />
                <s:element name="lastWriteVolume" type="s:string" />
                <s:element name="currentVolumeFreeSpaceKB" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoVolumeUnion">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="1" name="sdf" type="tns:WSIVInfoSDFVolumeData"/>
                <s:element minOccurs="0" maxOccurs="1" name="udf" type="tns:WSIVInfoUDFVolumeData"/>
                <s:element minOccurs="0" maxOccurs="1" name="uvfs" type="tns:WSIVInfoUVFSVolumeData"/>
                <s:element minOccurs="0" maxOccurs="1" name="rpl" type="tns:WSIVInfoRPLVolumeData"/>
                <s:element minOccurs="0" maxOccurs="1" name="cluster" type="tns:WSIVInfoClusterVolumeData"/>
                <s:element minOccurs="0" maxOccurs="1" name="tdo" type="tns:WSIVInfoTDOVolumeData"/>
                <s:element minOccurs="0" maxOccurs="1" name="osm" type="tns:WSIVInfoOSMVolumeData"/>
                <s:element minOccurs="0" maxOccurs="1" name="vskin" type="tns:WSIVInfoVSKINVolumeData"/>
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfo">
              <s:sequence>
                <s:element name="isWSDevice" type="s:int" />
                <s:element name="isMounted" type="s:int" />
                <s:element name="mediaTypes" type="s:string" />
                <s:element name="setType" type="s:string" />
                <s:element name="cacheRoot" type="s:string" />
                <s:element name="shareName" type="s:string" />
                <s:element name="maxPages" type="s:long" />
                <s:element name="primaryCapacityLow" type="s:long" />
                <s:element name="primaryCapacityHigh" type="s:long" />
                <s:element name="readReservedCapacity" type="s:long" />
                <s:element name="prefetchPriorityPeriod" type="s:long" />
                <s:element name="prefetchMode" type="s:string" />
                <s:element name="pageSize" type="s:long" />
                <s:element name="pagesPresent" type="s:long" />
                <s:element name="pagesPrimary" type="s:long" />
                <s:element name="pagesReplicated" type="s:long" />
                <s:element name="pagesArchived" type="s:long" />
                <s:element name="keepInCache" type="s:int" />
                <s:element name="sinceMountArchived" type="s:long" />
                <s:element name="sinceMountReplicated" type="s:long" />
                <s:element name="filesInCache" type="s:long" />
                <s:element name="directories" type="s:long" />
                <s:element name="streams" type="s:long" />
                <s:element name="streamsSpecial" type="s:long" />
                <s:element name="dwarfs" type="s:long" />
                <s:element name="dwarfsPrimary" type="s:long" />
                <s:element name="delayedEvents" type="s:long" />
                <s:element name="accessReadWrite" type="s:string" />
                <s:element name="gracePeriodRO" type="s:long" />
                <s:element name="gracePeriodROHard" type="s:int" />
                <s:element name="retentionPeriod" type="s:long" />
                <s:element name="retentionPeriodHard" type="s:int" />
                <s:element name="wormFS" type="s:int" />
                <s:element name="wormFSHard" type="s:int" />
                <s:element name="wormRenameNo" type="s:int" />
                <s:element name="wormRenameNoHard" type="s:int" />
                <s:element name="digestType" type="s:int" />
                <s:element name="digestTypeHard" type="s:int" />
                <s:element name="encryptionType" type="s:int" />
                <s:element name="encryptionTypeHard" type="s:int" />
                <s:element name="retentionBackEndType" type="s:int" />
                <s:element name="retentionBackEndTypeHard" type="s:int" />
                <s:element name="updateATime" type="s:int" />
                <s:element name="updateATimeHard" type="s:int" />
                <s:element name="ownerAccessPeriod" type="s:int" />
                <s:element name="ownerAccessPeriodHard" type="s:int" />
                <s:element name="errorCondition" type="s:string" />
                <s:element name="stopOnCoveredError" type="s:int" />
                <s:element name="archiving" type="s:string" />
                <s:element name="migratorName" type="s:string" />
                <s:element minOccurs="0" name="volumeData" type="tns:WSIVInfoVolumeUnion"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSIVListEntry">
                <s:sequence>
                    <s:element name="name" type="s:string" />
                    <s:element name="defaultMountPoint" type="s:string" />
                    <s:element name="currentMountPoint" type="s:string" />
                    <s:element name="cachePath" type="s:string" />
                    <s:element name="setType" type="s:string" />
                    <s:element name="setId" type="s:string" />
                    <s:element name="setStatus" type="s:string" />
                    <s:element name="mediaTypes" type="s:string" />
                    <s:element name="mediaNumber" type="s:int" />
                    <s:element name="mediaOffline" type="s:int" />
                    <s:element name="mirrorFlag" type="s:int" />
                </s:sequence>
            </s:complexType>

            <s:complexType name="WSFileExtentCopyInfo">
              <s:sequence>
                <s:element name="isOffline" type="s:unsignedInt" />
                <s:element minOccurs="0" maxOccurs="1" name="mediaBarcode" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="offlineLocation" type="s:string" />
                <s:element name="copyNumber" type="s:unsignedInt" />
                <s:element minOccurs="0" maxOccurs="1" name="deviceName" type="s:string" />
                <s:element name="slotNumber" type="s:unsignedInt" />
                <s:element minOccurs="0" maxOccurs="1" name="side" type="s:string" />
                <s:element name="copyInSet" type="s:unsignedInt" />
                <s:element name="copyInDB" type="s:unsignedInt" />
                <s:element name="copyInDevice" type="s:unsignedInt" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSFileExtentCopiesList">
              <s:sequence>
                <s:element name="copies" type="tns:WSFileExtentCopyInfo" minOccurs="0" maxOccurs="unbounded" />
              </s:sequence>
            </s:complexType>
              
            <s:complexType name="WSFileExtentInfo">
                <s:sequence>
                  <s:element name="offset" type="s:unsignedLong" />
                  <s:element name="size" type="s:unsignedLong" />
                  <s:element name="vol" type="s:unsignedInt" />
                  <s:element name="pos" type="s:unsignedInt" />
                  <s:element name="isOffline" type="s:unsignedInt" />
                  <s:element minOccurs="0" maxOccurs="1" name="mediaBarcode" type="s:string" />
                  <s:element minOccurs="0" maxOccurs="1" name="libraryName" type="s:string" />
                  <s:element minOccurs="0" maxOccurs="1" name="offlineLocation" type="s:string" />
                  <s:element name="extentCopies" type="tns:WSFileExtentCopiesList" />
                  <s:element name="copiesCount" type="s:unsignedInt" />                  
                </s:sequence>
            </s:complexType>
            <s:complexType name="WSFileExtentsList">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="unbounded" name="extent" type="tns:WSFileExtentInfo" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFileFlocExtentInfo">
              <s:sequence>
                <s:element name="extOffset" type="s:unsignedLong" />
                <s:element name="extSize" type="s:unsignedLong" />
                <s:element name="extVol" type="s:unsignedInt" />
                <s:element minOccurs="0" maxOccurs="1" name="barCode" type="s:string" />                
                <s:element minOccurs="0" maxOccurs="1" name="offlineLocation" type="s:string" />
                <s:element minOccurs="0" maxOccurs="1" name="deviceName" type="s:string" />
                <s:element name="slotNumber" type="s:unsignedInt" />
                <s:element name="extPos" type="s:unsignedInt" />                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSFileFlocExtentsList">
              <s:sequence>
                <s:element name="extent" type="tns:WSFileFlocExtentInfo" maxOccurs="unbounded" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSFileList">
              <s:sequence>
                <s:element name="fileName" type="s:string" maxOccurs="unbounded" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSIVList">
	            <s:sequence>
                <s:element name="volumes" type="tns:WSIVListEntry" maxOccurs="unbounded" />
              </s:sequence>
            </s:complexType>

    <!-- 
        For detailed description of values returned with
        fields "stateAccess" and "stateAccessDetailed" in structure "WSFileInfo"
        please see WEB service documentation.
    -->
            <s:complexType name="WSFileInfo">
                <s:sequence>
                    <s:element name="size" type="s:unsignedLong" />
                    <s:element name="mode" type="s:int" />
                    <s:element name="uid" type="s:unsignedInt" />
                    <s:element name="gid" type="s:unsignedInt" />
                    <s:element name="nlink" type="s:unsignedInt" />
                    <s:element name="flags" type="s:int" />
                    <s:element name="presentCount" type="s:unsignedLong" />
                    <s:element name="primaryCount" type="s:unsignedLong" />
                    <s:element name="replicatedCount" type="s:unsignedLong" />
                    <s:element name="archivedCount" type="s:unsignedLong" />
                    <s:element name="pageSize" type="s:unsignedLong" />
                    <s:element name="aTime" type="s:unsignedLong" />
                    <s:element name="mTime" type="s:unsignedLong" />
                    <s:element name="cTime" type="s:unsignedLong" />
                    <s:element name="crTime" type="s:unsignedLong" />
                    <s:element name="cmTime" type="s:unsignedLong" />
                    <s:element name="onOff" type="s:unsignedInt" />
                    <s:element name="retentionEndTime" type="s:unsignedLong" />
                    <s:element minOccurs="0" maxOccurs="1" name="digest" type="s:string" />
                    <s:element minOccurs="0" maxOccurs="1" name="objectId" type="s:string" />
                    <s:element name="objectIdLength" type="s:unsignedShort" />
                    <s:element name="digestType" type="s:unsignedShort" />
                    <s:element name="encryptionType" type="s:unsignedShort" />
                    <s:element name="cryptoFlags" type="s:short" />
                    <s:element name="flocExtents" type="tns:WSFileExtentsList" />
                    <s:element name="extCount" type="s:int" />
                    <s:element minOccurs="0" maxOccurs="1" name="flocError" type="s:string" />
                    <s:element name="stateAccess" type="s:unsignedInt" />
                    <s:element name="stateAccessDetailed" type="s:unsignedInt" />
                </s:sequence>
            </s:complexType>

            <s:complexType name="WSFileStatInfo">
              <s:sequence>
                <s:element name="cnode" type="s:long" />
                <s:element name="barCode" type="s:string" />
                <s:element name="size" type="s:unsignedLong" />
                <s:element name="mode" type="s:int" />
                <s:element name="uid" type="s:unsignedInt" />
                <s:element name="gid" type="s:unsignedInt" />
                <s:element name="nlink" type="s:unsignedInt" />
                <s:element name="ino" type="s:long" />
                <s:element name="flags" type="s:int" />
                <s:element name="presentCount" type="s:unsignedLong" />
                <s:element name="primaryCount" type="s:unsignedLong" />
                <s:element name="replicatedCount" type="s:unsignedLong" />
                <s:element name="archivedCount" type="s:unsignedLong" />
                <s:element name="dwarfId" type="s:unsignedLong" />
                <s:element name="aTime" type="s:unsignedLong" />
                <s:element name="mTime" type="s:unsignedLong" />
                <s:element name="cTime" type="s:unsignedLong" />
                <s:element name="crTime" type="s:unsignedLong" />
                <s:element name="cmTime" type="s:unsignedLong" />
                <s:element name="onOff" type="s:unsignedInt" />
                <s:element name="retentionEndTime" type="s:unsignedLong" />
                <s:element name="digest" type="s:string" />
                <s:element name="objectId" type="s:string" />
                <s:element name="objectIdLength" type="s:unsignedShort" />
                <s:element name="digestType" type="s:unsignedShort" />
                <s:element name="encryptionType" type="s:unsignedShort" />
                <s:element name="cryptoFlags" type="s:short" />                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSDirEntryInfo">
                <s:sequence>
                    <s:element name="name" type="s:string" />
                    <s:element name="statMode" type="s:unsignedInt" />
                    <s:element minOccurs="0" name="fileInfo" type="tns:WSFileInfo"/>
                </s:sequence>
            </s:complexType>
            <s:complexType name="WSDirEntryList">
	            <s:sequence>
        	            <s:element name="direntry" type="tns:WSDirEntryInfo" maxOccurs="unbounded" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSReadDirInfo">
                <s:sequence>
                    <s:element name="count" type="s:unsignedLong" />
                    <s:element name="lastOffset" type="s:unsignedLong" />
                    <s:element name="entries" type="tns:WSDirEntryList" />
                </s:sequence>
            </s:complexType>

            <s:complexType name="WSDirFilesEntryInfo">
              <s:sequence>
                <s:element name="name" type="s:string" />
                <s:element minOccurs="0" name="fileInfo" type="tns:WSFileStatInfo"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSDirFilesEntryList">
              <s:sequence>
                <s:element name="direntry" type="tns:WSDirFilesEntryInfo" maxOccurs="unbounded" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSReadDirFilesInfo">
              <s:sequence>
                <s:element name="totalEntriesNumber" type="s:string" />
                <s:element name="count" type="s:unsignedLong" />
                <s:element name="lastOffset" type="s:long" />
                <s:element name="entries" type="tns:WSDirFilesEntryList" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSServerInfo">
                <s:sequence>
                    <s:element name="qServerStatus" type="s:int" />
                    <s:element name="mmServerStatus" type="s:int" />
                    <s:element name="jbServerStatus" type="s:int" />
                    <s:element name="qmageServerStatus" type="s:int" />
                    <s:element name="scsiServerStatus" type="s:int" />
                    <s:element name="crptServerStatus" type="s:int" />
                    <s:element name="vlServerStatus" type="s:int" />
                </s:sequence>
            </s:complexType>
            <s:complexType name="WSServerInfoEx">
                <s:sequence>
                    <s:element name="qServerStatus" type="s:int" />
                    <s:element name="mmServerStatus" type="s:int" />
                    <s:element name="jbServerStatus" type="s:int" />
                    <s:element name="scsiServerStatus" type="s:int" />
                    <s:element name="crptServerStatus" type="s:int" />
                    <s:element name="qs3ServerStatus" type="s:int" />
                    <s:element name="vlServerStatus" type="s:int" />
                    <s:element name="httpPort" type="s:int" />
                    <s:element name="httpsPort" type="s:int" />
                    <s:element name="rawDevicesAllowed" type="s:int" />
                    <s:element name="osVersionInfo" type="s:string" />
                    <s:element name="productName" type="s:string" />
                    <s:element name="qASMRootPath" type="s:string" />
                    <s:element name="userRole" type="s:string" />
                    <s:element name="maskPersonality" type="s:int" />
                    <s:element name="maskPersonalityStr" type="s:string" />
                </s:sequence>
            </s:complexType>
            <s:complexType name="WSRetrieveInfo">
                <s:sequence>
                    <s:element name="sourcePath" type="s:string" />
                    <s:element name="targetPath" type="s:string" />
                    <s:element name="startTime" type="s:time" />
                    <s:element name="duration" type="s:time" />
                    <s:element name="startOffset" type="s:unsignedLong" />
                    <s:element name="size" type="s:unsignedLong" />
                </s:sequence>
            </s:complexType>
            <s:complexType name="WSRetrieveFileStatusInfo">
                <s:sequence>
                    <s:element name="uid" type="s:string" />
                    <s:element name="statusCode" type="s:int" />
                    <s:element name="errorCode" type="s:int" />
                    <s:element name="errorString" type="s:string" />
                </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetVLInfoRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="sDirPath" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetVLInfoResponse">
                    <s:sequence>
                        <s:element name="status" type="s:int"/>
                        <s:element minOccurs="0" name="info" type="tns:WSVLSet"/>
                    </s:sequence>
            </s:complexType>

            <!-- WSIVInfoExtended data structures -->

            <s:complexType name="WSIVSDFMedia">
              <s:sequence>

                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVUDFMedia">
              <s:sequence>

                <s:element name="logVolIdA" type="s:string" />
                <s:element name="logVolIdB" type="s:string" />
                <s:element name="dirIdA" type="s:string" />
                <s:element name="dirIdB" type="s:string" />
                <s:element name="onDiskTimeA" type="s:long" />
                <s:element name="onDiskTimeB" type="s:long" />
                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />
                <s:element name="flags" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVUVFSMedia">
              <s:sequence>

                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />
                <s:element name="dirNameA" type="s:string" />
                <s:element name="dirNameB" type="s:string" />
                <s:element name="dirIdA" type="s:string" />
                <s:element name="dirIdB" type="s:string" />
                <s:element name="flagsA" type="s:int" />
                <s:element name="flagsB" type="s:int" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVAAFSMedia">
              <s:sequence>

                <s:element name="pollUUID" type="s:string" />
                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVLTFSMedia">
              <s:sequence>

                <s:element name="gbPerSide" type="s:unsignedInt" />
                <s:element name="blockSize" type="s:unsignedInt" />
                <s:element name="volSerial" type="s:string" />
                <s:element name="volName" type="s:string" />
                <s:element name="volUUID" type="s:string" />
                <s:element name="sequenceNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVSCASMedia">
              <s:sequence>

                <s:element name="sequenceNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />
                <s:element name="partId" type="s:long" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVHCAPMedia">
              <s:sequence>

                <s:element name="partitionName" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVRPLMedia">
              <s:sequence>

                <s:element name="flags" type="s:int" />
                <s:element name="level" type="s:long" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVTDOMedia">
              <s:sequence>

                <s:element name="sequenceNumberA" type="s:unsignedShort" />
                <s:element name="sequenceNumberB" type="s:unsignedShort" />
                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVXAMedia">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSIVAzureMedia">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVCloudMedia">
              <s:sequence>

                <s:element name="sequenceNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />
                <s:element name="partName" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVVSKINMedia">
              <s:sequence>

                <s:element name="volumeId" type="s:string" />
                <s:element name="dirName" type="s:string" />
                <s:element name="totalKb" type="s:long" />
                <s:element name="volumeNumber" type="s:unsignedShort" />
                <s:element name="mounted" type="s:byte" />
                <s:element name="flags" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVATMMedia">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVOSTKMedia">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVS3Media">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSIVS3DMedia">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVOHCPMedia">
              <s:sequence>

                <s:element name="partName" type="s:string" />
                <s:element name="mounted" type="s:byte" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVTARMedia">
              <s:sequence>

                <s:element name="mountedA" type="s:byte" />
                <s:element name="mountedB" type="s:byte" />
                <s:element name="dadBarcode" type="s:string" />

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoMediaSpecific">
              <s:sequence>

                <s:element minOccurs="0" maxOccurs="1" name="sdf" type="tns:WSIVSDFMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="udf" type="tns:WSIVUDFMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="uvfs" type="tns:WSIVUVFSMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="aafs" type="tns:WSIVAAFSMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="ltfs" type="tns:WSIVLTFSMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="scas" type="tns:WSIVSCASMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="hcap" type="tns:WSIVHCAPMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="rpl" type="tns:WSIVRPLMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="tdo" type="tns:WSIVTDOMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="xa" type="tns:WSIVXAMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="cloud" type="tns:WSIVCloudMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="vskin" type="tns:WSIVVSKINMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="atm" type="tns:WSIVATMMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="ostk" type="tns:WSIVOSTKMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="s3" type="tns:WSIVS3Media"/>
                <s:element minOccurs="0" maxOccurs="1" name="s3d" type="tns:WSIVS3DMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="ohcp" type="tns:WSIVOHCPMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="tar" type="tns:WSIVTARMedia"/>
                <s:element minOccurs="0" maxOccurs="1" name="az" type="tns:WSIVAzureMedia"/>

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoMediaList">
              <s:sequence>

                <s:element name="onOff" type="s:byte" />
                <s:element name="deviceName" type="s:string" />
                <s:element name="slotNumber" type="s:unsignedInt" />
                <s:element name="offline" type="s:string" />
                <s:element name="barcode" type="s:string" />
                <s:element name="insetKbPerSideA" type="s:long" />
                <s:element name="insetKbPerSideB" type="s:long" />
                <s:element name="insetFlags" type="s:unsignedInt" />
                <s:element name="insetCopyNumber" type="s:unsignedInt" />
                <s:element minOccurs="0" maxOccurs="1" name="specific" type="tns:WSIVInfoMediaSpecific"/>

              </s:sequence>
            </s:complexType>

            <s:complexType name="WSIVInfoExtended">
              <s:sequence>
                <s:element name="isWSDevice" type="s:int" />
                <s:element name="isMounted" type="s:int" />
                <s:element name="mediaTypes" type="s:string" />
                <s:element name="setType" type="s:string" />
                <!-- Maximum number of media per set is related to constant value
                     QS_VL_MAX_MEDIA_PER_SET -->
                <s:element name="maxMediaPerSet" type="s:string" />

                <!-- preferred file system block size -->
                <s:element name="preferredFSBlockSize" type="s:unsignedInt" />

                <!-- fundamental file system block size -->
                <s:element name="fundamentalFSBlockSize" type="s:unsignedInt" />
                
                <!-- total number of blocks of f_frsize on fs -->
                <s:element name="totalFSBlocks" type="s:string" />
                
                <!-- total number of free blocks of f_frsize -->
                <s:element name="totalFSFreeBlocks" type="s:string" />
                
                <!-- number of free blocks avail to non-superuser -->
                <s:element name="totalNonSuperUserFreeBlocks" type="s:string" />

                <!-- total number of file nodes (inodes) -->
                <s:element name="totalINodesNumber" type="s:string" />

                <!-- total number of free file nodes -->
                <s:element name="totalFileNodesNumber" type="s:string" />

                <!-- number of free nodes avail to non-superuser -->
                <s:element name="totalNonSuperUserFreeNodes" type="s:string" />
                
                <s:element name="cacheRoot" type="s:string" />
                <s:element name="shareName" type="s:string" />
                <s:element name="maxPages" type="s:long" />
                <s:element name="primaryCapacityLow" type="s:long" />
                <s:element name="primaryCapacityHigh" type="s:long" />
                <s:element name="readReservedCapacity" type="s:long" />
                <s:element name="prefetchPriorityPeriod" type="s:long" />
                <s:element name="prefetchMode" type="s:string" />
                <s:element name="pageSize" type="s:long" />
                <s:element name="pagesPresent" type="s:long" />
                <s:element name="pagesPrimary" type="s:long" />
                <s:element name="pagesReplicated" type="s:long" />
                <s:element name="pagesArchived" type="s:long" />
                <s:element name="keepInCache" type="s:int" />
                <s:element name="sinceMountArchived" type="s:long" />
                <s:element name="sinceMountReplicated" type="s:long" />
                <s:element name="filesInCache" type="s:long" />
                <s:element name="directories" type="s:long" />
                <s:element name="streams" type="s:long" />
                <s:element name="streamsSpecial" type="s:long" />
                <s:element name="dwarfs" type="s:long" />
                <s:element name="dwarfsPrimary" type="s:long" />
                <s:element name="delayedEvents" type="s:long" />
                <s:element name="accessReadWrite" type="s:string" />
                <s:element name="gracePeriodRO" type="s:long" />
                <s:element name="gracePeriodROHard" type="s:int" />
                <s:element name="retentionPeriod" type="s:long" />
                <s:element name="retentionPeriodHard" type="s:int" />
                <s:element name="wormFS" type="s:int" />
                <s:element name="wormFSHard" type="s:int" />
                <s:element name="wormRenameNo" type="s:int" />
                <s:element name="wormRenameNoHard" type="s:int" />
                <s:element name="digestType" type="s:int" />
                <s:element name="digestTypeHard" type="s:int" />
                <s:element name="encryptionType" type="s:int" />
                <s:element name="encryptionTypeHard" type="s:int" />
                <s:element name="retentionBackEndType" type="s:int" />
                <s:element name="retentionBackEndTypeHard" type="s:int" />
                <s:element name="updateATime" type="s:int" />
                <s:element name="updateATimeHard" type="s:int" />
                <s:element name="ownerAccessPeriod" type="s:int" />
                <s:element name="ownerAccessPeriodHard" type="s:int" />
                <s:element name="errorCondition" type="s:string" />
                <s:element name="stopOnCoveredError" type="s:int" />
                <s:element name="archiving" type="s:string" />
                <s:element name="migratorName" type="s:string" />
                <s:element minOccurs="0" name="volumeData" type="tns:WSFSStatUnion"/>
                <!-- Media list -->
                <s:element minOccurs="0" maxOccurs="unbounded" name="mediaList" type="tns:WSIVInfoMediaList"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetIVInfoExtendedRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="sDirPath" type="s:string" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSGetIVInfoExtendedResponse">
              <s:sequence>
                <s:element name="errorCode" type="s:int"/>
                <s:element name="errorDescription" type="s:string"/>
                <s:element minOccurs="0" name="infoExtended" type="tns:WSIVInfoExtended"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetIVInfoRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="sDirPath" type="s:string" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetIVInfoResponse">
              <s:sequence>
                <s:element name="status" type="s:int"/>
                <s:element minOccurs="0" name="info" type="tns:WSIVInfo"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetFSStatRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="sDirPath" type="s:string" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetFSStatResponse">
              <s:sequence>
                <s:element name="errorCode" type="s:int"/>
                <s:element name="errorDescription" type="s:string"/>
                <s:element minOccurs="0" name="info" type="tns:WSFSStat"/>
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetFileInfoRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="sFileFullPath" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetFileInfoResponse">
                    <s:sequence>
                        <s:element name="status" type="s:int"/>
                        <s:element minOccurs="0" name="info" type="tns:WSFileInfo"/>
                    </s:sequence>
            </s:complexType>

            <s:complexType name="WSFileStatEntry">
              <s:sequence>
                <s:element name="filename" type="s:string"/>
                <s:element name="size" type="s:unsignedLong" />
                <s:element name="mode" type="s:int" />
                <s:element name="uid" type="s:unsignedInt" />
                <s:element name="gid" type="s:unsignedInt" />
                <s:element name="nlink" type="s:unsignedInt" />
                <s:element name="flags" type="s:int" />
                <s:element name="presentCount" type="s:unsignedLong" />
                <s:element name="primaryCount" type="s:unsignedLong" />
                <s:element name="replicatedCount" type="s:unsignedLong" />
                <s:element name="archivedCount" type="s:unsignedLong" />
                <s:element name="pageSize" type="s:unsignedLong" />
                <s:element name="aTime" type="s:unsignedLong" />
                <s:element name="mTime" type="s:unsignedLong" />
                <s:element name="cTime" type="s:unsignedLong" />
                <s:element name="crTime" type="s:unsignedLong" />
                <s:element name="cmTime" type="s:unsignedLong" />
                <s:element name="onOff" type="s:unsignedInt" />
                <s:element name="retentionEndTime" type="s:unsignedLong" />
                <s:element name="digest" type="s:string" />
                <s:element name="objectId" type="s:string" />
                <s:element name="objectIdLength" type="s:unsignedShort" />
                <s:element name="digestType" type="s:unsignedShort" />
                <s:element name="encryptionType" type="s:unsignedShort" />
                <s:element name="cryptoFlags" type="s:short" />
                <!--s:element name="flocExtents" type="tns:WSFileExtentsList" />
                <s:element name="extCount" type="s:int" />
                <s:element name="flocError" type="s:string" /-->
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSFileStatList">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="unbounded" name="fstatEntry" type="tns:WSFileStatEntry" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetGroupFileInfoRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <!--[path to directory where files of interest are located]-->
                <s:element name="fullPath" type="s:string" />
                <!--[array of filenames]-->
                <s:element name="fileList" type="tns:WSFileList" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetGroupFileInfoResponse">
              <s:sequence>
                <s:element name="errorCode" type="s:unsignedInt"/>
                <s:element name="errorDescription" type="s:string" />
                <s:element minOccurs="0" name="fstatList" type="tns:WSFileStatList"/>
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSFileRetentionEntry">
              <s:sequence>
                <s:element name="filename" type="s:string"/>
                <!-- "0" means retention period for the 'filename' has expired -->
                <s:element name="retention" type="s:byte" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSFileRetentionList">
              <s:sequence>
                <s:element minOccurs="0" maxOccurs="unbounded" name="fretentionEntry" type="tns:WSFileRetentionEntry" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetGroupFileRetentionInfoRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <!--[path to directory where files of interest are located]-->
                <s:element name="fullPath" type="s:string" />
                <!--[array of filenames]-->
                <s:element name="fileList" type="tns:WSFileList" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetGroupFileRetentionInfoResponse">
              <s:sequence>
                <s:element name="errorCode" type="s:unsignedInt"/>
                <s:element name="errorDescription" type="s:string" />
                <s:element minOccurs="0" name="fretentionList" type="tns:WSFileRetentionList"/>
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetServerInfoRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetServerInfoResponse">
                    <s:sequence>
                        <s:element name="status" type="s:int"/>
                        <s:element minOccurs="0" name="info" type="tns:WSServerInfo"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetServerInfoExRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetServerInfoExResponse">
                    <s:sequence>
                        <s:element name="error" type="s:unsignedInt"/>
                        <s:element name="description" type="s:string" />
                        <s:element minOccurs="0" name="info" type="tns:WSServerInfoEx"/>
                    </s:sequence>
            </s:complexType>

            <s:complexType name="WSGetServerFeaturesRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetServerFeaturesResponse">
                    <s:sequence>
                        <s:element name="error" type="s:unsignedInt"/>
                        <s:element name="description" type="s:string" />
                        <s:element name="boosterRAMDisk" type="s:int" />
                    </s:sequence>
            </s:complexType>

            <s:complexType name="WSRetrieveFileRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="info" type="tns:WSRetrieveInfo" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSRetrieveFileResponse">
                    <s:sequence>
                        <s:element name="status" type="s:int"/>
                        <s:element name="uid" type="s:string"/>
                    </s:sequence>
                </s:complexType>
            <s:complexType name="WSRetrieveFileStatusRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="uid" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSRetrieveFileStatusResponse">
                    <s:sequence>
                        <s:element name="status" type="tns:WSRetrieveFileStatusInfo"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchFileRetrieveRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="jobPriority" type="s:unsignedInt" />
                        <s:element name="fileCount" type="s:unsignedLong" />
                        <s:element name="fileList" type="tns:WSFileList" />
                        <s:element name="targetDir" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchFileRetrieveResponse">
                    <s:sequence>
                        <s:element name="jobId" type="s:unsignedLong"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchFileStoreRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="jobPriority" type="s:unsignedInt" />
                        <s:element name="fileCount" type="s:unsignedLong" />
                        <s:element name="fileList" type="tns:WSFileList" />
                        <s:element name="targetDir" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchFileStoreResponse">
                    <s:sequence>
                        <s:element name="jobId" type="s:unsignedLong"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchJobStatusRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="jobId" type="s:unsignedLong" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchJobStatusResponse">
                    <s:sequence>
                        <s:element name="jobStatus" type="s:unsignedInt"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchJobObjectStatusRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="jobId" type="s:unsignedLong" />
                        <s:element name="jobObjectName" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSBatchJobObjectStatusResponse">
                    <s:sequence>
                        <s:element name="jobObjectStatus" type="s:unsignedInt"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSUserLoginRequest">
                    <s:sequence>
                        <s:element name="userName" type="s:string" />
                        <s:element name="userPassword" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSUserLoginResponse">
                    <s:sequence>
                        <s:element name="userToken" type="s:string"/>
                        <s:element name="wsdlVersion" type="s:string" minOccurs="1" maxOccurs="1" default="2.0.0.0" />
                        <s:element name="result" type="s:int"/>
                        <s:element name="resultString" type="s:string"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSUserLogoutRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSUserLogoutResponse">
                    <s:sequence>
                        <s:element name="result" type="s:int"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSReadDirRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                        <s:element name="directoryName" type="s:string" />
                        <s:element name="maxEntries" type="s:unsignedLong" />
                        <s:element name="lastOffset" type="s:unsignedLong" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSReadDirResponse">
                    <s:sequence>
                        <s:element name="status" type="s:int"/>
                        <s:element minOccurs="0" name="info" type="tns:WSReadDirInfo"/>
                    </s:sequence>
            </s:complexType>

            <!--MM Server requests-->
            <s:complexType name="WSReadDirFilesRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="contextId" type="s:string" />
                <s:element name="directoryName" type="s:string" />
                <s:element name="maxEntries" type="s:unsignedLong" />
                <s:element name="lastOffset" type="s:unsignedLong" />
                <s:element name="onOff" type="s:byte" />
              </s:sequence>
            </s:complexType>
            <s:complexType name="WSReadDirFilesResponse">
              <s:sequence>
                <s:element name="contextId" type="s:string" />
                <s:element name="status" type="s:int"/>
                <s:element minOccurs="0" name="info" type="tns:WSReadDirFilesInfo"/>
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSMMArchivingRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />

                <!--name of Set or mount point-->
                <s:element name="setName" type="s:string" />

                <!--[-a agetime    Archive all delayed events created before agetime]-->
                <s:element name="agetime" type="s:unsignedInt" />

                <!--[-l   Archive delayed events until the number of primary pages in the cache
                          is equal to or less than the low_primary_capacity value]-->
                <s:element name="archiveDelayedEvents" type="s:unsignedInt" />

                <!--[-e   Archive all the delayed events]-->
                <s:element name="archiveAllDelayedEvents" type="s:unsignedInt" />
                
                <!--[-s   Stop archiving. MCFS and migrator synchronize everything archived
                          after the last sync point after which archiving switches to the "stopped" state]-->
                <s:element name="stopArchiving" type="s:unsignedInt" />
                
                <!--[-d   Disable archiving. Same as "stop" but without synchronizing]-->
                <s:element name="disableArchiving" type="s:unsignedInt" />
                
                <!--[-w   Wait for archiving to stop]-->
                <s:element name="waitArchiving" type="s:unsignedInt" />
                
                <!--[-j delayed_job_name. Specifies the job name used to identify the job in the delayed job list]-->
                <s:element name="delayedJobName" type="s:string" />
                
                <!--[-S   Schedules archiving by cron time. Cron schedule: Minute Hour Day Month Weekday]-->
                <s:element name="scheduleArchiving" type="s:string" />
                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSMMArchivingResponse">
              <s:sequence>
                <s:element name="errorCode" type="s:unsignedInt"/>
                <s:element name="errorDescription" type="s:string" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetIVListRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetIVListResponse">
                    <s:sequence>
                        <s:element name="count" type="s:unsignedInt"/>
                        <s:element name="status" type="s:int"/>
                        <s:element minOccurs="0" name="volumes" type="tns:WSIVList"/>
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetIVListExRequest">
                    <s:sequence>
                        <s:element name="userToken" type="s:string" />
                    </s:sequence>
            </s:complexType>
            <s:complexType name="WSGetIVListExResponse">
                    <s:sequence>
                        <s:element name="errorCode" type="s:unsignedInt"/>
                        <s:element name="errorDescription" type="s:string" />
                        <s:element minOccurs="0" name="volumes" type="tns:WSIVList"/>
                    </s:sequence>
           </s:complexType>
           <s:complexType name="WSListFilesByTimeInfo">
            <s:sequence>              
              <s:element name="fpath" type="s:string" />
              <s:element name="ftype" type="s:string" />
              <s:element name="UID" type="s:unsignedLong" />
              <s:element name="GID" type="s:unsignedLong" />
              <s:element name="size" type="s:unsignedLong" />
              <s:element name="atime" type="s:string" />
              <s:element name="ctime" type="s:string" />
              <s:element name="mtime" type="s:string" />
              <s:element name="crtime" type="s:string" />
              <s:element name="cmtime" type="s:string" />
              <s:element name="generation" type="s:string" />
              <s:element name="volume" type="s:unsignedLong" />
              <s:element name="position" type="s:unsignedLong" />              
            </s:sequence>
          </s:complexType>          
          <s:complexType name="WSFileSetEntryByTimeList">
            <s:sequence>
              <s:element name="fileSetEntry" type="tns:WSListFilesByTimeInfo" maxOccurs="unbounded" />
            </s:sequence>
          </s:complexType>
          <s:complexType name="WSArrayFilesByTime">
            <s:sequence>
              <s:element name="count" type="s:unsignedLong" />
              <s:element name="lastOffset" type="s:unsignedLong" />
              <s:element name="entries" type="tns:WSFileSetEntryByTimeList" />
            </s:sequence>
          </s:complexType>
          <s:complexType name="WSListFilesByTimeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="maxEntries" type="s:unsignedLong" />
              <s:element name="lastOffset" type="s:unsignedLong" />
              <s:element name="setName" type="s:string" />
              <s:element name="minTime" type="s:string" />
              <s:element name="maxTime" type="s:string" />
              <s:element name="timeType" type="s:int" />
              <s:element name="listStreams" type="s:int" />
              <s:element name="listSymlinks" type="s:int" />
            </s:sequence>
          </s:complexType>
          <s:complexType name="WSListFilesByTimeResponse">
            <s:sequence>
              <s:element name="status" type="s:int"/>
              <s:element minOccurs="0" name="info" type="tns:WSArrayFilesByTime"/>              
            </s:sequence>
          </s:complexType>  
          <s:complexType name="WSRetrieveFilesSortedEntry">
            <s:sequence>              
              <s:element name="fpath" type="s:string" maxOccurs="unbounded" />
            </s:sequence>
          </s:complexType>    
          <s:complexType name="WSRetrieveFilesSortedListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:string" />
              <s:element name="maxEntries" type="s:unsignedLong" />
              <s:element name="count" type="s:unsignedLong" />
              <s:element minOccurs="0" name="entries" type="tns:WSRetrieveFilesSortedEntry" />
            </s:sequence>
          </s:complexType>
          <s:complexType name="WSFileSortedInfoWithExtent">
            <s:sequence>
              <s:element name="fileName" type="s:string" />
              <s:element name="errorCode" type="s:int" />
              <s:element name="errorMessage" type="s:string" />
              <s:element name="flocExtent" type="tns:WSFileFlocExtentInfo" />
            </s:sequence>
          </s:complexType>
          <s:complexType name="WSFileSortedByFlocInfo">
            <s:sequence>
              <s:element name="hostName" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="relativePath" type="s:string" />
              <s:element name="volume" type="s:int" />
              <s:element name="position" type="s:unsignedLong" />
              <s:element name="mountPoint" type="s:string" />
            </s:sequence>
          </s:complexType>
          <s:complexType name="WSRetrieveFilesSortedListResponse">
            <s:sequence>
              <s:element name="contextId" type="s:string" />
              <s:element name="status" type="s:int"/>
              <s:element name="extentsCount" type="s:unsignedLong" />
              <s:element minOccurs="0" maxOccurs="unbounded" name="extentEntries" type="tns:WSFileSortedInfoWithExtent"/>
              <s:element name="flocCount" type="s:unsignedLong" />
              <s:element minOccurs="0" maxOccurs="unbounded" name="flocEntries" type="tns:WSFileSortedByFlocInfo"/>
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetFilesSortedListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[array of filenames with paths]-->
              <s:element name="fileList" type="tns:WSFileList" />
            </s:sequence>
          </s:complexType>
          <s:complexType name="WSGetFilesSortedListResponse">
            <s:sequence>
              <s:element name="errorCode" type="s:unsignedInt"/>
              <s:element name="errorDescription" type="s:string" />
              <s:element minOccurs="0" name="sortedList" type="tns:WSFileList"/>
            </s:sequence>
          </s:complexType>
          
          <s:complexType name="WSGetElementStatusRequest">
            <s:sequence>

              <s:element name="userToken" type="s:string" />
              <s:element name="jukebox" type="s:string" />
              
              <!-- 
                VARIANT #1
              -->

              <s:element name="flagDevices" type="s:unsignedInt" />

              <!-- 
                VARIANT #2
              -->
              
              <s:element name="statusAll" type="s:byte" />
              <s:element name="statusCarriers" type="s:byte" />
              <s:element name="statusMailslots" type="s:byte" />
              <s:element name="statusShelves" type="s:byte" />
              <s:element name="statusDrives" type="s:byte" />
              <s:element name="statusPrinters" type="s:byte" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusCarriersEntry">
            <s:sequence>
              <s:element name="index" type="s:int" />
              <s:element name="full" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusCarriersList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSGetElementStatusCarriersEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusMailslotsEntry">
            <s:sequence>    
              <s:element name="full" type="s:string" />
              <s:element name="elemStatusFlags" type="s:long" />
              <s:element name="barcode" type="s:string" />
              <s:element name="inLongOp" type="s:int" />
              <s:element name="state" type="s:string" />
              <s:element name="status" type="s:string" />
              <s:element name="statusDetailed" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusMailslotsList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSGetElementStatusMailslotsEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusShelvesEntry">
            <s:sequence>

              <s:element name="index" type="s:int" />
              <s:element name="flags" type="s:string" />
              <s:element name="onOff" type="s:string" />
              <s:element name="full" type="s:string" />
              <s:element name="state" type="s:string" />
              <s:element name="status" type="s:string" />
              <s:element name="healthA" type="s:string" />
              <s:element name="healthB" type="s:string" />
              <s:element name="jobPriority" type="s:string" />
              <s:element name="driveNumber" type="s:unsignedInt" />
              <s:element name="reserveTimeA" type="s:unsignedInt" />
              <s:element name="reserveTimeB" type="s:unsignedInt" />
              <s:element name="leaseTimeOnOff" type="s:string" />
              <s:element name="leaseTimeValue" type="s:string" />
              <s:element name="firstShelfNumInMagazine" type="s:unsignedInt" />
              <s:element name="lastShelfNumInMagazine" type="s:unsignedInt" />
              <s:element name="magazineNumber" type="s:byte" />    
              <s:element name="printerNumber" type="s:byte" />    
              <s:element name="barcode" type="s:string" />
              <s:element name="magazineId" type="s:string" />
              <s:element name="inLongOp" type="s:int" />
              <s:element name="sideAProfile" type="s:long" />
              <s:element name="loadsA" type="s:int" />
              <s:element name="loadsB" type="s:int" />

              <!-- copy/cmp thread number -->
              <s:element name="threadNumber" type="s:long" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusShelvesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSGetElementStatusShelvesEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetElementStatusDrivesEntry">
            <s:sequence>

              <s:element name="index" type="s:int" />
              <s:element name="flags" type="s:string" />
              <s:element name="onOff" type="s:string" />
              <s:element name="full" type="s:string" />
              <s:element name="state" type="s:string" />
              <s:element name="shelfNumber" type="s:unsignedInt" />

              <!--  
              /* Possible values for side
              QS_SCSI_SIDE_A = 0,
              QS_SCSI_SIDE_B,
              QS_SCSI_TAPE_PARTITION_0,
              QS_SCSI_TAPE_PARTITION_1,
              QS_SCSI_TAPE_FOREIGN
              -->
              <s:element name="side" type="s:byte" />
              <s:element name="slotState" type="s:string" />
              <s:element name="priority" type="s:string" />
              <s:element name="leaseTime" type="s:string" />
              <s:element name="loadElapsedTime" type="s:unsignedInt" />
              <s:element name="accessElapsedTime" type="s:unsignedInt" />
              <s:element name="barcode" type="s:string" />    
              <s:element name="inLongOp" type="s:int" />
              <s:element name="loads" type="s:int" />
    
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusDrivesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSGetElementStatusDrivesEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetElementStatusPrintersEntry">
            <s:sequence>
            <s:element name="full" type="s:byte" />
            <s:element name="shelfNumber" type="s:unsignedInt" />
    
            <!--               
            Possible values for side:
    
            QS_SCSI_SIDE_A = 0,
            QS_SCSI_SIDE_B,
            QS_SCSI_TAPE_PARTITION_0,
            QS_SCSI_TAPE_PARTITION_1,
            QS_SCSI_TAPE_FOREIGN
            -->
            <s:element name="side" type="s:byte" />
    
            <s:element name="flags" type="s:long" />
            <s:element name="state" type="s:unsignedInt" />
    
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetElementStatusPrintersList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSGetElementStatusPrintersEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetElementStatusResponse">
            <s:sequence>

              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              
              <!-- Carriers devices statuses list -->
              <s:element name="listCarriers" type="tns:WSGetElementStatusCarriersList" />

              <!-- Mailslots devices statuses list -->
              <s:element name="listMailslots" type="tns:WSGetElementStatusMailslotsList" />

              <!-- Shelves devices statuses list -->
              <s:element name="listShelves" type="tns:WSGetElementStatusShelvesList" />

              <!-- Drives devices statuses list -->
              <s:element name="listDrives" type="tns:WSGetElementStatusDrivesList" />

              <!-- Printers devices statuses list -->
              <s:element name="listPrinters" type="tns:WSGetElementStatusPrintersList" />
              
              <s:element name="inactiveTime" type="s:unsignedInt" />
              <s:element name="idleTime" type="s:unsignedInt" />
              <s:element name="quantumTime" type="s:unsignedInt" />
              <s:element name="options" type="s:unsignedInt" />
              <s:element name="optionsDetailed" type="s:string" />

              <!-- Device statistics -->
              <s:element name="imports" type="s:unsignedInt" />
              <s:element name="exports" type="s:unsignedInt" />
              <s:element name="loads" type="s:unsignedInt" />
              <s:element name="unloads" type="s:unsignedInt" />
              <s:element name="flips" type="s:unsignedInt" />

              <s:element name="jbId" type="s:string" />
              <s:element name="jbEssence" type="s:string" />
              <s:element name="jbEvaluated" type="s:string" />
              <s:element name="barcodeType" type="s:string" />

              <s:element name="flipSupported" type="s:unsignedInt" />
              <s:element name="schedulerRunning" type="s:byte" />

            </s:sequence>
          </s:complexType>

          <!--               
              Set devices status requests
          -->
          <s:complexType name="WSSetSlotStatusEntry">
            <s:sequence>
              <s:element name="slotNumber" type="s:unsignedInt" />
              <s:element name="onOff" type="s:byte" />
              <s:element name="flags" type="s:long" />
              <s:element name="side" type="s:byte" />
              <s:element name="action" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSetSlotStatusList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSSetSlotStatusEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSetSlotStatusRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libraryName" type="s:string" />
              <s:element name="slotList" type="tns:WSSetSlotStatusList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetSlotStatusResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetDrivesStatusEntry">
            <s:sequence>
              <s:element name="driveNumber" type="s:unsignedInt" />
              <s:element name="onOff" type="s:byte" />
              <s:element name="flags" type="s:long" />
              <s:element name="priority" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSetDrivesStatusList">
            <s:sequence>              
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSSetDrivesStatusEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSetDrivesStatusRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libraryName" type="s:string" />
              <s:element name="drivesList" type="tns:WSSetDrivesStatusList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetDrivesStatusResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetPrintersStatusEntry">
            <s:sequence>
              <s:element name="printerNumber" type="s:unsignedInt" />
              <s:element name="flags" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSetPrintersStatusList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSSetPrintersStatusEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSetPrintersStatusRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libraryName" type="s:string" />
              <s:element name="printersList" type="tns:WSSetPrintersStatusList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetPrintersStatusResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <!-- Library operations web requests -->
          <s:complexType name="WSLibraryOperationExchangeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="slotSrc" type="s:unsignedInt" />
              <s:element name="slotDst" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationExchangeResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationExportRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="slotSrc" type="s:unsignedInt" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationExportResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationImportRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="slotSrc" type="s:unsignedInt" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationImportResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationFlipRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="drive" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationFlipResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
              
          <s:complexType name="WSLibraryOperationLoadRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="drive" type="s:unsignedInt" />
              <s:element name="slot" type="s:unsignedInt" />
              <s:element name="invert" type="s:unsignedInt" />
              <s:element name="openFlags" type="s:unsignedInt" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationLoadResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationUnloadRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="drive" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationUnloadResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationResetRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="drive" type="s:unsignedInt" />
              <s:element name="slot" type="s:unsignedInt" />
              <s:element name="onOff" type="s:int" />
              <s:element name="flags" type="s:int" />
              <s:element name="reset" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationResetResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="actualSlotNumber" type="s:unsignedInt" />
              <!-- EMPTY = 0, FULL = 1 -->
              <s:element name="driveFull" type="s:unsignedInt" />
              <s:element name="sourceSlotNumber" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationMagazineRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="magazine" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationMagazineResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationSchedulerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="flags" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationSchedulerResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationCleaningRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="drive" type="s:unsignedInt" />
              <s:element name="slot" type="s:unsignedInt" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationCleaningResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>         

          <s:complexType name="WSGetSlotStatusEntry">
            <s:sequence>

              <s:element name="flags" type="s:string" />
              <s:element name="onOff" type="s:string" />
              <s:element name="full" type="s:string" />
              <s:element name="state" type="s:string" />
              <s:element name="health" type="s:string" />
              <s:element name="jobPriority" type="s:string" />
              <s:element name="driveNumber" type="s:unsignedInt" />
              <s:element name="reserveTimeA" type="s:unsignedInt" />
              <s:element name="reserveTimeB" type="s:unsignedInt" />
              <s:element name="leaseTimeOnOff" type="s:string" />
              <s:element name="leaseTimeValue" type="s:string" />
              <s:element name="firstShelfNumInMagazine" type="s:unsignedInt" />
              <s:element name="lastShelfNumInMagazine" type="s:unsignedInt" />
              <s:element name="magazineNumber" type="s:byte" />
              <s:element name="printerNumber" type="s:byte" />
              <s:element name="barcode" type="s:string" />
              <s:element name="magazineId" type="s:string" />
              <s:element name="longOperation" type="s:string" />
              <s:element name="sideAProfile" type="s:long" />
              <s:element name="slotProfile" type="s:string" />

              <!-- copy/cmp thread number -->
              <s:element name="threadNumber" type="s:long" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetSlotStatusList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSGetSlotStatusEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryGetSlotStateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <!--[slots list. slot index starts from 1]-->
              <s:element name="slotList" type="tns:WSSlotList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryGetSlotStateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!-- Slot status list -->
              <s:element name="listSlots" type="tns:WSGetSlotStatusList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryGetDriveStateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="driveNumber" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryGetDriveStateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="onOff" type="s:int" />
              <s:element name="flags" type="s:long" />
              <s:element name="flagStr" type="s:string" />
              <s:element name="priorityRead" type="s:int" />
              <s:element name="priorityWrite" type="s:int" />
              <s:element name="priorityReadWrite" type="s:int" />
              <s:element name="priorityMode" type="s:int" />
              <s:element name="drivePriority" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibrarySetDriveStateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />
              <s:element name="driveNumber" type="s:int" />
              <s:element name="onOff" type="s:int" />
              <s:element name="flags" type="s:long" />
              <s:element name="priorityRead" type="s:int" />
              <s:element name="priorityWrite" type="s:int" />
              <s:element name="priorityReadWrite" type="s:int" />
              <s:element name="priorityMode" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibrarySetDriveStateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryOperationRefreshRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libName" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLSDFSurface">
            <s:sequence>
              <s:element name="hostId" type="s:unsignedInt" />
              <s:element name="timeId" type="s:unsignedInt" />
              <s:element name="sequenceNumber" type="s:unsignedInt" />
              <!--
                QS_VL_BACKUP_SURFACE_FLAG  0x01
                QS_VL_SDF_DUPLEX_FLAG      0x02
                QS_VL_SDF_PRIMARY_FLAG     0x04
                QS_VL_SDF_SLAVE_FLAG       0x08
                QS_VL_SDF_AUDIT_QUICK_FLAG 0x10
                QS_VL_SDF_AUDIT_FULL_FLAG  0x20
                QS_VL_SDF_AUDIT_OK_FLAG    0x40
                QS_VL_SDF_AUDIT_DIFF_FLAG  0x80
                QS_VL_SDF_AUDIT_DONE_FLAG (QS_VL_SDF_AUDIT_QUICK_FLAG|QS_VL_SDF_AUDIT_FULL_FLAG)
              -->
              <s:element name="flags" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLUDFSurface">
            <s:sequence>
              <s:element name="sequenceNumber" type="s:unsignedInt" />
              <s:element name="udfRevision" type="s:unsignedInt" />
              <s:element name="interchangeLevel" type="s:unsignedInt" />
              <s:element name="flags" type="s:unsignedInt" />
              <s:element name="logVolId" type="s:string" />
              <s:element name="onDiskTime" type="s:long" />
              <s:element name="volumeNumber" type="s:unsignedInt" />
              <s:element name="vskinSetId" type="s:string" />
              <s:element name="tdoSequenceNumber" type="s:unsignedInt" />
              <s:element name="tdoSetId" type="s:string" />
              <s:element name="used" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLUVFSSurface">
            <s:sequence>
              <s:element name="sequenceNumber" type="s:unsignedInt" />
              <s:element name="setId" type="s:string" />
              <s:element name="type" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLAAFSSurface">
            <s:sequence>
              <s:element name="PartUUID" type="s:string" />
              <s:element name="PollUUID" type="s:string" />
              <s:element name="sequenceNumber" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLLTFSSurface">
            <s:sequence>
              <!-- capacity per side in GB -->
              <s:element name="gbPerSide" type="s:unsignedInt" />
              <s:element name="blockSize" type="s:unsignedInt" />
              <s:element name="VolSerial" type="s:string" />
              <s:element name="VolName" type="s:string" />
              <s:element name="VolUUID" type="s:string" />
              <s:element name="volumeNumber" type="s:unsignedInt" />
              <s:element name="vskinSetId" type="s:string" />
              <s:element name="usedKb" type="s:long" />
              <s:element name="remainingKb" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLTDOSurface">
            <s:sequence>
              <s:element name="setId" type="s:string" />
              <s:element name="sequenceNumber" type="s:unsignedInt" />
              <s:element name="flags" type="s:unsignedInt" />
              <s:element name="used" type="s:long" />
              <s:element name="ctime" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLTARSurface">
            <s:sequence>
              <s:element name="flags" type="s:unsignedInt" />
              <s:element name="setId" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMediumSurfaceEntry">
            <s:sequence>

              <s:element name="status" type="s:string" />
              <s:element name="busyType" type="s:string" />
              <s:element name="surfaceType" type="s:string" />
              <s:element name="setType" type="s:string" />
              <s:element name="copyNumber" type="s:unsignedInt" />
              <!-- capacity per side in KB -->
              <s:element name="kbPerSide" type="s:long" />
              <s:element name="blockSize" type="s:unsignedInt" />
              <s:element name="mediaId" type="s:string" />
              <s:element name="flags" type="s:unsignedInt" />
              <s:element name="essence" type="s:string" />
              <s:element name="evaluated" type="s:string" />
              
              <s:element minOccurs="0" maxOccurs="1" name="sdf" type="tns:WSVLSDFSurface"/>
              <s:element minOccurs="0" maxOccurs="1" name="udf" type="tns:WSVLUDFSurface"/>
              <s:element minOccurs="0" maxOccurs="1" name="uvfs" type="tns:WSVLUVFSSurface"/>
              <s:element minOccurs="0" maxOccurs="1" name="aafs" type="tns:WSVLAAFSSurface"/>
              <s:element minOccurs="0" maxOccurs="1" name="ltfs" type="tns:WSVLLTFSSurface"/>
              <s:element minOccurs="0" maxOccurs="1" name="tdo" type="tns:WSVLTDOSurface"/>
              <s:element minOccurs="0" maxOccurs="1" name="tar" type="tns:WSVLTARSurface"/>
              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibOperationMediumSurfaceList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="2" name="surface" type="tns:WSMediumSurfaceEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSProfileEntry">
            <s:sequence>
              <s:element name="profileStr" type="s:string" />
              <s:element name="profileLong" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSProfileList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="profiles" type="tns:WSProfileEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMediumEntry">
            <s:sequence>
              <s:element name="slotIndex" type="s:unsignedInt" />
              <s:element name="magazineNumber" type="s:int" />
              <s:element name="setName" type="s:string" />
              <s:element name="barcode" type="s:string" />
              <s:element name="seqNum" type="s:string" />
              <s:element name="dasmHostId" type="s:string" />
              <s:element name="dasmNodeId" type="s:string" />
              <s:element name="dasmSiteId" type="s:string" />
              <s:element name="mediaMgtDescription" type="s:string" />
              <s:element name="surfaceList" type="tns:WSLibOperationMediumSurfaceList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMediumList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="mediumEntry" type="tns:WSMediumEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryOperationRefreshResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />

              <s:element name="version" type="s:string" />
              <s:element name="slotCount" type="s:unsignedInt" />
              <s:element name="driveCount" type="s:unsignedInt" />
              <s:element name="essence" type="s:string" />
              <s:element name="evaluated" type="s:string" />

              <s:element name="jbId" type="s:string" />
              
              <s:element minOccurs="0" maxOccurs="unbounded" name="slotFull" type="s:byte" />
              <s:element minOccurs="0" maxOccurs="unbounded" name="oneSideMedium" type="s:byte" />              
              <s:element minOccurs="0" maxOccurs="unbounded" name="magazineNumber" type="s:byte" />

              <s:element minOccurs="0" maxOccurs="1" name="mediaList" type="tns:WSMediumList" />

            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetRemoteDevicesListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="hostName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <!-- More entries may require later -->
          <s:complexType name="WSRemoteDeviceEntry">
            <s:sequence>
              <s:element name="deviceName" type="s:string" />
            </s:sequence>
          </s:complexType>
            
          <s:complexType name="WSRemoteDevicesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSRemoteDeviceEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetRemoteDevicesListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="devicesList" type="tns:WSRemoteDevicesList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetDevicesListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />          
              <s:element name="deviceNameFilter" type="s:string" />
              <s:element name="configured" type="s:byte" />
              <s:element name="force" type="s:byte" />
            </s:sequence>
          </s:complexType>
    

          <!-- More entries may require later -->
          <s:complexType name="WSGasConfigEntry">
            <s:sequence>
              <s:element name="hostId" type="s:string" />
              <s:element name="method" type="s:string" />
              <s:element name="ipv4" type="s:string" />
              <s:element name="ipv6" type="s:string" />
              <s:element name="nodeName" type="s:string" />
              <s:element name="paired" type="s:string" />
              <s:element name="status" type="s:string" />
              <s:element name="lastSeen" type="s:string" />
              <s:element name="nodeTime" type="s:long" />
              <s:element name="platform" type="s:string" />
              <s:element name="platformVersion" type="s:string" />
              <s:element name="vendor" type="s:string" />
              <s:element name="dasmVersion" type="s:string" />
              <s:element name="domainUuid" type="s:string" />
              <s:element name="domainName" type="s:string" />
            </s:sequence>
          </s:complexType>
            
          <s:complexType name="WSGasConfigList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSGasConfigEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetGasConfigResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="configList" type="tns:WSGasConfigList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetGasConfigRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />          
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGasDomainResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGasDomainRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />          
              <s:element name="domainName" type="s:string" />          
              <s:element name="request" type="s:string" />          
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGasNodeResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGasNodeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="hostName" type="s:string" />
              <s:element name="request" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGasPairResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGasPairRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />          
              <s:element name="hostName" type="s:string" />          
              <s:element name="userName" type="s:string" />          
              <s:element name="password" type="s:string" />          
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGasCrossResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="nodesProcessed" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGasCrossRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

         <s:complexType name="WSSCSIMPPathEntry">
            <s:sequence>
              <s:element name="claimed" type="s:byte" />
              <s:element name="InstanceID" type="s:string" />
              <s:element name="hostAccessPath" type="s:string" />
              <s:element name="controlPort" type="s:unsignedInt" />
              <s:element name="controlTarget" type="s:unsignedInt" />
              <s:element name="controlLun" type="s:unsignedInt" />
              <s:element name="ident" type="s:byte" />
              <s:element name="MpStatus" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIMultiPathList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSSCSIMPPathEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIDriveEntry">
            <s:sequence>
              <s:element name="configured" type="s:byte" />
              <s:element name="supported" type="s:byte" />
              
              <s:element name="mpathList" type="tns:WSSCSIMultiPathList" />

              <s:element name="driveWSName" type="s:string" />
              <s:element name="driveQSpecName" type="s:string" />
              <s:element name="driveTypeStr" type="s:string" />
              <s:element name="drivePathStr" type="s:string" />
              <s:element name="driveSpec" type="s:string" />
              <s:element name="driveSerialNumber" type="s:string" />
              <s:element name="driveValid" type="s:byte" />
              <s:element name="driveSeqNum" type="s:unsignedInt" />
              <s:element name="driveType" type="s:byte" />
              <s:element name="driveVendor" type="s:string" />
              <s:element name="driveModel" type="s:string" />
              <s:element name="driveRevision" type="s:string" />
              <s:element name="driveClass" type="s:string" />
              <s:element name="maxXfer" type="s:unsignedInt" />
              <s:element name="ident" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIDriveList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSSCSIDriveEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIDeviceEntry">
            <s:sequence>

              <s:element name="mpathList" type="tns:WSSCSIMultiPathList" />
              <s:element name="wsName" type="s:string" />
              <s:element name="qSpecName" type="s:string" />
              <s:element name="deviceType" type="s:string" />
              <s:element name="devicePath" type="s:string" />
              <s:element name="serialNumber" type="s:string" />
              <s:element name="controlSeqNum" type="s:unsignedInt" />
              <s:element name="controlVendor" type="s:string" />
              <s:element name="controlModel" type="s:string" />
              <s:element name="controlRevision" type="s:string" />
              <s:element name="controlClass" type="s:string" />
              <s:element name="controlSpec" type="s:string" />
              <s:element name="controlMaxXfer" type="s:unsignedInt" />
              
              <s:element name="simDeviceType" type="s:string" />            
              <s:element name="simPath" type="s:string" />
              <s:element name="simDestJB" type="s:string" />
              <s:element name="simSlotFrom" type="s:unsignedInt" />
              <s:element name="simSlotTo" type="s:unsignedInt" />
              <s:element name="simOneSideMedia" type="s:byte" />
              <s:element name="driveCount" type="s:int" />
              <s:element name="slotCount" type="s:int" />
              <s:element name="mailslotCount" type="s:int" />
              <s:element name="carrierCount" type="s:int" />
              <s:element name="configured" type="s:byte" />
              <s:element name="supported" type="s:byte" />
              <s:element name="ident" type="s:byte" />
              
              <s:element name="drivesList" type="tns:WSSCSIDriveList" />

            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSCSIDevicesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="devicesEntries" type="tns:WSSCSIDeviceEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetDevicesListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="devicesList" type="tns:WSSCSIDevicesList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSDevicePathEntry">
            <s:sequence>
              <s:element name="instanceID" type="s:string" />
              <s:element name="claimed" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSDevicePathList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="pathEntry" type="tns:WSDevicePathEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetPathsClaimingRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="pathList" type="tns:WSDevicePathList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetPathsClaimingResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSConfigureLibraryRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[used as directory path for simulated library]-->
              <s:element name="instanceID" type="s:string" />
              <s:element name="libraryName" type="s:string" />
              <s:element name="destLibraryName" type="s:string" />
              <s:element name="configure" type="s:unsignedInt" />
              <!--[number of slots [1,8192] for simulated library]-->
              <s:element minOccurs="0" name="slotNumber" type="s:string" />
              <!--[device type {disk|tape|proxy} for simulated library]-->
              <s:element minOccurs="0" name="deviceType" type="s:string" />
              <s:element name="forceDeviceUpdate" type="s:byte" />
              <s:element name="simSlotFrom" type="s:byte" />
              <s:element name="simSlotTo" type="s:byte" />
              <s:element name="oneSided" type="s:byte" />                       
              <s:element name="drivesList" type="tns:WSSCSIDriveList" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSConfigureLibraryResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSRescanHardwareRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSRescanHardwareResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIInquiryRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="devicePath" type="s:string" />
              <s:element name="options" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSCSIInquiryResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="devType" type="s:byte" />
              <s:element minOccurs="0" maxOccurs="7" name="misc" type="s:byte" />
              <s:element name="id" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSCSISerialNumberRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="devicePath" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSISerialNumberResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="serialNumber" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSICapabilityRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="devicePath" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSICapabilityResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />

              <s:element name="firstCarrierAddress" type="s:unsignedInt" />
              <s:element name="carrierCount" type="s:unsignedInt" />
              <s:element name="firstShelfAddress" type="s:unsignedInt" />
              <s:element name="slotCount" type="s:unsignedInt" />
              <s:element name="firstMailslotAddress" type="s:unsignedInt" />
              <s:element name="mailslotCount" type="s:unsignedInt" />
              <s:element name="firstDriveAddress" type="s:unsignedInt" />
              <s:element name="driveCount" type="s:unsignedInt" />
              <s:element name="firstPrinterAddress" type="s:unsignedInt" />
              <s:element name="printerCount" type="s:unsignedInt" />
              <s:element name="firstMagazineAddress" type="s:unsignedInt" />
              <s:element name="magazineCount" type="s:unsignedInt" />
              <s:element name="storage" type="s:string" />
              <s:element name="move" type="s:string" />
              <s:element name="exchange" type="s:string" />
              <s:element name="barcodeType" type="s:byte" />
              <s:element name="arrayElementCount" type="s:byte" />
              <s:element name="flipSupported" type="s:byte" />
              <s:element name="magazineExchangeSupported" type="s:byte" />
              <s:element name="openMagazineDoorSupported" type="s:byte" />
              <s:element name="openBulkmailDoorSupported" type="s:byte" />
        
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIInventoryRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="devicePath" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIInventoryResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSICapacityRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="devicePath" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSICapacityResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="capacityLba" type="s:unsignedInt" />
              <s:element name="capacityRemaining" type="s:unsignedInt" />
              <s:element name="capacityLbaP1" type="s:unsignedInt" />
              <s:element name="capacityRemainingP1" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILocateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="devicePath" type="s:string" />
              <s:element name="blockAddress" type="s:unsignedInt" />
              <s:element name="partition" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILocateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSCSIReadRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="devicePath" type="s:string" />
              <s:element name="blockFirst" type="s:unsignedInt" />
              <s:element name="blockCount" type="s:unsignedInt" />
              <s:element name="blockSize" type="s:unsignedInt" />

              <!-- List of options valid for this command -->

              <!--[-b blocks_per_transfer]-->
              <s:element name="blocksPerTransfer" type="s:unsignedInt" />

              <!--[-L {seconds|default}]-->
              <s:element name="leaseMode" type="s:string" />

              <!--[-a retry_cnt] should be in range from 1 to 15-->
              <s:element name="retryCount" type="s:unsignedInt" />

              <!--"-l {0|1} Locked (1 - exclusive) device"-->
              <s:element name="lockedDevice" type="s:unsignedInt" />

              <!--"-m   Copies data to the memory"-->
              <s:element name="copyDataToMemory" type="s:unsignedInt" />

              <!--"-p   returns a performance report to the Client"-->
              <s:element name="performanceReport" type="s:unsignedInt" />

              <!--"-t   The command does not end after copy of all blocks and connect to data (n - clean this mode)"-->
              <s:element name="notEndAfterCopy" type="s:unsignedInt" />

              <!--"-P {i|n|[r][w]}  Generating protection information (CRC) (i - ignore, use API, n - clean this mode)"-->
              <s:element name="protectionInformation" type="s:string" />

              <!--"-j job_priority  Set priority job (read process)"-->
              <s:element name="jobPriority" type="s:unsignedInt" />

              <!--'-s': suppress incorrect-length indicator (SILI)-->
              <s:element name="SILI" type="s:unsignedInt" />

              <!--'-r': rewind before read (only for tape)-->
              <s:element name="rewind" type="s:unsignedInt" />

              <!--'f': FORCE_UNIT_ACCESS-->
              <s:element name="forceUnitAccess" type="s:unsignedInt" />

              <!--'n': print scsi_handle names-->
              <s:element name="printSCSIHandleNames" type="s:unsignedInt" />

              <!--'t': test interactive mode-->
              <s:element name="testInteractiveMode" type="s:unsignedInt" />

              <!--'i': ignore read errors-->
              <s:element name="ignoreReadErrors" type="s:unsignedInt" />

              <!--'c': change Blank block to test data (only if blocks per read = 1)-->
              <s:element name="changeBlankBlock" type="s:unsignedInt" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSIReadResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="results" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLCreateEditSetRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[0 - set is edited, otherwise - a new set is being created]-->
              <s:element name="createSet" type="s:unsignedInt" />
              
              <!--Generic options-->

              <!--set_name-->
              <s:element name="setName" type="s:string" />

              <!--[-T set_type]-->
              <s:element name="setType" type="s:string" />
        
              <!--[number_of_media]-->
              <s:element name="numberOfMedia" type="s:unsignedInt" />

              <!--[-U {local|share}]-->
              <s:element name="shareDrive" type="s:string" />

              <!--[-r Filesystem is mounted read-only]-->
              <!--[values "yes", "on", "readonly", "read-only" will be treated as option is ON, otherwise - OFF]-->
              <s:element name="readonlyMounted" type="s:string" />

              <!--[-p {yes|no} Enable or disable the mount (publish) on server restart]-->
              <s:element name="mountedOnRestart" type="s:string" />

              <!--[-d default_mount_point] Set default mount point-->
              <s:element name="defaultMountPoint" type="s:string" />
        
              <!--[media_set_options]-->
              <!--[-u {disk|cd|tape|dvd|erasable|worm|rdonly|cd-dvd|bd-re|bd-r|bd-rom|hd-sdisk|hd-stape|c-sdisk|c-stape|proxyN|mirror}]-->
              <!--[-u {cd-rom|cdrom|cd-r|cdr|cd-rw|cdrw|dvd-rom|dvdrom|dvd-r|dvdr|dvd-ram|dvdram|
                    dvd-rw|dvdrw|dvd-rw-s|dvdrws|bdrom|bd-rom|bd-r|bdrr|bd-rr|bdre|bd-re|mo-worm|
                    moworm|worm|mo|erasable|lto1|lto-1|lto1r|lto-1r|lto2|lto-2|lto2r|lto-2r|lto3|
                    lto-3|lto3r|lto-3r|lto4|lto-4|lto4r|lto-4r|lto5|lto-5|lto5r|lto-5r|lto6|lto-6|
                    lto6r|lto-6r|lto7|lto-7|lto7r|lto-7r|t1|t2|ta|tb|tc|td|te|t10k1|t10k2|t10ka|
                    t10kb|t10kc|t10kd|t10ke|j1a|e05|e06|e07|e08|ja|jb|jc|jd|jj|jk|jl|jw|jx|jy|jz|jr}]-->
              <s:element name="useMediaType" type="s:string" />

              <!--[up to 8 (64 bit) profiles separated with comma]-->
              <s:element name="useMediaProfiles" type="s:string" />

              <s:element minOccurs="0" name="ODA" type="s:string" />
        
              <!--[-q The quota is defined as the maximum number of media that can be allocated to the Integral Volume set.]-->
              <s:element name="mediaQuota" type="s:string" />

              <!--[-s Specifies that the Integral Volume set  can  spread  to  another library  on the same host]-->
              <!--[values "yes", "on", "spread" will be treated as option is ON, otherwise - OFF]-->
              <s:element name="spread" type="s:string" />

              <!--[-I Recreates the file system databases before mounting]-->
              <!--[values "yes", "on", "recreate", "re-create" will be treated as option is ON, otherwise - OFF]-->
              <s:element name="recreateDatabase" type="s:string" />

              <!--[Clean cache on next mount]-->
              <!--[allowable values "yes" or "no"]-->
              <s:element name="cleanCache" type="s:string" />

              <s:element minOccurs="0" name="localAccessOnly" type="s:string" />
              <s:element minOccurs="0" name="forceMount" type="s:string" />
              
              <!--[-N Integral Volume set must be digitally signed]-->
              <!--[values "yes", "on" will be treated as option is ON, otherwise - OFF]-->
              <s:element name="signDigitally" type="s:string" />

              <!--[-M Real and simulated media can be mixed in the Integral Volume set]-->
              <!--[values "yes", "on", "mixed" will be treated as option is ON, otherwise - OFF]-->
              <s:element name="mediaCanBeMixed" type="s:string" />

              <!--[-b {full|cron_like_schedule} full: Automatic start of vlcopy (Copy  Media)]-->
              <s:element name="automaticCopyStart" type="s:string" />              
              <s:element name="schedule" type="s:string" />

              <!--[-n number_of_copies - Number of copies used for multiple incremental copy operations]-->
              <s:element name="numberOfCopies" type="s:string" />

              <!--[-l medium health percent]-->
              <!--[values of format "XX", "0.XX", "XX%" will be treated as option is ON, otherwise - OFF]-->
              <s:element name="mediumHealth" type="s:string" />

              <!--[-C {one|all} - Specifies method of the copy production for multiple incremental copy. one: 1, all: 0]-->
              <s:element name="copyMethod" type="s:string" />

              <!--[-G {auto|manual} - Medium allocation policy for multiple incremental copy]-->
              <s:element name="mediumAllocationPolicy" type="s:string" />

              <!--[-X time_slice - Multiple incremental copy time limitation in  seconds  (600  by default)]-->
              <s:element name="copyTimeLimitation" type="s:string" />

              <!--[-K data_size_per_slice - Multiple incremental copy written data size limitation in megabytes]-->
              <s:element name="dataSizePerSlice" type="s:string" />

              <!--[-a hardware_crypto_algorithm_index - Enable hardware data encryption]-->
              <s:element name="hardwareCryptoAlgorithmIndex" type="s:string" />

              <s:element minOccurs="0" name="lowPrimaryCapacity" type="s:string" />
              <s:element minOccurs="0" name="highPrimaryCapacity" type="s:string" />
              <s:element minOccurs="0" name="readReservedCapacity" type="s:string" />
              
              <!--[-c {default|on|off}](tape media only) This option specifies the compression option.
                on enable the compression.
                off disable the compression.
                Default the compression is set as default.
                default: 0, on: 1, off: 2.-->
              <s:element name="compression" type="s:string" />

              <!--[-Z{1}] (RW disk media only) This  option specifies the shredding mode. Only RW disks
                are available for shredding mode. For UDO WORM COMPLIANCE
                disks  shredding  mode  is activated automatically.  1 is
                the shredding algorithm number.-->
              <s:element name="shreddingMode" type="s:string" />
        
              <!--[{-m [hostname_2]:setname_2 | -2 [hostname_1]:setname_1}] These options specify the Mirroring parameters-->
              <s:element name="mirrorHostname2" type="s:string" />
              <s:element name="mirrorSetname2" type="s:string" />
              <s:element name="mirrorHostname1" type="s:string" />
              <s:element name="mirrorSetname1" type="s:string" />
        
              <!--[-h {low|high|normal}] These options specify the Mirroring parameters.
                low: 0, high: 1, normal: 2.-->
              <s:element name="mirroringMode" type="s:string" />
              
              <!--Mirroring status: 0 - no mirror, 1 - primary, 2 - secondary.-->
              <s:element name="mirroringStatus" type="s:int" />

              <!--[-v {spanning|automount|single|single-volume|multi|multi-volume}] Specifies the interchange level. s: spanning  Integral
                Volume set, and a: automount Integral Volume set. With-
                out this option the Integral Volume set is single-volume.-->
              <s:element name="interchangeLevel" type="s:string" />

              <!--[-R {150|200|201|250|260}] Specifies UDF  revision  which  will  be assigned  to a
                blank/erased disk when it is initialized and added to the
                Integral Volume set. The default is 150.-->
              <s:element name="revision" type="s:string" />

              <!--[-P {0|1}] With  -P1, CDR/DVDR/BD blank surface or a surface with an
                empty last session can be initialized for packet  writing
                and   added   to  the  Integral  Volume  set.   With  -P0
                (default), such a surface cannot be initialized.-->
              <s:element name="initializeSession" type="s:string" />

              <!--[-S {0|1}] For single-volume and  automount  Integral Volume sets.
                With -S1, the system will make space calculation in order
                to prevent accepting data into the cache if there is  no
                enough space on the disk. This is the default.  With -S0,
                space calculation is disabled and lack of disk space will
                result in a covered error.-->
              <s:element name="spaceCalculation" type="s:string" />
        
              <!--[-W {0|1}] With  -W1, Software write verification is enabled: after
                write, data is read and tested for comparison against the
                data  that has been written.  With -W0, Default. Hardware
                verification is enabled if device supports it.-->
              <s:element name="writeVerification" type="s:string" />
        
              <!--[-F {0|1}] For spanning sets. This  option is valid for udf span-
                ning  only.  With -F1, file spanning is enabled: if there
                is no space on the last volume where  the file resides,
                the  file will be spanned to the next volume with enough
                space. This is the default.  With -F0, file spanning  is
                disabled: if  there  is no space on the volume where the
                file resides, the file will be moved to the  next volume
                with enough space.-->
              <s:element name="fileSpanning" type="s:string" />
        
              <!--[-V {0|1}] For  spanning  Integral  Volume sets.  With -V1, once the
                WORM volume becomes full it is closed.  With  -V0, there
                is no automatic closing (default).-->
              <s:element name="automaticClosing" type="s:string" />
        
              <!--[-B {0|1}] For  spanning  Integral  Volume  sets.   With  -B1, image
                backup is used for CD-R/DVD-R (default).  With -B0, image
                backup is not used.-->
              <s:element name="imageBackup" type="s:string" />
        
              <!--[-L Pubisher_label_file [{-k label_field_name -e label_field_value}...]] 
                -k {label_field_name}
                For vlcopy with using Publisher device (printing  parame-
                ters).   Label_field_name specifies  the next parameter
                name to be used with the  label  file  (see  -L  option).
                Every parameter (option -k) has to have the corresponding
                value (option -v). There can be  more  then  one  parame-
                ter/value pair in the command line.

                -e {label_field_value}
                For  vlcopy with using Publisher device (printing parame-
                ters).  Label_field_value specifies  the  next  parameter
                value  to be  used  with the label file (see -L option).
                Every parameter value (option -v) should have the corre-
                sponding  parameter  name (option -k). There can be more
                then one parameter/value pair in the command line.-->
              <s:element name="publisherFieldName" type="s:string" />
              <s:element name="publisherFieldValue" type="s:string" />
        
              <!--[-s extent_size_mb]
                A file in HCP archive is stored in extents of equal size.
                The  extent_size_mb  specifies  the size of the extent in
                megabytes (1 - 32). The default is 1.-->
              <s:element name="extentSizeMB" type="s:string" />
        
              <!--[-j library_list] (mirror mode only, delimiter is comma)
                Contains library list with delimiter comma and needed for
                allocation replica  volume  automatically.  (similar  on
                vl/conf file).-->
              <s:element name="libraryList" type="s:string" />
        
              <!--[-2 set_id] (SDF set id for mirror mode only)
                This  option  is  needed during the conversion of the SDF
                mirror Integral Volume set to TDO mirror Integral Volume
                set. By default, is possible to associate only ONE Integral
                Volume set ID(Idetifier) to an Integral Volume  set,
                with  this option is possible to include in the Integral
                Volume set the media from the SDF mirror Integral Volume
                set.-->
              <s:element name="hostId" type="s:string" />
              <s:element name="timeId" type="s:string" />
        
              <!--[-h target_host_name]
                Host name of  the remote machine where the  real  set
                resides. The option must always be present.-->
              <s:element name="targetHostname" type="s:string" />
        
              <!--[-h target_set_name]
                Set  name of  the set on the remote machine.  The option
                must always be present.-->
              <s:element name="targetSetName" type="s:string" />
              <s:element name="useRemoteCache" type="s:string" />
              
              <!--[-i] set Id for DASM set type-->
              <s:element name="setId" type="s:string" />

              <!--[-i] RPL Force covered error-->
              <s:element name="forceCoveredError" type="s:byte" />

              <!--[-b {0|1}] RPL read balancing enabled-->
              <s:element name="readBalancing" type="s:byte" />
              
              <!--[-s {below_rw|above_read|above_write|above_rw}] RPL Hot sync priority-->
              <s:element name="hotSyncPriority" type="s:string" />
    
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLCreateEditSetResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLDelSetRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="cacheRoot" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLDelSetResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLAddToSetRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--should be 0 for the same first call and non-zero for subsequent calls to get progress info or error code-->
              <s:element name="contextId" type="s:long" />  
              
              <!--set_name-->
              <s:element name="setName" type="s:string" />

              <!--device_name-->
              <s:element name="deviceName" type="s:string" />

              <!--slot range-->
              <s:element name="slotStart" type="s:unsignedInt" />
              <s:element name="slotEnd" type="s:unsignedInt" />

              <!--[-n number_of_media]-->
              <s:element name="mediaNumber" type="s:unsignedInt" />

              <!--[-f -Specifies the offline location for a medium offline]-->
              <s:element name="offlineLocation" type="s:string" />

              <!--[-o -This option prevents search for compatible medium in all libraries]-->
              <s:element name="noCompatibleMedium" type="s:unsignedInt" />

              <!--[-F -This option prevents check generation and health media which will be initialized and added to the Integral Volume set]-->
              <s:element name="noCheckHealth" type="s:unsignedInt" />

              <!--[-A -specifies the side A sequence_number of the offline medium]-->
              <s:element name="sequenceNumberA" type="s:unsignedInt" />

              <!--CSV_barcode_list-->
              <s:element name="barcode" type="s:string" />

              <!--UDF specific options-->
              <!--logical volume identifier assigned to the surface A-->
              <s:element name="logVolIdA" type="s:string" />
              <!--logical volume identifier assigned to the surface B-->
              <s:element name="logVolIdB" type="s:string" />

              <!--UVFS specific options-->
              <!--side A directory link-->
              <s:element name="directoryLinkA" type="s:string" />
              <!--side B directory link-->
              <s:element name="directoryLinkB" type="s:string" />

              <!--TDO specific options-->
              <!--[-c [sequence_number.]copy_number]-->
              <s:element name="sequenceNumber" type="s:unsignedInt" />
              <s:element name="copyNumber" type="s:unsignedInt" />

              <!--LTFS specific options-->
              <!--[-D volume_name]-->
              <s:element name="volumeName" type="s:string" />

              <!--QSSD (S3) specific options-->
              <s:element name="partitionNameQSSD" type="s:string" />
        
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLAddToSetResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />                            
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLDelFromSetRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--set_name-->
              <s:element name="setName" type="s:string" />

              <!--in_set_number-->
              <s:element name="mediaNumber" type="s:unsignedInt" />
              
              <!--set_name to be deleted (for RPL and DASM types)-->
              <s:element minOccurs="0" name="mediumId" type="s:string" />

              <!--non-zero means to force the deletion-->
              <s:element name="kill" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLDelFromSetResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLSDevRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="hostName" type="s:string" />
              <!--device name-->
              <s:element name="deviceName" type="s:string" />

              <!--slot range-->
              <s:element name="slotStart" type="s:unsignedInt" />
              <s:element name="slotEnd" type="s:unsignedInt" />
              
              <!--[-E     Does  not print empty shelves in the second or third form of the command]-->
              <s:element name="noPrintEmptySlots" type="s:unsignedInt" />        
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLSDevResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="version" type="s:string" />
              <s:element name="slotCount" type="s:unsignedInt" />
              <s:element name="driveCount" type="s:unsignedInt" />
              <s:element name="capCount" type="s:unsignedInt" />
              <s:element name="jukeboxId" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="mediaList" type="tns:WSMediumList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLSSetRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="showCopies" type="s:int" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSCopyEntry">
            <s:sequence>
              <s:element name="sequenceNumber" type="s:int" />
              <s:element name="copyNumber" type="s:int" />
              <s:element name="barcode" type="s:string" />
              <s:element name="inDevice" type="s:byte" />
              <s:element name="inSet" type="s:byte" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="slotNumber" type="s:int" />
              <s:element name="offlineLocation" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSCopiesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="copyEntry" type="tns:WSLSCopyEntry" />
            </s:sequence>
          </s:complexType>

    
          <s:complexType name="WSLSMediumEntry">
            <s:sequence>

              <!-- UNDEF = 0, OFFLINE = 1, ONLINE = 2 -->
              <s:element name="onOff" type="s:byte" />

              <s:element name="deviceName" type="s:string" />

              <s:element name="slotNumber" type="s:unsignedInt" />

              <s:element name="offlineLocation" type="s:string" />

              <s:element name="barcode" type="s:string" />

              <s:element name="sideNumber" type="s:unsignedInt" />

              <!--capacity per side in KB-->
              <s:element name="inSetKBPerSideA" type="s:long" />
              <s:element name="inSetKBPerSideB" type="s:long" />
              
              <s:element name="inSetFlags" type="s:unsignedInt" />
              <s:element name="inSetCopyNumber" type="s:unsignedInt" />
              <s:element name="sequenceNumberA" type="s:unsignedInt" />
              <s:element name="sequenceNumberB" type="s:unsignedInt" />

              <s:element minOccurs="0" name="mediaMgtDescription" type="s:string" />
              <s:element name="inSetNumber" type="s:int" />

              <!-- Medium specific parameters -->
              <s:element name="unionMediaSpecific" type="tns:WSVLInSetSpecific"/>
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSMediumList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="mediumEntry" type="tns:WSLSMediumEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLSMediumDescrEntry">
            <s:sequence>
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLSMediumDescrList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="descrEntry" type="tns:WSLSMediumDescrEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSSetEntry">
            <s:sequence>
              <s:element minOccurs="0" name="name" type="s:string" />
              <s:element minOccurs="0" name="setType" type="s:string" />
              <s:element minOccurs="0" name="setId" type="s:string" />
              <s:element minOccurs="0" name="version" type="s:string" />
              <s:element minOccurs="0" name="mountPoint" type="s:string" />
              <s:element minOccurs="0" name="mountPointDefault" type="s:string" />
              <s:element minOccurs="0" name="mountOnServerRestart" type="s:string" />
              <s:element minOccurs="0" name="shareDrive" type="s:string" />
              <s:element minOccurs="0" name="status" type="s:string" />
              <s:element minOccurs="0" name="ODA" type="s:string" />
              <s:element minOccurs="0" name="essenceMask" type="s:string" />
              <s:element minOccurs="0" name="accessMask" type="s:string" />
              <s:element minOccurs="0" name="setFlags" type="s:string" />
              <s:element minOccurs="0" name="mhealth" type="s:string" />
              <s:element minOccurs="0" name="spread" type="s:string" />
              <s:element minOccurs="0" name="quota" type="s:string" />
              <s:element minOccurs="0" name="restoreFSDB" type="s:string" />
              <s:element minOccurs="0" name="readonlyOnNextMount" type="s:string" />
              <s:element minOccurs="0" name="readonlyFS" type="s:string" />
              <s:element minOccurs="0" name="realSimMix" type="s:string" />
              <s:element minOccurs="0" name="makeCopy" type="s:string" />
              <s:element minOccurs="0" name="mcopyReplicas" type="s:string" />
              <s:element minOccurs="0" name="mcopyPolicy" type="s:string" />
              <s:element minOccurs="0" name="mcopyTimeSlice" type="s:string" />
              <s:element minOccurs="0" name="mcopyDataPerSlice" type="s:string" />
              <s:element minOccurs="0" name="digitalSignature" type="s:string" />
              <s:element minOccurs="0" name="localAccessOnly" type="s:string" />
              <s:element minOccurs="0" name="forceMount" type="s:string" />
              <s:element minOccurs="0" name="shreddingMode" type="s:string" />
              <s:element minOccurs="0" name="hotSyncPriority" type="s:string" />
              <s:element minOccurs="0" name="mirrorFlag" type="s:string" />
              <s:element minOccurs="0" name="mirrorPrimaryHost" type="s:string" />
              <s:element minOccurs="0" name="mirrorPrimaryIVS" type="s:string" />
              <s:element minOccurs="0" name="mirrorSecondaryHost" type="s:string" />
              <s:element minOccurs="0" name="mirrorSecondaryIVS" type="s:string" />
              <s:element minOccurs="0" name="mirrorSecondarySetID" type="s:string" />
              <s:element minOccurs="0" name="compression" type="s:string" />
              <s:element minOccurs="0" name="writeVerification" type="s:string" />
              <s:element name="hwEncryptionIndex" type="s:int" />
              <s:element minOccurs="0" name="interchangeLevel" type="s:string" />
              <s:element minOccurs="0" name="packetWritingInit" type="s:string" />
              <s:element minOccurs="0" name="spaceCalculation" type="s:string" />
              <s:element minOccurs="0" name="closeFullVolume" type="s:string" />
              <s:element minOccurs="0" name="fileSpanning" type="s:string" />
              <s:element minOccurs="0" name="useImageBackup" type="s:string" />
              <s:element minOccurs="0" name="extentSizeMB" type="s:string" />
              <s:element minOccurs="0" name="qmageSchedule" type="s:string" />
              <s:element minOccurs="0" name="cacheRoot" type="s:string" />
              <s:element minOccurs="0" name="maxPagesNumber" type="s:string" />
              <s:element minOccurs="0" name="pageSize" type="s:string" />
              <s:element minOccurs="0" name="readonlyGracePeriod" type="s:string" />
              <s:element minOccurs="0" name="retentionPeriod" type="s:string" />
              <s:element minOccurs="0" name="wormFS" type="s:string" />
              <s:element minOccurs="0" name="noWormRename" type="s:string" />
              <s:element minOccurs="0" name="digestType" type="s:string" />
              <s:element minOccurs="0" name="encryptionType" type="s:string" />
              <s:element minOccurs="0" name="lowPrimaryCapacity" type="s:string" />
              <s:element minOccurs="0" name="highPrimaryCapacity" type="s:string" />
              <s:element minOccurs="0" name="readReservedCapacity" type="s:string" />
              <s:element minOccurs="0" name="prefetchPriorityPeriod" type="s:string" />
              <s:element minOccurs="0" name="prefetchingMode" type="s:string" />
              <s:element minOccurs="0" name="backendRetention" type="s:string" />
              <s:element minOccurs="0" name="atimeRetentionPeriod" type="s:string" />
              <s:element minOccurs="0" name="ownerAccessPeriod" type="s:string" />
              <s:element minOccurs="0" name="cacheWriteThrottling" type="s:string" />
              <s:element minOccurs="0" name="grTimes" type="s:string" />
              <s:element minOccurs="0" name="useCrtime" type="s:string" />
              <s:element minOccurs="0" name="cleanCache" type="s:string" />
              <s:element minOccurs="0" name="declareFileRO" type="s:string" />
              <s:element minOccurs="0" name="coldPrefetch" type="s:string" />
              <s:element name="verifyPermissions" type="s:int" />
              <s:element minOccurs="0" name="ramDiskInfo" type="s:string" />
              <!--[for UDF set type]-->
              <s:element minOccurs="0" name="noStopOnError" type="s:string" />
              <!--[for HCP set type]-->
              <s:element minOccurs="0" name="fileSystemCompatibility" type="s:string" />
              <!--[profiles list in string form]-->
              <s:element minOccurs="0" name="profileList" type="tns:WSProfileList" />
              <!-- Number of Media assigned to the Set -->
              <s:element name="mediaNumber" type="s:int" />
              <!-- List of Media assigned to the Set -->
              <s:element minOccurs="0" maxOccurs="1" name="mediaList" type="tns:WSLSMediumList" />
              <!--s:element minOccurs="0" maxOccurs="1" name="copiesList" type="tns:WSLSCopiesList" /-->
              <!-- List of Media descriptions -->
              <s:element minOccurs="0" maxOccurs="1" name="descrList" type="tns:WSLSMediumDescrList" />              
              <!-- Set specific parameters -->
              <s:element name="unionSpecific" type="tns:WSVLSetParamSpecific"/>
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLLSSetResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="setEntry" type="tns:WSLSSetEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLSVolumeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--should be "0" for initial request, and non-zero for following requests until files enumeration not finished-->
              <s:element name="contextId" type="s:string" />

              <!--totalEntriesToReturn = 0 - requested to return all entries found-->
              <s:element name="totalEntriesToReturn" type="s:long" />
              <s:element name="maxChunkSize" type="s:unsignedInt" />

              <!--set name-->
              <s:element name="setName" type="s:string" />

              <s:element name="volumeNumber" type="s:unsignedInt" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSFileEntry">
            <s:sequence>
              <s:element name="position" type="s:unsignedInt" />
              <s:element name="size" type="s:unsignedInt" />
              <s:element name="sizeVolume" type="s:unsignedInt" />
              <s:element name="path" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSFilesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="file" type="tns:WSLSFileEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLSVolumeEntry">
            <s:sequence>
              <s:element name="id" type="s:unsignedInt" />
              <s:element name="status" type="s:string" />
              <s:element name="mediaNumber" type="s:unsignedInt" />
              <s:element name="slotNumber" type="s:unsignedInt" />
              <s:element name="deviceName" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLSVolumesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="volume" type="tns:WSLSVolumeEntry" />
            </s:sequence>
          </s:complexType>
        
          <s:complexType name="WSVLLSVolumeResponse">
            <s:sequence>
             <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />

              <!--should be used (if its value is non-zero) for following requests until files enumeration not finished-->
              <s:element name="contextId" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="setType" type="s:string" />
              <s:element name="setId" type="s:string" />

              <s:element minOccurs="0" maxOccurs="1" name="volumes" type="tns:WSLSVolumesList" />

              <s:element minOccurs="0" maxOccurs="1" name="files" type="tns:WSLSFilesList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLTFSRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--device name-->
              <s:element name="deviceName" type="s:string" />

              <s:element name="slotNumber" type="s:unsignedInt" />
        
              <!--[-f     Set Incomplete LTFS tape flag]-->
              <s:element name="setIncompleteTape" type="s:unsignedInt" />

              <!--[-n     Clear Incomplete LTFS tape flag]-->
              <s:element name="resetIncompleteTape" type="s:unsignedInt" />

              <!--[-r     Repair LTFS tape]-->
              <s:element name="repairTape" type="s:unsignedInt" />

              <!--[-g     Specify the generation to which the file system will be restored
                          during  repair.  The  default  (generation equal to 0 or no this
                          option) means the last generation]-->
              <s:element name="fsGeneration" type="s:unsignedInt" />

              <!--[-s     Print the VL status for the specified slot (see vllsdev)]-->
              <s:element name="slotStatus" type="s:unsignedInt" />

              <!--[-S     Examine the tape and report its complete or incomplete status]-->
              <s:element name="reportTapeStatus" type="s:unsignedInt" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLTFSResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />

              <s:element name="version" type="s:string" />

              <s:element name="slotCount" type="s:unsignedInt" />
              <s:element name="driveCount" type="s:unsignedInt" />

              <s:element name="essence" type="s:string" />
              <s:element name="evaluated" type="s:string" />

              <s:element name="slotFull" type="s:string" />
              <s:element name="oneSideMedium" type="s:string" />
              <s:element minOccurs="0" maxOccurs="unbounded" name="jbId" type="s:byte" />
              <s:element minOccurs="0" maxOccurs="unbounded" name="magazineNumber" type="s:byte" />

              <!--qs_vl_medium_t medium[QS_SCSI_MAX_SHELVES]-->

              <s:element minOccurs="0" maxOccurs="1" name="mediaList" type="tns:WSMediumList" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMediaUsageRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--set_name-->
              <s:element name="setName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMediaUsageEntry">
            <s:sequence>
              <s:element name="capacity" type="s:long" />
              <s:element name="capacityStr" type="s:string" />

              <s:element name="dataSpace" type="s:long" />
              <s:element name="dataSpaceStr" type="s:string" />

              <s:element name="deadSpace" type="s:long" />
              <s:element name="deadSpaceStr" type="s:string" />
              
              <s:element name="freeSpace" type="s:long" />
              <s:element name="freeSpaceStr" type="s:string" />

              <!--QS_VL_TDO_MEDIUM_IN_SET_FLAG       0x02
              QS_VL_SDF_MEDIUM_IN_SET_FLAG       0x04
              QS_VL_CLOUD_META_IN_SET_FLAG       0x08 - Signam metadata vault
              QS_VL_SDF_SLAVE_MEDIUM_IN_SET_FLAG 0x10-->

              <!--VL_MSTAT_NOTEXIST         1
              VL_MSTAT_OFFLINE          2
              VL_MSTAT_RDONLY           4
              VL_MSTAT_RDWR             8
              VL_MSTAT_FREE             16
              VL_MSTAT_DSIDED           32
              VL_MSTAT_INCOMPLETE       64
              VL_MSTAT_PRI_STALE        128
              VL_MSTAT_SEC_STALE        256
              VL_MSTAT_SEQ_NO           512
              VL_MSTAT_DATABASE         1024
              VL_MSTAT_COPY_NO          2048-->
              
              <s:element name="mediumStatus" type="s:string" />
              <s:element name="sequenceNumber" type="s:unsignedInt" />
              <s:element name="inSetNumber" type="s:unsignedInt" />
              <s:element name="copyNumber" type="s:unsignedInt" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="slotNumber" type="s:unsignedInt" />
              <s:element name="barcode" type="s:string" />
              <s:element name="offline" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMediaUsageList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="mediaUsageEntry" type="tns:WSMediaUsageEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLMediaUsageResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />

              <s:element name="mediaUsageList" type="tns:WSMediaUsageList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLCacheRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--set_name-->
              <s:element name="setName" type="s:string" />

              <!--[0 - cache is edited, otherwise - a new cache is being created]-->
              <s:element name="createCache" type="s:int" />

              <!--[-D     non-zero value: deletes all the cache options]-->
              <s:element name="delCacheOptions" type="s:int" />

              <!--[-0     Clears  all  the  cache parameters except for the cache_root and
              max_number_of_pages.  This  allows  redefinition  of  the  cache
              parameters with the "rnulhPgRwxSEF" options.-->
              <s:element name="clearAll" type="s:int" />

              <!--[-r     Filesystem is mounted read-only]-->
              <s:element name="readOnlyNextMount" type="s:int" />

              <!--[-n     Mounts  the Integral Volume set with a clean cache]-->
              <s:element name="cleanCacheMount" type="s:int" />

              <!--[ {1|0} Enable or disable the mount (publish) on server restart]-->
              <s:element name="mountedOnRestart" type="s:int" />

              <!--[ {1|0} Recreates the file system databases before mounting]-->
              <s:element name="recreateDatabase" type="s:int" />

              <!--[ {1|0} Forces set mounting]-->
              <s:element name="forceMount" type="s:int" />

              <!--[-e     Enables  write  operation after covered error occurs. By default
              after covered error filesystem returns error on any write opera-
              tion until error condition is cleared.-->
              <s:element name="enableWritingAfterError" type="s:int" />

              <!--[-p {max_number_of_pages | xxMB | xxGB |xxTB}]-->
              <s:element name="maxPagesNumber" type="s:string" />

              <!--[-s page_size]-->
              <s:element name="cachePageSize" type="s:string" />

              <!--[-l low_primary_capacity
              The  number  of  pages used to control the stop archiving.  When
              archiving starts because of the number of primary pages  in  the
              cache  becomes  equal  to  the high_primary_capacity  value,  it
              proceeds  until  the number of primary pages in  the  cache   is
              equal   to   or  less  than the low_primary_capacity value]-->
              <s:element name="lowPrimaryCapacity" type="s:string" />

              <!--[-h high_primary_capacity
              The  number  of  pages  used  to  control  the  start archiving.
              Archiving starts when the number of primary pages in the   cache
              becomes   equal  to  or  greater  than   the high_primary_capac-
              ity  value]-->
              <s:element name="highPrimaryCapacity" type="s:string" />

              <!--[-C read_reserved_capacity. Number of pages reserved for read]-->
              <s:element name="readReservedCapacity" type="s:string" />

              <!--[-P [h=]{prefetch_priority_period|0}
              Period of time in seconds  which  starts  after  the  last  read
              request  in  the  cache]-->
              <s:element name="prefetchPriorityPeriod" type="s:int" />
              <s:element name="prefetchPriorityPeriodHard" type="s:int" />

              <!--[-c cache_root
              Specifies  the  cache root directory.  If the cache_root has not
              been specified or has been deleted by the -D option, no cache is
              supposed to be assigned to the Integral Volume set.-->
              <s:element name="cacheRootDirectory" type="s:string" />

              <!--[-g [h=]{rdonly_grace_period|0}]-->
              <s:element name="rdonlyGracePeriod" type="s:string" />
              <!--[-R [h=]{retention_period|0}]-->
              <s:element name="retentionPeriod" type="s:string" />
              <!--[-A [h=]{Access time retention_period|0}]-->
              <s:element name="atimeRetentionPeriod" type="s:string" />
              <!--[-O [h=]{owner access period|0}]-->
              <s:element name="ownerAccessPeriod" type="s:string" />

              <!--[-w [h=]{1|0}]
              With -w1, filesystem is worm.  It is prohibited to  overwrite  a
              file,  remove it, or set its size.  A file can be only appended.
              With this option, grace and retention periods are ignored.  With
              -w0 or by default, filesystem is not worm.  The prefix h= speci-
              fies a hard worm-fs feature.-->
              <s:element name="wormFS" type="s:int" />
              <s:element name="wormFSHard" type="s:int" />

              <!--[-x [h=]{1|0}]
              With -x1, file renaming in the  worm  filesystem  or  after  the
              grace  period expires is prohibited.  With -x0 or by default, it
              is allowed.  The prefix h= specifies a hard no-worm-rename  fea-
              ture.-->
              <s:element name="denyWORMRename" type="s:int" />
              <s:element name="denyWORMRenameHard" type="s:int" />

              <s:element name="useCrtime" type="s:int" />
              <s:element name="useCrtimeHard" type="s:int" />
              <s:element name="grTimes" type="s:string" />
              <s:element name="grTimesHard" type="s:int" />

<!--[-S [h=]{SHA1|SHA256|SHA512|0}]
              Specifies  digest type of the set.  0 means no digest.  The pre-
              fix h= specifies a hard digest type.-->
              <s:element name="shaType" type="s:string" />

              <!--[-E [h=]{AES128|AES192|AES256|0}]
              Specifies encryption type of the set.  0  means  no  encryption.
              The prefix h= specifies a hard encryption type.-->
              <s:element name="aesType" type="s:string" />

              <!--[-F [h=]{0|1}]
              Sets prefetching mode to full (1) or partial (0).  The prefix h=
              specifies a hard  prefetching  mode.-->
              <s:element name="prefetchingMode" type="s:int" />
              <!--non-zero specifies a hard  prefetching  mode.-->
              <s:element name="prefetchingModeHard" type="s:int" />

              <!--[-B [h=]{dir|set|straight}]
              Sets  back  end  retention. dir means directory-based retention,
              set - set-based retention, straight - straight retention.-->
              <s:element name="backEndRetention" type="s:string" />

              <!--[-A [h=]{0|1}]
              Allows (1) or disallows (0) to update a file access time.   This
              affects  a  request  to update an access time without updating a
              modification time. If option -A is 1, such an update is allowed,
              if 0 - it is ignored.  The default is 0 - no access time update.
              The prefix h= specifies a hard atime update feature.-->
              <s:element name="updateFileATime" type="s:int" />

              <!--[-T [h=]{0|1}   cache write throttling]-->
              <s:element name="cacheWriteThrottling" type="s:int" />
              
              <!--[RAM Disk info string]-->
              <s:element name="ramDiskInfo" type="s:string" />
            
              <!--[Check permission bits/ACl in cache - Linux mainly]-->
              <s:element name="verifyPermissions" type="s:int" />
              <!--[Declare File RO after it is closed for IVS WORM mode]-->
              <s:element name="declareFileRO" type="s:string" />
              <!--[Cloud cold prefetch min size and extensions]-->
              <s:element name="coldPrefetch" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLCacheResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLMountIVRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--set_name-->
              <s:element name="setName" type="s:string" />

              <!--mount point path-->
              <s:element name="mountPoint" type="s:string" />

              <!--[-a     Mounts  all  Integral  Volume  Sets  with  mount_on_server_restart  option enabled]-->
              <!--s:element name="mountAllIVS" type="s:unsignedInt"-->

              <!--[-n     Mounts with the clean cache]-->
              <s:element name="cleanCache" type="s:int" />

              <!--[-I     Recreate the filesystem databases before mounting]-->
              <s:element name="recreateFSDB" type="s:int" />

              <!--[-r     Mounts the Integral Volume set read only]-->
              <s:element name="readOnly" type="s:int" />

              <!--[-f     Mounts the Integral Volume set possible inconsistency between cache, filesystem databases and media]-->
              <s:element name="possibleInconsistency" type="s:int" />

              <!--[-i     Makes  fs  ID  from the set name rather than from set Id on the media]-->
              <s:element name="makeFSIDFromSetName" type="s:int" />

              <!--[-R     Forces  to mount a set read-write even if it belongs to a replication set]-->
              <s:element name="forceReadWriteMount" type="s:int" />
              
              <!--[non-zero value means SDF Secondary]-->
              <s:element name="isSDFSecondary" type="s:int" />

              <!--[-L {m|c|mc|cm}  Start migrator or/and MCFS log immediately after mount]-->
              <s:element name="startMigratorAfterMount" type="s:string" />

              <!--[-c cache_root   Specifies  an  alternative cache root for "dated mount"]-->
              <s:element name="cacheRootDatedMount" type="s:string" />

              <!--[-t [mmdd]HHMM|[cc]yymmddHHMM    Specifies the date and time for "dated mount"]-->
              <s:element name="datedMount" type="s:string" />
              
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLMountIVResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLUMountIVRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[set name or mount point]-->
              <s:element name="mountName" type="s:string" />
              <!--[-f     Force unmount set even if there are open files]-->
              <s:element name="forceUMount" type="s:int" />
              <!--[non-zero value means SDF Secondary]-->
              <s:element name="isSDFSecondary" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLUMountIVResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLEraseRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[device_name]-->
              <s:element name="deviceName" type="s:string" />
              <!--[slots list. slot index starts from 1]-->
              <s:element name="slotList" type="tns:WSSlotList" />
              <!--[-f     Full  erase]-->
              <s:element name="fullErase" type="s:int" />
              <!--[-e     Emulate  erase]-->
              <s:element name="emulateErase" type="s:int" />
              <!--[-j     delayed_job_name
                          Specifies the job name used to identify the job in the delayed job list]-->
              <s:element name="delayedJobName" type="s:string" />
              <!--[-d Specifies the date and time the jobs should be executed on the delayed jobs list]-->
              <s:element name="delayedJobDate" type="s:long" />
              <s:element name="contextId" type="s:long" />
              <s:element name="cancel" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLEraseResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLeaseRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--jukebox name-->
              <s:element name="deviceName" type="s:string" />
              
              <!--set_name-->
              <s:element name="setName" type="s:string" />

              <!--[-L {on | off} Enables (on) or disables (off) leasing specified in-set-media slot]-->
              <s:element name="leasingOnOff" type="s:string" />
              
              <!--[-T {seconds | default | restore | save}
                  Specifies the value time leasing (in seconds, default or saved value) or save current value]-->
              <s:element name="valueTimeLeasing" type="s:string" />

              <!--[-l     Shows default value of lease time]-->
              <s:element name="showDefaultValue" type="s:unsignedInt" />

              <s:element name="sequenceNumber" type="s:unsignedInt" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLeaseResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLCloseRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--device name-->
              <s:element name="deviceName" type="s:string" />

              <!--slot number including side a|b-->
              <s:element name="slotNumber" type="s:string" />

              <!--"1": force disk closing-->
              <s:element name="force" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLCloseResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
          
          <s:complexType name="WSVLExportBulkRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--device name-->
              <s:element name="deviceName" type="s:string" />

              <!--[non-sequencial slot range: 1,3,5...]-->
              <s:element name="slotRange" type="s:string" />

              <!--[-o   open door "1" - property is set, otherwise - no]-->
              <s:element name="openDoor" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLExportBulkResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMagazineRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="magazineNumber" type="s:string" />
              <s:element name="useBarcode" type="s:byte" />
              <s:element name="useIdDiff" type="s:byte" />
              <s:element name="useIdStrict" type="s:byte" />
              <s:element name="openDoor" type="s:byte" />
              <s:element name="sequential" type="s:byte" />
              <s:element name="slotProfile" type="s:string" />
              <s:element name="operatorAnswer" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMagazineResponse">
            <s:sequence>
              <s:element name="contextId" type="s:long" />
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRecoverRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="slotIndex" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRecoverResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />          
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLInSetRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--set name-->
              <s:element name="setName" type="s:string" />

              <s:element name="sequenceNumber" type="s:string" />

              <!--[-f     Changes the offline location of the media to offline]-->
              <s:element name="offlineLocation" type="s:string" />
              
              <!--[-a     Adds a media to the cache without copying of its information]-->
              <s:element name="addMediaCache" type="s:string" />
              
              <!--[-c {tree|data}  Copies information from the media into the cache.
                            tree   Copies the tree structure only.
                            data   Copies the tree structure and data.]-->
              <s:element name="copyMediaToCache" type="s:string" />
              
              <!--[-l     Locks data related to the media in the cache]-->
              <s:element name="lockData" type="s:string" />
              
              <!--[-u     Unlocks data related to the media in the cache]-->
              <s:element name="unlockData" type="s:string" />
              
              <!--[-r {tree|data|medium|all} Removes information related to the media from the cache and/or from the Integral Volume set.
                            tree   Removes the tree structure and data from the cache.
                            data   Removes the data only.
                            medium Removes the media from the Integral Volume set.
                            all    Removes the tree structure and data from the cache and the media from the set.]-->
              <s:element name="removeDataFromMedia" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLInSetResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />   
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMIcDBRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--set name-->
              <s:element name="setName" type="s:string" />

              <!--[-f     Set database to offline mode]-->
              <!--[-n     Set database to online mode]-->
              <s:element name="onlineOffline" type="s:string" />

              <!--[-m     Reset  email  pending  flag]-->
              <s:element name="resetEMailPendingFlag" type="s:string" />

              <!--[{-c|{-e|-i|-p|-s0|-s1|-s2} - mutually exclusive options]-->
              
              <!--[-c     Clear error status for all volumes]-->
              <s:element name="clearErrorAll" type="s:string" />

              <!--[-e     Clear error volume status after error's reason was fixed]-->
              <s:element name="clearError" type="s:string" />

              <!--[-i     This option allows to disassociate volume replicas
                          from the source volume in case replicas are corrupted]-->
              <s:element name="disassociateReplicas" type="s:string" />

              <!--[-p     Skip replica from copy or sync operation]-->
              <s:element name="skipReplica" type="s:string" />
              
              <!--[-s0    "off"   Set OFF synchronization status for given volume]-->
              <!--[-s1    "on"    Set ON synchronization status for given volume]-->
              <!--[-s2    "done"  Set DONE synchronization status for given volume]-->
              <s:element name="setSyncStatus" type="s:string" />

              <s:element name="volumeNumber" type="s:string" />
              <s:element name="replicaNumber" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMIcDBResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />   
              <s:element name="dbViewOutput" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLPingRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLPingResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />   
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLOffSyncRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="setName" type="s:string" />
              <s:element name="command" type="s:string" />
              <s:element name="sequenceNumber" type="s:int" />
              <s:element name="verbose" type="s:byte" />
              <s:element name="cancel" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLOffSyncResponse">
            <s:sequence>
              <s:element name="contextId" type="s:long" />
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />   
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLExchangeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="libName" type="s:string" />
              <s:element name="src" type="s:int" />
              <s:element name="dst" type="s:int" />
              <s:element name="cancel" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLExchangeResponse">
            <s:sequence>
              <s:element name="contextId" type="s:long" />
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRefreshRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <!--[slots list. slot index starts from 1]-->
              <s:element name="slotList" minOccurs="0" type="tns:WSSlotList" />
              <!--[-s Enforce  sequential (-s), parallel is default]-->
              <s:element name="refreshSequential" type="s:unsignedInt" />
              <!--[-B, -F  Refresh procedure will use barcode media database instead of physical refresh, or full refresh]-->
              <s:element name="refreshMode" type="s:string" />
              <!--[-o     Refresh  procedure will attempt to unlock media in the drive to perform refresh if no free drives are available]-->
              <s:element name="unlockMedia" type="s:unsignedInt" />
              <s:element name="contextId" type="s:long" />
              <s:element name="cancel" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRefreshResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLReplaceRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="slotNumber" type="s:string" />

              <s:element name="deviceNameRepl" type="s:string" />
              <s:element name="slotNumberRepl" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLReplaceResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRestoreFSDBRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />

              <!--[-D UDF_span_number or SDF_volume_number or AAFS_seq_number or LTFS_span_number]-->
              <s:element name="spanNumberFrom" type="s:unsignedInt" />
              <s:element name="spanNumberTo" type="s:unsignedInt" />

              <!--[-cfsdb_cache_root]-->
              <s:element name="cacheRoot" type="s:string" />

              <!--[-f     AAFS: force restoring, even if database exists]-->
              <s:element name="forceRestore" type="s:unsignedInt" />

              <!--[-L | -Q    Restoring  type:  L(ong)  -  scanning  data on disk, Q(uick) - scanning DB on disk (For AAFS sets only)]-->
              <s:element name="restoringType" type="s:string" />
              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRestoreFSDBResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLReuseRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="cancel" type="s:byte" />

              <!--[More than one in_set_number may be specified for the same command]-->
              <!--[for example: "1,2,3,4,5"]-->
              <s:element name="sequenceNumber" type="s:string" />

              <!--[-r     Specifies relocation only mode]-->
              <s:element name="relocationOnly" type="s:string" />
        
              <!--[-j delayed_job_name    Specifies the job name used to identify the job in the delayed job list]-->
              <s:element name="delayedJobName" type="s:string" />
        
              <!--[-d [mmdd]HHMM|[cc]yymmddHHMM     Specifies the date and time the jobs should be executed on the delayed jobs list]-->
              <s:element name="jobExecDate" type="s:string" />
        
              <!--[p cache size to used      Specifies cache size used for reclaim operations in gigabytes  (<number>G)  or  megabytes  (<number>M).]-->
              <s:element name="cacheSize" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLReuseResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLScratchRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="slotStart" type="s:string" />
              <s:element name="slotEnd" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLScratchResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLInitMirroringRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="primary" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLInitMirroringResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLStartMirroringRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />

              <!--[-k     Stop hot-sync operation for the specified set]-->
              <s:element name="stopHotSyncOperation" type="s:string" />

              <!--[-a {q|f}    Start off-sync audit operation for the specified set. The audit operation may be "quick" or "full"]-->
              <s:element name="startOffSyncAudit" type="s:string" />
              
              <!--[-y     Perform actual offline synchronization of the volume(s). Implies quick audit operation.]-->
              <s:element name="doActualOfflineSync" type="s:string" />

              <!--[-s N   Perform off-sync operations starting from volume with sequence number N]-->
              <s:element name="doOffSyncVolumeNumber" type="s:string" />
              
              <!--[-n N   Limit processing to N volumes per invocation]-->
              <s:element name="limitVolumesNumber" type="s:string" />
              
              <!--[-j {delayed_job_name | "default"}   -S cron_like_schedule ]-->
              <s:element name="delayedJobName" type="s:string" />
              <s:element name="jobSchedule" type="s:string" />
              
              <!--[-d {a|d}    Specifies direction of the volume analysis:
                               a - ascending (from volume 0 until the end of the volumes in the set) or
                               d - descending (from highest volume number to 0 )]-->
              <s:element name="volumeAnalysisDirection" type="s:string" />
              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLStartMirroringResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLQListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--[-j [d][c][m][r][e][A][i][o][a]
                    The -j flag allows for specific job type  filters  to  be  used.
                    Multiple filters may be used together on the same command line.
                    "d" or "record"       - Displays only vlrecord jobs.
                    "c" or "copy"         - Displays only vlcopy jobs.
                    "m" or "cmp"          - Displays only vlcmp jobs.
                    "r" or "reuse"        - Displays only vlreuse jobs.
                    "e" or "erase"        - Displays only vlerase jobs.
                    "A" or "arc"          - Displays only mmarc jobs.
                    "a" or "all"          - Displays all job types.
                    "i" or "icopy"        - Displays only incremental copy jobs.
                    "o" or "mirror"       - Displays only off-line SDF mirror synchronization jobs.
                    "t" or "conversion"   - Displays only queue conversion jobs, for example SDF to TDO.
                    "s" or "cron"         - Displays only cron script jobs.]-->
              <s:element name="jobTypeFilter" type="s:string" />

              <!--[-s [w][s][d][e]
                    The  -s  flag  allows for specific job state filters to be used.
                    Multiple filters may be used together on the same command line.
                    "w" or "waiting" - Displays all jobs waiting for execution.
                    "s" or "started" - Displays all jobs that have started.
                    "d" or "noerror" - Displays all jobs that have completed without error.
                    "e" or "error" - Displays all jobs that have completed with error.]-->
              <s:element name="jobStateFilter" type="s:string" />
        
              <!--[-h sender_hostname
                    Displays all records that came from the host specified by sender_hostname]-->
              <s:element name="senderHostname" type="s:string" />
        
              <!--[-u user_id    Displays all records that originated from the user specified by user_id.]-->
              <s:element name="userId" type="s:string" />
        
              <!--[-l     Outputs in long format]-->
              <s:element name="longFormat" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLQListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLQMoveRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="jobId1" type="s:string" />
              <s:element name="jobId2" type="s:string" />
              <s:element name="moveAfter" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLQMoveResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLQRemoveRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="jobId" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLQRemoveResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRecordRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <s:element name="deviceName" type="s:string" />
              <s:element name="slotNumber" type="s:string" />
              <s:element name="surfaceNumber" type="s:string" />
              <s:element name="imagePath" type="s:string" />

              <!--[-x [speed_X | max]  Specifies  recording  speed]-->
              <s:element name="recordingSpeed" type="s:string" />

              <!--[-b buffer_Mb    Specifies memory buffer size used for recording]-->
              <s:element name="recordingBuffSize" type="s:string" />

              <!--[-t     Test mode. When the Test mode is specified, the software and CD/DVD-R drive simulate the write process]-->
              <s:element name="writeTestMode" type="s:string" />

              <!--[-T     Test mode with no write operations. This mode is used to determine the data transfer rate]-->
              <s:element name="noWriteTestMode" type="s:string" />

              <!--[-V     Specifies  verification  mode]-->
              <s:element name="verificationMode" type="s:string" />

              <!--[-o     leave open]-->
              <s:element name="leaveOpen" type="s:string" />

              <!--[-p     Sets media type of the media will be used for recording]-->
              <s:element name="mediaType" type="s:string" />

              <!--[-s set_name   Specifies the Integral Volume set name to which the newly written media will be automatically added]-->
              <s:element name="setName" type="s:string" />

              <!--[-j delayed_job_name   Specifies the job name used to identify the job in the delayed job list]-->
              <s:element name="delayedJobName" type="s:string" />

              <!--[-d [mmdd]HHMM|[cc]yymmddHHMM
                                Specifies  the date and time the jobs should be executed on the delayed jobs list
                                mm is the month
                                dd is the day of month
                                HH is the hour (24 hour system)
                                MM is the minute
                                cc is the century
                                yy is the last 2 digits of the year]-->
              <s:element name="jobExecutionDate" type="s:string" />

              <!--[-n number_of_copies    Specifies the number of copies of the same ISO/UDF image that will be recorded to CD/DVD-R media]-->
              <s:element name="numberOfCopies" type="s:string" />

              <!--[-m mail_addr    Specifies the email address to which confirmation is sent when the job has completed]-->
              <s:element name="emailAddress" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRecordResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLPublishRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="sequenceNumber" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLPublishResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSArgList">
            <s:sequence>
              <s:element name="argument" type="s:string" maxOccurs="unbounded" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLScheduleRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--[-p executable_file_path
                      The  mandatory -p flag allows to specify absolute path to the executable file]-->
              <s:element name="executableFilePath" type="s:string" />

              <!--[-s cron_like_schedule    Cron schedule: Minute Hour Day Month Weekday]-->
              <s:element name="schedule" type="s:string" />
              
              <!--[-j scheduled_job_name    Specifies the job name used to identify the job in the delayed job list]-->
              <s:element name="jobName" type="s:string" />

              <!--[-u argument0 ... argumentN
                      A  space  separated  list of the arguments required for the scheduled executable]-->
              <!--s:element name="argList" maxOccurs="unbounded" type="tns:WSArgList" /-->
              <s:element name="argList" type="tns:WSArgList" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLScheduleResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLReplicaRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <s:element name="setName" type="s:string" />

              <s:element name="replicaIndex" type="s:string" />

              <!--[-f {on | off | out | in | read}
                      "on"    Forces  the replica to be online in the replication Integral Volume set.
                      "off"   Forces the replica to be offline in the replication Integral Volume set.
                      "out"   Forces  the replica to be out of sync in the replication Integral Volume set.
                      "in"    Forces the replica to be in sync in the replication Integral Volume set.
                      "read"  Forces the replica to be a read replica in the replication Integral Volume set.]-->
              <s:element name="forceAction" type="s:string" />
              
              
              <!--[-c "start"  Starts comparison process.
                      "stop"   Stops comparison process.]-->
              <s:element name="comparison" type="s:string" />

              <!--[If rel_path is present, comparison starts not from the set root directory
                  but from the path specified (rel_path is relative to the  set  root).]-->
              <s:element name="relativePath" type="s:string" />

              <!--[-s "start"  Start a sync process.
                      "stop"   Stops the sync process.]-->
              <s:element name="sync" type="s:string" />
              
              <!--[-L     Logs synchronization operations in <set_name>_rpl_sync_log file.]-->
              <s:element name="logSync" type="s:string" />
              
              <!--[-R     Specifies that regular files contents is used in comparison operations.]-->
              <s:element name="usedInComparison" type="s:string" />
              
              <!--[-V     Verbose, used with "-c start".  Pathnames of the files compared printed in the report.]-->
              <s:element name="verbose" type="s:string" />
              
              <!--[-O {mtime,check,keepf,keeps}
                   Specifies the list of comma separated words which allow to control cold or hot sync:
                    "mtime"  Copy file if it has the same size in both good and bad replicas but its modification time in the
                                good  replica is greater than its modification time in the bad replica.
                    "check"  This option affects the file which is not copied because of its size or modification time.
                    "keepf"  Do not remove the file from the bad replica if it does  not  exist  in  the  good  replica.
                    "keeps"  Do  not  remove  the  stream  from the bad replica if it does not exist in the good replica.]-->
              <s:element name="syncControl" type="s:string" />
              
              <!--[-b bad_replica_index   Forces to use a replica with this index as bad replica.]-->
              <s:element name="badReplicaIndex" type="s:int" />
              
              <!--[-t time_limit
                      Limits the duration of the comparison, cold sync, or hot sync: after the time limit expires,
                      it works like "-c stop".]-->
              <s:element name="timeLimitStr" type="s:string" />
              <s:element name="timeLimitInt" type="s:int" />
              
              <!--[-S     Prints status of the replication Integral Volume set including information on hot/cold sync.]-->
              <s:element name="replicaStatus" type="s:string" />
              
              <s:element name="contextId" type="s:long" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLReplicaInstanceEntry">
            <s:sequence>
              <s:element name="setName" type="s:string" />
              <s:element name="online" type="s:int" />
              <s:element name="insync" type="s:int" />
              <s:element name="level" type="s:int" />
              <s:element name="status" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLReplicaInstanceList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="replicaInstanceEntry" type="tns:WSVLReplicaInstanceEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLReplicaStatus">
            <s:sequence>
              <s:element name="mounted" type="s:int" />
              <s:element name="replicaCount" type="s:int" />
              <s:element name="readIndex" type="s:int" />
              <s:element name="syncCmp" type="s:string" />
              <s:element name="startTime" type="s:string" />
              <s:element name="goodReplicaIndex" type="s:int" />
              <s:element name="badReplicaIndex" type="s:int" />
              <s:element name="badReplicaIndexStr" type="s:string" />
              <s:element name="isCmp" type="s:int" />
              <s:element name="isCmpStr" type="s:string" />
              <s:element name="rplStatus" type="s:string" />
              <s:element name="replicaInstanceList" type="tns:WSVLReplicaInstanceList" />              
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLReplicaResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element minOccurs="0" name="replicaStatus" type="tns:WSVLReplicaStatus" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLLSMDbRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="setId" type="s:string" />
              <s:element name="spanNumber" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSMediaEntry">
            <s:sequence>
              <s:element name="setName" type="s:string" />
              <s:element name="setId" type="s:string" />
              <s:element name="inSetNumber" type="s:string" />
              <s:element name="state" type="s:string" />
              <s:element name="copyNumber" type="s:string" />
              <s:element name="volumeNumber" type="s:string" />
              <s:element name="sequenceNumber" type="s:string" />
              <s:element name="slotNumber" type="s:string" />
              <s:element name="jukeName" type="s:string" />
              <s:element name="barcode" type="s:string" />
              <s:element name="mediaType" type="s:string" />
              <s:element name="fsType" type="s:string" />
              <s:element name="offline" type="s:string" />
              <s:element name="capacity" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLSMediaList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="mediaEntry" type="tns:WSLSMediaEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLLSMDbResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="mediaList" type="tns:WSLSMediaList" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLSDF2TDORequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />

              <!--[-r     Force SDF database restore from media before conversion]-->
              <s:element name="restoreBeforeConversion" type="s:string" />
              
              <!--[-b     The operation will be executed in backgound mode]-->
              <s:element name="backgoundMode" type="s:string" />
              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLSDF2TDOResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEnumMediaByLibraryNameRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              
              <!--[If Library Name is emtpy Media for all libraries discovered in the system will be returned to the User]-->
              <s:element minOccurs="0" name="libraryName" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMediaByLibraryEntry">
            <s:sequence>
              <s:element name="busyType" type="s:string" />
              <s:element name="barcode" type="s:string" />
              <s:element name="mediaId" type="s:string" />
              <s:element name="offlineLocation" type="s:string" />
              <s:element name="surfaceType" type="s:string" />
              <s:element name="setType" type="s:string" />
              <s:element name="setName" type="s:string" />
              <!--[for VSKIN set type]-->
              <s:element name="setStyle" type="s:string" />
              <s:element name="inSetNumber" type="s:string" />
              <s:element name="copyNumber" type="s:string" />
              <!--[capacity per side in KB]-->
              <s:element name="kbPerSide" type="s:string" />
              <!--[used capacity in KB] - for LTFS and TDO only-->
              <s:element name="usedKb" type="s:string" />
              <!--[in bytes]-->
              <s:element name="blockSize" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryMediaList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="mediaEntry" type="tns:WSMediaByLibraryEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryEntry">
            <s:sequence>
              <s:element name="libraryName" type="s:string" />
              <!-- Maximum number of media per set is related to constant value
                     QS_VL_MAX_MEDIA_PER_SET = 4096-->
              <s:element name="maxMediaPerSet" type="s:string" />

              <!-- Library configuration -->
              <s:element name="version" type="s:string" />
              <s:element name="slotCount" type="s:string" />
              <s:element name="driveCount" type="s:string" />
              <s:element name="essence" type="s:string" />
              <s:element name="evaluated" type="s:string" />
              <s:element name="jukeBoxId" type="s:string" />
              
              <!--[List of media discovered for the given library]-->
              <!--s:element minOccurs="0" maxOccurs="unbounded" name="mediaList" type="tns:WSLibraryMediaList" /-->
              <s:element name="mediaList" type="tns:WSLibraryMediaList" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="libraryEntry" type="tns:WSLibraryEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSEnumMediaByLibraryNameResponse">
            <s:sequence>
              <s:element name="retCode" type="s:unsignedInt" />
              <s:element name="retDescription" type="s:string" />
              <!--[List of libraries discovered in the system]-->
              <!--s:element minOccurs="0" maxOccurs="1" name="libraryList" type="tns:WSLibraryList" /-->
              <s:element name="libraryList" type="tns:WSLibraryList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLVerifyRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLVerifyFixEntry">
            <s:sequence>
              <s:element name="message" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLVerifyFixList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="reportEntry" type="tns:WSVLVerifyFixEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLVerifyResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="errorList" type="tns:WSVLVerifyFixList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLFixDBRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="barcodeRefresh" type="s:string" />
              <s:element name="cancel" type="s:byte" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLFixDBResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="reportList" type="tns:WSVLVerifyFixList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLCopyCompareRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="cancel" type="s:byte" />
              <s:element name="hostSrc" type="s:string" />
              <s:element name="hostDst" type="s:string" />
              <s:element name="libNameSrc" type="s:string" />
              <s:element name="libNameDst" type="s:string" />
              <s:element name="slotSrc" type="s:unsignedInt" />
              <s:element name="slotDst" type="s:unsignedInt" />
              <s:element name="jobIsCopy" type="s:byte" />
              <s:element name="jobName" type="s:string" />
              <!--[-d [mmdd]HHMM|[cc]yymmddHHMM]-->
              <s:element name="jobExecDate" type="s:string" />
              <s:element name="incremental" type="s:byte" />
              <s:element name="skipSizeCheck" type="s:byte" />
              <s:element name="compareAfterCopy" type="s:byte" />
              <s:element name="compareTailOnlyMB" type="s:int" />
              <!-- Limit number of gigabytes per session -->
              <s:element name="sessionGBLimit" type="s:int" />
              <!-- Time limit per session -->
              <s:element name="sessionTimeLimit" type="s:int" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLCopyCompareResponse">
            <s:sequence>
              <s:element name="contextId" type="s:long" />
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
          
          <s:complexType name="WSStartASMServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStartASMServerResponse">
            <s:sequence>
              <s:element name="contextId" type="s:long" />
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStopASMServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStopASMServerResponse">
            <s:sequence>
              <s:element name="contextId" type="s:long" />
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSKillASMServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSKillASMServerResponse">
            <s:sequence>
              <s:element name="contextId" type="s:long" />
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStartQS3ServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStartQS3ServerResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStopQS3ServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStopQS3ServerResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQS3AccountEntry">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="1" name="recId" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="firstName" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="lastName" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="displayName" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="emailAddress" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="storagePath" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="phoneNumber" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="postalAddress" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="accessKey" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="secretKey" type="s:string" />
              <s:element name="flags" type="s:int" />
              <s:element name="readOnly" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3AccountList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="accountEntry" type="tns:WSQS3AccountEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3GetAccountListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3GetAccountListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="accounts" type="tns:WSQS3AccountList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3GetAccountRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="loginB64" type="s:string" />
              <s:element name="passwordB64" type="s:string" />
              <s:element name="accessKey" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3GetAccountResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="accountEntry" type="tns:WSQS3AccountEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3CreateAccountRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="firstName" type="s:string" />
              <s:element name="lastName" type="s:string" />
              <s:element name="displayName" type="s:string" />
              <s:element name="emailAddress" type="s:string" />
              <s:element name="storagePath" type="s:string" />
              <s:element name="readOnly" type="s:byte" />
              
              <!-- value of 1 - If set, error will be returned to the User  -->
              <!-- value of 2 - If set, DO NOT create new user.q_qs3 attribute -->
              <!-- value of 4 - If set, list ALL files, even with "- -in- -progress- -" eTag -->
              <!-- value of 8 - If set, account is considered as "Public" (allows non-unique fields like email, storage directory path, etc) -->
              <s:element name="flags" type="s:int" />
              
              <s:element minOccurs="0" maxOccurs="1" name="phoneNumber" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="postalAddress" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3CreateAccountResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3ModifyAccountRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!-- zero-based index of record in users database -->
              <s:element name="index" type="s:string" />
              <s:element name="firstName" type="s:string" />
              <s:element name="lastName" type="s:string" />
              <s:element name="displayName" type="s:string" />
              <s:element name="emailAddress" type="s:string" />
              <s:element name="storagePath" type="s:string" />
              <s:element name="readOnly" type="s:byte" />
              
              <!-- value of 0 remains existing flags value untouched -->
              <!-- value of 1 - If set, error will be returned to the User  -->
              <!-- value of 2 - If set, DO NOT create new user.q_qs3 attribute -->
              <!-- value of 4 - If set, list ALL files, even with "- -in- -progress- -" eTag -->
              <!-- value of 8 - If set, account is considered as "Public" (allows non-unique fields like email, storage directory path, etc) -->
              <!-- value of -1 will reset all flags -->
              <s:element name="flags" type="s:int" />
              
              <s:element minOccurs="0" maxOccurs="1" name="phoneNumber" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="postalAddress" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3ModifyAccountResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3RemoveAccountRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="index" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3RemoveAccountResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3GetServerConfigRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQS3GetServerConfigResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="serverConfig" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3PutServerConfigRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="serverConfig" type="s:string" />
              <s:element name="serverConfigLength" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQS3PutServerConfigResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQWSDGetServerConfigRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQWSDGetServerConfigResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="serverConfig" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQWSDPutServerConfigRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="serverConfig" type="s:string" />
              <s:element name="serverConfigLength" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQWSDPutServerConfigResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStartCryptoServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStartCryptoServerResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStopCryptoServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStopCryptoServerResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSAuthorizeCryptoServerRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="pwd" type="s:string" />
              <s:element name="savePwd" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSAuthorizeCryptoServerResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetCertificateDetailsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetCertificateDetailsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="certDetails" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSiteCertificateCreateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="passPhrase" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSiteCertificateCreateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetSetServerPriorityRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="priority" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetSetServerPriorityResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="priority" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSChangeMaxXferSizeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="driveNumber" type="s:unsignedInt" />
              <s:element name="maxXferSize" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSChangeMaxXferSizeResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMultipathManagementRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <!-- "0" - for Library device itself. Drive index starts from "1"-->
              <s:element name="driveIndex" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSDeviceConnectivityEntry">
            <s:sequence>
              <s:element name="hostAccessPath" type="s:string" />
              <s:element name="MpStatus" type="s:string" />
              <s:element name="MpPrio" type="s:unsignedInt" />
              <s:element name="MpSeqNum" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSDeviceConnectivityList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="256" name="connectivityEntry" type="tns:WSDeviceConnectivityEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMPElementEntry">
            <s:sequence>
              <s:element name="connectivityList" type="tns:WSDeviceConnectivityList" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMPElementList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="256" name="mpElementEntry" type="tns:WSMPElementEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSStorageDeviceEntry">
            <s:sequence>
              <s:element name="mpElementList" type="tns:WSMPElementList" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSStorageDeviceList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="256" name="storageDeviceEntry" type="tns:WSStorageDeviceEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMultipathManagementResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />

              <s:element name="pathVerificationPeriod" type="s:unsignedInt" />
              <s:element name="pathRetryTime" type="s:unsignedInt" />
              <s:element name="retryCount" type="s:unsignedInt" />
              <s:element name="retryInterval" type="s:unsignedInt" />

              <s:element name="storageDeviceList" type="tns:WSStorageDeviceList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMultipathManagementApplyRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <!-- "0" - for Library device itself. Drive index starts from "1"-->
              <s:element name="driveIndex" type="s:unsignedInt" />
              <s:element name="pathVerificationPeriod" type="s:string" />
              <s:element name="status" type="s:string" />
              <s:element name="priority" type="s:string" />
              <s:element name="mpIndex" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMultipathManagementApplyResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetSwapTimesRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="quantum" type="s:unsignedInt" />
              <s:element name="inactive" type="s:unsignedInt" />
              <s:element name="idle" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetSwapTimesResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetDeviceConfigStatusRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetDeviceConfigStatusResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element minOccurs="0" maxOccurs="unbounded" name="configStatus" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetDriveCapabilitiesRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setType" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSDriveCapabilitiesEntry">
            <s:sequence>
              <s:element name="domainName" type="s:string" />
              <s:element name="profilesList" type="s:string" />
              <s:element name="checked" type="s:int" />
              <s:element name="isDomain" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSDriveCapabilitiesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="capabilityEntry" type="tns:WSDriveCapabilitiesEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetDriveCapabilitiesResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="capabilitiesList" type="tns:WSDriveCapabilitiesList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetDriveProfileRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="driveNumber" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetDriveProfileResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="onOff" type="s:int" />
              <s:element name="flags" type="s:long" />
              <s:element name="priority" type="s:int" />
              <s:element name="driveProfile" type="s:string" />
              <s:element name="profileNames" type="s:string" />
              <s:element name="nativeProfiles" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSetDriveProfileRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="driveNumber" type="s:int" />
              <s:element name="onOff" type="s:int" />
              <s:element name="flags" type="s:long" />
              <s:element name="priority" type="s:int" />
              <s:element name="driveProfile" type="s:string" />
              <s:element name="profileNames" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetDriveProfileResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSResetDriveProfileRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="driveNumber" type="s:int" />
              <s:element name="deviceType" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSResetDriveProfileResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetLibraryStatisticsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetLibraryStatisticsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="inactiveTime" type="s:unsignedInt" />
              <s:element name="idleTime" type="s:unsignedInt" />
              <s:element name="quantumTime" type="s:unsignedInt" />
              <s:element name="imports" type="s:unsignedInt" />
              <s:element name="exports" type="s:unsignedInt" />
              <s:element name="loads" type="s:unsignedInt" />
              <s:element name="unloads" type="s:unsignedInt" />
              <s:element name="flips" type="s:unsignedInt" />
              <s:element name="schedulerRunning" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetLibraryOptionsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetLibraryOptionsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="options" type="s:unsignedInt" />
              <s:element name="optionIsOpenDoor" type="s:string" />
              <s:element name="optionIsMixedCDDVDDrives" type="s:string" />
              <s:element name="optionIsMagazineSupport" type="s:string" />
              <s:element name="optionIsBarcodeSupport" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetSCSIDeviceInfoRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="devicePath" type="s:string" />
              <s:element name="requestName" type="s:string" />
              <s:element name="requestFlags" type="s:unsignedInt" />

              <s:element name="carrierAddress" type="s:unsignedInt" />
              <s:element name="srcAddress" type="s:unsignedInt" />
              <s:element name="dstAddress" type="s:unsignedInt" />
              <s:element name="invert" type="s:unsignedInt" />

              <s:element name="firstBlock" type="s:unsignedInt" />
              <s:element name="blockCount" type="s:unsignedInt" />
              <s:element name="blockSize" type="s:unsignedInt" />
              <s:element name="fnameToReadWrite" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetSCSIDeviceInfoResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="requestResult" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSchedulerRequest">
             <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="command" type="s:string" />
                <s:element name="jobId" type="s:int" minOccurs="0" />
                <s:element name="jobName" type="s:string" minOccurs="0" />
                <s:element name="filePath" type="s:string" minOccurs="0" />
                <s:element name="arguments" type="s:string" minOccurs="0" />
                <s:element name="cron" type="s:string" minOccurs="0" />
             </s:sequence>
          </s:complexType>

          <s:complexType name="WSSchedulerEntry">
             <s:sequence>
                <s:element name="jobId" type="s:int" />
                <s:element name="jobType" type="s:string" />
                <s:element name="jobName" type="s:string" />
                <s:element name="status" type="s:string" />
                <s:element name="uid" type="s:int" />
                <s:element name="host" type="s:string" />
                <s:element name="cron" type="s:string" />
                <s:element name="registered" type="s:long" />
                <s:element name="started" type="s:long" />
                <s:element name="finished" type="s:long" />
                <s:element name="comment" type="s:string" />
             </s:sequence>
          </s:complexType>

          <s:complexType name="WSSchedulerEntriesList">
             <s:sequence>
                <s:element minOccurs="0"  maxOccurs="256" name="queueEntry" type="tns:WSSchedulerEntry" />
             </s:sequence>
          </s:complexType>

          <s:complexType name="WSSchedulerResponse">
             <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string" />
                <s:element name="queueList" type="tns:WSSchedulerEntriesList" />
             </s:sequence>
          </s:complexType>

          <s:complexType name="WSDbBackupRequest">
             <s:sequence>
                <s:element name="userToken" type="s:string" />
             </s:sequence>
          </s:complexType>

          <s:complexType name="WSDbBackupEntry">
             <s:sequence>
                <s:element name="id" type="s:long" />
                <s:element name="started" type="s:long" />
                <s:element name="finished" type="s:long" />
                <s:element name="created" type="s:long" />
                <s:element name="size" type="s:long" />
                <s:element name="type" type="s:string" />
                <s:element name="setName" type="s:string" />
                <s:element name="destination" type="s:string" />
                <s:element name="result" type="s:string" />
                <s:element name="notes" type="s:string" />
             </s:sequence>
          </s:complexType>
      
          <s:complexType name="WSDbBackupEntriesList">
             <s:sequence>
                <s:element minOccurs="0"  maxOccurs="256" name="backupEntry" type="tns:WSDbBackupEntry" />
             </s:sequence>
          </s:complexType>

          <s:complexType name="WSDbBackupResponse">
             <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string" />
                <s:element name="backupList" type="tns:WSDbBackupEntriesList" />
             </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetSysLogRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="startReadPos" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetSysLogResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="syslogMessage" type="s:string" />
              <s:element name="syslogPath" type="s:string" />
              <s:element name="lastReadPos" type="s:long" />
              <s:element name="logFileSize" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSysLogActionRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="action" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSysLogActionResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSysLogDirEntry">
            <s:sequence>
              <s:element name="logFileName" type="s:string" />
              <s:element name="fdate" type="s:string" />
              <s:element name="fsize" type="s:unsignedInt" />
              <s:element name="isDir" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSysLogDirList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="dirEntry" type="tns:WSSysLogDirEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSysLogGetAllFilesRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="dirLogName" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSysLogGetAllFilesResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="currentLogDir" type="s:string" />
              <s:element name="rootLogDir" type="s:string" />
              <s:element name="listAllLogs" type="tns:WSSysLogDirList"/>
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSysLogDownloadFileRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="logFileName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSysLogDownloadFileResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="logFileSize" type="s:long" />
              <s:element name="logFileBuffer" type="s:string"/>
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGenericDownloadFileRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[just file name without path]-->
              <s:element name="fileName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGenericDownloadFileResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!--[file data lentgh]-->
              <s:element name="fileDataSize" type="s:long" />
              <!--[base64 encoded file data]-->
              <s:element name="fileDataBuffer" type="s:string"/>
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGenericUploadFileRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[just file name without path]-->
              <s:element name="fileName" type="s:string" />
              <!--[file data lentgh]-->
              <s:element name="fileDataSize" type="s:long" />
              <!--[base64 encoded file data]-->
              <s:element name="fileDataBuffer" type="s:string"/>
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGenericUploadFileResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetSCSILogRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="startReadPos" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetSCSILogResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="scsilogMessage" type="s:string" />
              <s:element name="lastReadPos" type="s:long" />
              <s:element name="logFileSize" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogDriveEntry">
            <s:sequence>
              <s:element name="driveName" type="s:string" />
              <!--[is checked]-->
              <s:element name="driveUnitDoLog" type="s:int" />
              <!--[is pending]-->
              <s:element name="driveUnitPerfInterval" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSCSILogDriveList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="scsiDriveEntry" type="tns:WSSCSILogDriveEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSCSILogDeviceEntry">
            <s:sequence>
              <s:element name="deviceName" type="s:string" />
              <!--[is checked]-->
              <s:element name="carrierUnitDoLog" type="s:int" />
              <!--[is pending]-->
              <s:element name="carrierUnitPerfInterval" type="s:int" />
              <s:element name="driveCount" type="s:int" />
              <s:element name="scsiDriveList" type="tns:WSSCSILogDriveList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogDeviceList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="scsiDeviceEntry" type="tns:WSSCSILogDeviceEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogGetControlRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSCSILogGetControlResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="logActionCopyToFile" type="s:int" />
              <s:element name="logActionErrorsOnly" type="s:int" />
              <s:element name="logActionLongFormat" type="s:int" />
              <s:element name="logThreshold" type="s:int" />
              <s:element name="logCollapse" type="s:int" />
              <s:element name="scsiDeviceList" type="tns:WSSCSILogDeviceList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogSetControlRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="logActionCopyToFile" type="s:string" />
              <s:element name="logActionErrorsOnly" type="s:string" />
              <s:element name="logActionLongFormat" type="s:string" />
              <s:element name="logThreshold" type="s:int" />
              <s:element name="logCollapse" type="s:int" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogSetControlResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogEnableDeviceRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="driveIndex" type="s:int" />
              <!--[set checked]-->
              <s:element name="deviceUnitDoLog" type="s:int" />
              <!--[set pending]-->
              <s:element name="deviceUnitPerfInterval" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogEnableDeviceResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCleanSCSILogRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCleanSCSILogResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogGetPendingRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSCSILogGetPendingResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLGetIVSAdvancedConfigRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLGetIVSAdvancedConfigResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="advancedConfigXML" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLSetIVSAdvancedConfigRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="advancedConfigXML" type="s:string" />
              <s:element name="advancedConfigXMLLength" type="s:unsignedInt" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLSetIVSAdvancedConfigResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLGetMountOnDateListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />        
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMountOnDateEntry">
            <s:sequence>
              <s:element name="name" type="s:string" />
              <s:element name="date" type="s:string" />
              <s:element name="cache" type="s:string" />
              <s:element name="mounted" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMountOnDateList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="mountOnDateEntry" type="tns:WSMountOnDateEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLGetMountOnDateListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element minOccurs="0" name="mountOnDateList" type="tns:WSMountOnDateList"/>
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLMountOnDateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="cacheRoot" type="s:string" />
              <s:element name="mountPoint" type="s:string" />
              <s:element name="snapTime" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMountOnDateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLUMountOnDateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="snapTime" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLUMountOnDateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRemoveMountOnDateRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="cacheRoot" type="s:string" />
              <s:element name="snapTime" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLRemoveMountOnDateResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetFSPPSwitchOnOffRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--[Non-zero value will enable events registration for IVS specified in 'setName' field]-->
              <s:element name="enable" type="s:byte" />

              <!--[Event types available: 'a' (or "archive"), 'i' (or "import"),
                              'e' (or "export"), 'c' (or "close")]-->
              <s:element name="eventType" type="s:string"/>

              <!--[Integral Volume Set name or Path to directory belong to Integral Volume Set]-->
              <s:element name="IVSNameOrPath" type="s:string" />

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetFSPPSwitchOnOffResponse">
            <s:sequence>
              <s:element name="errorCode" type="s:unsignedInt"/>
              <s:element name="errorDescription" type="s:string" />
            </s:sequence>
          </s:complexType>
        
          <s:complexType name="WSGetFSPPFilesListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />

              <!--[should be empty for the first method invoke]-->
              <s:element name="cookieIn" type="s:string"/>

              <!--[Integral Volume Set name or Path to directory belong to Integral Volume Set]-->
              <s:element name="IVSNameOrPath" type="s:string" />

              <!--[Maximum number of entries to return per call]-->
              <s:element name="maxEntriesNumber" type="s:int" />

              <!--[Event type filter: 'a' (or "archive"), 'i' (or "import"),
                        'e' (or "export"), 'c' (or "close")]-->
              <s:element name="fileProcessingFilter" type="s:string"/>

              <!--[Limit range of files by time]-->
              <s:element name="timeMarkStart" type="s:long"/>
              <s:element name="timeMarkFinish" type="s:long"/>

              <!--[Limit time range with string like: "1w1d1h1m1s" - this will be subtracted from current time]-->
              <s:element name="dateBack" type="s:string"/>

            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetFSPPFilesListResponse">
            <s:sequence>
              <s:element name="errorCode" type="s:unsignedInt"/>
              <s:element name="errorDescription" type="s:string" />
              <!--[This value should be used for subsequent calls in "cookieIn" input field. Returned value of ""(empty string) means no more files found in log.]-->
              <s:element name="cookieOut" type="s:string"/>
              <s:element minOccurs="0" name="filesList" type="tns:WSFileList"/>
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetFSPPStatusRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[Integral Volume Set name or Mount Point Path]-->
              <s:element name="IVSNameOrPath" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetFSPPStatusResponse">
            <s:sequence>
              <s:element name="errorCode" type="s:unsignedInt"/>
              <s:element name="errorDescription" type="s:string" />
              <!--[List of enabled events in form "aeic" 
              where "a" - archive enabled, "e" - export enabled, "i" - import enabled, "c" - close enabled ]-->
              <s:element name="events" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMTuningCacheRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="lowPrimaryCapacity" type="s:long" />
              <s:element name="highPrimaryCapacity" type="s:long" />
              <s:element name="readReservedCapacity" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMTuningCacheResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetPinToCachePolicyRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSPinToCachePolicyEntry">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="1" name="offset" type="s:string" />
              <s:element minOccurs="0" maxOccurs="1" name="size" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSPinToCachePolicyList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="pinEntry" type="tns:WSPinToCachePolicyEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMGetPinToCachePolicyResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="isDir" type="s:int" />
              <s:element name="extensions" type="s:string" />
              <s:element name="pinList" type="tns:WSPinToCachePolicyList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetPinToCachePolicyRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
              <s:element name="extensions" type="s:string" />
              <s:element name="recursively" type="s:int" />
              <s:element name="pinList" type="tns:WSPinToCachePolicyList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetPinToCachePolicyResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetFileAttributesRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSFileOwnerEntry">
            <s:sequence>
              <s:element name="userName" type="s:string" />
              <s:element name="userId" type="s:int" />
              <s:element name="primaryGroupId" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSFileOwnerList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="ownerEntry" type="tns:WSFileOwnerEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSFileGroupEntry">
            <s:sequence>
              <s:element name="groupName" type="s:string" />
              <s:element name="groupId" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSFileGroupList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="ownerEntry" type="tns:WSFileGroupEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMGetFileAttributesResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="fileInfo" type="tns:WSFileStatInfo"/>
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetFileAttributesRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
              <s:element name="fileDirMode" type="s:int" />
              <s:element name="ownerId" type="s:int" />
              <s:element name="groupId" type="s:int" />
              <s:element name="fileMask" type="s:string" />
              <s:element name="setattrMask" type="s:int" />
              <s:element name="setattrMode" type="s:int" />
              <s:element name="recursive" type="s:int" />
              <s:element name="dirQuota" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetFileAttributesResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSOfflineLocationRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="seqNum" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSOfflineLocationResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="offlineLocation" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSAutomountPropertiesRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="volPath" type="s:string" />
              <s:element name="setType" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSAutomountPropertiesResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="spaceUsed" type="s:long" />
              <s:element name="spaceFree" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetCoveredInfoRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetCoveredInfoResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="coveredInfo" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetSpecialStreamRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
              <s:element name="streamType" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetSpecialStreamResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="streamX64" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVerifyDigestRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="filePath" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVerifyDigestResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="report" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMediaUsageRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMediaUsageResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="report" type="s:string" />
              <s:element name="perMille" type="s:int" />
              <s:element name="contextId" type="s:long" />
              <s:element name="mediaUsageList" type="tns:WSMediaUsageList" minOccurs="0" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetKeepModeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[array of filenames]-->
              <s:element name="fileList" type="tns:WSFileList" />
              <s:element name="keepMode" type="s:string" />
              <!--[non-zero means to set value, otherwise reset]-->
              <s:element name="flagChange" type="s:int" />
              <!--[non-zero means do recursive operation on folder path]-->
              <s:element name="recursive" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetKeepModeResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMAddTreeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="subtreeMode" type="s:string" />
              <s:element name="pathToAdd" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMAddTreeResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLChangeSubTreeEntry">
            <s:sequence>
              <s:element name="message" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLChangeSubTreeList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="reportEntry" type="tns:WSVLChangeSubTreeEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMChangeSubTreeRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="subtreeMode" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="cancel" type="s:int" />
              <!--[array of filenames]-->
              <s:element name="fileList" type="tns:WSFileList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMChangeSubTreeResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="reportMessage" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMPurgeFileRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMPurgeFileResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCheckVLChangesRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />              
              <s:element name="mtime" type="s:long" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCheckVLChangesResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />              
              <s:element name="mtime" type="s:long" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDHCPSetProtocolRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />
              <s:element name="tenant" type="s:string" />
              <s:element name="hcpnamespace" type="s:string" />
              <s:element name="protocol" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDHCPSetProtocolResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDCSVaultRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />
              <s:element name="vaultName" type="s:string" />
              <s:element name="ipList" type="s:string" />
              <s:element name="proxy" type="s:string" />
              <s:element name="userName" type="s:string" />
              <s:element name="password" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDCSVaultResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDAddBucketRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />
              <s:element name="qssdType" type="s:string" />
              <s:element name="bucketName" type="s:string" />
              <s:element name="anchor1" type="s:string" minOccurs="0" />
              <s:element name="anchor2" type="s:string" minOccurs="0" />
              <s:element name="anchor3" type="s:string" minOccurs="0" />
              <s:element name="anchor4" type="s:string" minOccurs="0" />
              <s:element name="hcpnamespace" type="s:string" />
              <s:element name="directory" type="s:string" />
              <s:element name="protocol" type="s:string" />
              <s:element name="userName" type="s:string" />
              <s:element name="password" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDAddBucketResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDTenantRemoveRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />
              <s:element name="tenantName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDTenantRemoveResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDDefineRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />
              <s:element name="qssdType" type="s:string" />
              <s:element name="qssdPath" type="s:string" />
              <s:element name="qssdProxy" type="s:string" />
              <s:element name="qssdStyle" type="s:string" />
              <s:element name="qssdSignature" type="s:string" />
              <s:element name="qssdRegion" type="s:string" />
              <s:element name="qssdUser" type="s:string" />
              <s:element name="qssdPass" type="s:string" />
              <s:element name="qssdPassLength" type="s:int" />
              
              <!--[HCP specific flags]-->
              <s:element name="hcpProtocol" type="s:string" />
              <s:element name="hcpDomain" type="s:string" />
              <s:element name="hcpRotation" type="s:byte" />
              <s:element name="hcpReadTimeout" type="s:int" />
              <s:element name="hcpWriteTimeout" type="s:int" />
              
              <!--[OSTK, WOS specific flags]-->
              <s:element name="ostkTenant" type="s:string" />
              <s:element name="wosPort" type="s:string" />
              <s:element name="wosNode" type="s:string" />
              <s:element name="wosPolicy" type="s:string" />
              
              <!--[GFS specific flags]-->
              <s:element name="gfsStreams" type="s:int" />
              <s:element name="gfsChown" type="s:int" />
              <s:element name="gfsHardlinks" type="s:int" />
              <s:element name="gfsODA" type="s:int" />
              <s:element name="gfsSnapLock" type="s:int" />
              <s:element name="gfsSymlinks" type="s:int" />
              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDBucketEntry">
            <s:sequence>
              <s:element name="bucketNumber" type="s:int" />
              <s:element name="bucketName" type="s:string" />
              <s:element name="bucketId" type="s:string" minOccurs="0" />
              <s:element name="bucketUrl" type="s:string" minOccurs="0" />
              <s:element name="userName" type="s:string" minOccurs="0" />
              <s:element name="password" type="s:string" minOccurs="0" />
              <s:element name="setId" type="s:string" />
              <s:element name="usedSpace" type="s:string" />
              <s:element name="flags" type="s:int" />
              <s:element name="sequenceNumber" type="s:int" />
              <s:element name="objectsCount" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDBucketList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="qssdBucketEntry" type="tns:WSQSSDBucketEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQSSDParamEntry">
            <s:sequence>
              <s:element name="paramName" type="s:string" />
              <s:element name="paramValue" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDParamsList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="qssdParamEntry" type="tns:WSQSSDParamEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQSSDDefineResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDDeleteRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDDeleteResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQSSDRenameRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdNameOld" type="s:string" />
              <s:element name="qssdNameNew" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDRenameResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDGetBucketListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />              
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQSSDGetBucketListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="qssdType" type="s:string" />
              <s:element name="qssdIP" type="s:string" />
              <s:element name="qssdParamsList" type="tns:WSQSSDParamsList" />
              <s:element name="qssdBucketList" type="tns:WSQSSDBucketList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetQSSDListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDEntry">
            <s:sequence>
              <s:element name="qssdName" type="s:string" />
              <s:element name="qssdType" type="s:string" />
              <s:element name="qssdPath" type="s:string" />
              <s:element name="partitionNumber" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQSSDList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="qssdEntry" type="tns:WSQSSDEntry" />
            </s:sequence>
          </s:complexType>
        
          <s:complexType name="WSGetQSSDListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!--s:element name="listQSSD" type="s:string" /-->
              <s:element name="qssdList" type="tns:WSQSSDList" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetQSSDLicensedListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetQSSDLicensedListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDRefreshRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="qssdName" type="s:string" />
              <s:element name="partName" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="cancel" type="s:byte" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQSSDRefreshResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetLicenseInfoRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLicenseEntry">
            <s:sequence>
              <s:element name="entryName" type="s:string" />
              <s:element name="entryValue" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLicenseEntriesList">
            <s:sequence>
              <s:element minOccurs="1" maxOccurs="64" name="licenseEntry" type="tns:WSLicenseEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetLicenseInfoResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!-- Customer Information -->
              <s:element name="company" type="s:string" />
              <s:element name="department" type="s:string" />
              <s:element name="contactPerson" type="s:string" />
              <s:element name="contactEMail" type="s:string" />
              <s:element name="contactPhone" type="s:string" />
              <s:element name="version" type="s:string" />
              <s:element name="licenseType" type="s:string" />
              <s:element name="platform" type="s:string" />
              <s:element name="serialNumber" type="s:string" />
              <s:element name="hostId" type="s:string" />
              <s:element name="expirationDate" type="s:string" />
              <s:element name="entriesList" type="tns:WSLicenseEntriesList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSActivateLicenseRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="licenseEncoded" type="s:string" />
              <s:element name="licenseEncodedLength" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSActivateLicenseResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetFolderListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[Initial path starting from which list of folders will be browsed]
                  [Empty or NULL values implies root initial path]-->
              <s:element name="initialPath" type="s:string" />
              <!--[non-zero value to include file names]-->
              <s:element name="includeFiles" type="s:byte" />
              <!--[file extention filter]-->
              <s:element name="extFilter" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSDriveEntry">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="1" name="drivePath" type="s:string" />
              <s:element name="spaceAvailToCaller" type="s:long" />
              <s:element name="totalDriveSpace" type="s:long" />
              <s:element name="freeDriveSpace" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSDriveList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="driveEntry" type="tns:WSDriveEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetFolderListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!--[List of folders of the same level separated with ';' symbol]-->
              <s:element minOccurs="0" maxOccurs="1" name="plainFolderList" type="s:string" />
              <!--[List of drives]-->
              <s:element minOccurs="0" maxOccurs="1" name="driveList" type="tns:WSDriveList" />
              <!--[File names filtered]-->
              <s:element minOccurs="0" maxOccurs="1" name="plainFilesList" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCreateFolderRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[Full path and folder name requested for creation]-->
              <s:element name="folderPath" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCreateFolderResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCheckDirectoryRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[Full path to directory name requested for existence and emptyness check]-->
              <s:element name="directoryPath" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCheckDirectoryResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="exists" type="s:int" />
              <s:element name="empty" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetPerfFilesListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <!--[non-zero value means to use SCSI performance files, otherwise Cache performance will be used]-->
              <s:element name="useSCSIPerf" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSPerfFileInfoEntry">
            <s:sequence>
              <s:element name="fileName" type="s:string" />
              <s:element name="fileSize" type="s:long" />
              <s:element name="fileTime" type="s:long" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSPerfFileInfoList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="fileEntry" type="tns:WSPerfFileInfoEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetPerfFilesListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="perfFilesList" type="tns:WSPerfFileInfoList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetPerfFileContentRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="perfFileName" type="s:string" />
              <!--[non-zero value means to use SCSI performance files, otherwise Cache performance will be used]-->
              <s:element name="useSCSIPerf" type="s:int" />
              <!--[record offset starting from which records should be returned]-->
              <s:element name="recordOffset" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSPerfFileEntry">
            <s:sequence>
              <!--[non-parsed 'raw' content]-->
              <s:element name="perfRaw" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSPerfFileList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="perfEntry" type="tns:WSPerfFileEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetPerfFileContentResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="tableHeader" type="s:string" />
              <s:element name="perfList" type="tns:WSPerfFileList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetPerfMeasurementOptionsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="driveIndex" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetPerfMeasurementOptionsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="sampleInterval" type="s:int" />
              <s:element name="averageInterval" type="s:int" />
              <s:element name="defaultAveragePoints" type="s:int" />
              <s:element name="defaultSampleInterval" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetPerfMeasurementOptionsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="driveIndex" type="s:int" />
              <s:element name="sampleInterval" type="s:int" />
              <s:element name="averageInterval" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSetPerfMeasurementOptionsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetMeasurementOptionsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetMeasurementOptionsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="sampleInterval" type="s:int" />
              <s:element name="averageInterval" type="s:int" />
              <s:element name="defaultAveragePoints" type="s:int" />
              <s:element name="defaultSampleInterval" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetMeasurementOptionsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="sampleInterval" type="s:int" />
              <s:element name="averageInterval" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMSetMeasurementOptionsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMStartStopArchivingRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <!--[non-zero value: start archiving, otherwise - stop]-->
              <s:element name="startArchiving" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMStartStopArchivingResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMResumeMirrorRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMResumeMirrorResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMResumeArchivingRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMResumeArchivingResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMDelayedArchivingRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="recordId" type="s:int" />
              <s:element name="ageTime" type="s:long" />
              <s:element name="schedule" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMDelayedArchivingResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetQueueListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetQueueListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="archivingCmd" type="s:int" />
              <s:element name="enabled" type="s:int" />
              <s:element name="schedule" type="s:string" />
              <s:element name="recordId" type="s:int" />
              <s:element name="ageTime" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetTransferStatusRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="bytesPages" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSTransferEntry">
            <s:sequence>
              <s:element name="operation" type="s:string" />
              <s:element name="migrationStatus" type="s:string" />
              <s:element name="sizing" type="s:string" />
              <s:element name="pages" type="s:string" />
              <s:element name="eta" type="s:string" />
              <s:element name="fileName" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSTransferList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="transferEntry" type="tns:WSTransferEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMGetTransferStatusResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="transferList" type="tns:WSTransferList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEventsGetListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEventsEntry">
            <s:sequence>
              <s:element name="action" type="s:string" />
              <s:element name="arrival" type="s:string" />
              <s:element name="status" type="s:string" />
              <s:element name="device" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="offlineLocation" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEventsList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="eventEntry" type="tns:WSEventsEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEventsGetListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="eventList" type="tns:WSEventsList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSRemoveEventRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="removeCancelled" type="s:int" />
              <s:element name="removeSatisfied" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSRemoveEventResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEventIndexEntry">
            <s:sequence>
              <s:element name="eventIndex" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEventIndicesList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="indexEntry" type="tns:WSEventIndexEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSCancelEventRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="indicesList" type="tns:WSEventIndicesList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSCancelEventResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetMultiIncrementalDBRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMiCEntry">
            <s:sequence>
              <!--[non-parsed 'raw' content]-->
              <s:element name="micRaw" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMiCList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="micEntry" type="tns:WSMiCEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSGetMultiIncrementalDBResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="isMirroring" type="s:byte" />              
              <s:element name="isOnline" type="s:byte" />
              <s:element name="isSync" type="s:byte" />              
              <s:element name="micDB" type="tns:WSMiCList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMicDBOperationRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />
              <s:element name="operation" type="s:string" />
              <s:element name="volumeNumber" type="s:int" />
              <s:element name="replicaNumber" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMicDBOperationResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSSlotEntry">
            <s:sequence>
              <!--[slot index starts from 1]-->
              <s:element name="idx" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSSlotList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="slotIndex" type="tns:WSSlotEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLExportMediaExRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="capNumber" type="s:int" />
              <s:element name="contextId" type="s:long" />
              <s:element name="askHelpCode" type="s:int" />
              <!--[can be offline location for media being exported]-->
              <s:element name="askHelpMessage" type="s:string" />
              <!--[slots list. slot index starts from 1]-->
              <s:element name="slotList" type="tns:WSSlotList" />            
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLExportMediaExResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="askHelpCode" type="s:int" />
              <!--[can be offline location for media being exported]-->
              <s:element name="askHelpMessage" type="s:string" />
              <s:element name="offlineTitle" type="s:string" />
              <s:element name="progressMessage" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLExportMediaRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="capNumber" type="s:int" />
              <!--[slots list. slot index starts from 1]-->
              <s:element name="slotList" type="tns:WSSlotList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLExportMediaResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="processOperationID" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSVLMediaAskHelpRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="processOperationID" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMediaAskHelpResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="askHelpCode" type="s:int" />
              <!--[can be offline location for media being exported]-->
              <s:element name="askHelpMessage" type="s:string" />
              <s:element name="offlineTitle" type="s:string" />
              <s:element name="progressMessage" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMediaConfirmRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="contextId" type="s:long" />
              <s:element name="processOperationID" type="s:int" />
              <s:element name="askHelpCode" type="s:int" />
              <!--[can be offline location for media being exported]-->
              <s:element name="askHelpMessage" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLMediaConfirmResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="contextId" type="s:long" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLImportMediaRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />
              <s:element name="deviceId" type="s:string" />
              <!--[parameters for simulated library]-->
              <s:element name="simulationParams" type="s:string" />
              <!--[single slot index. starts from 1]-->
              <s:element name="slotIndex" type="s:int" />
              <s:element name="quick" type="s:byte" />
              <s:element name="capNumber" type="s:int" />
              <!--[should be zero for the same first call and non-zero for others]-->
              <s:element name="contextId" type="s:long" />
              <s:element name="progressCode" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVLImportMediaResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!--[non-zero for successful call (task created), zero - task done or wasn't created (in the last case error code and error description should be analyzed)]-->
              <s:element name="contextId" type="s:long" />
              <s:element name="progressReport" type="s:string" />
              <s:element name="progressCode" type="s:int" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVolumeEntry">
            <s:sequence>
              <s:element name="volume" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSVolumeList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSVolumeEntry" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSJBGetVolumeListRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="deviceName" type="s:string" />        
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSJBGetVolumeListResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="volumeList" type="tns:WSVolumeList" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSElementsEntry">
            <s:sequence>
              <s:element name="element" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSElementsList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSElementsEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSLibraryResetStatisticsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="libraryName" type="s:string" />    
              <s:element name="fields" type="s:string" />            
              <s:element name="elementIndices" type="tns:WSElementsList" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSLibraryResetStatisticsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />              
            </s:sequence>
          </s:complexType>  
    
        
          <s:complexType name="WSMMRebuildQuotasRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />        
              <s:element name="rebuild" type="s:byte" />        
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSMMGetQuotaAccountsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />        
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSQuotaEntry">
            <s:sequence>
              <s:element name="enabled" type="s:int" />
              <!--[1 - user, 2 - group]-->
              <s:element name="groupId" type="s:int" />
              <s:element name="account" type="s:string" />
              <s:element name="usedGB" type="s:int" />
              <s:element name="hardLimitGB" type="s:int" />
              <s:element name="softLimitGB" type="s:int" />
              <s:element name="abuseDays" type="s:string" />
              <s:element name="entryId" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSQuotaList">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:WSQuotaEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMRebuildQuotasResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMGetQuotaAccountsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <s:element name="userQuota" type="s:int" />
              <s:element name="groupQuota" type="s:int" />
              <s:element name="quotaUList" type="tns:WSQuotaList" />
              <s:element name="quotaGList" type="tns:WSQuotaList" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMSetQuotaAccountsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="setName" type="s:string" />              
              <s:element name="userQuota" type="s:int" />              
              <s:element name="groupQuota" type="s:int" />              
              <s:element name="quotaList" type="tns:WSQuotaList" />              
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSMMSetQuotaAccountsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSEmailNotificationRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="progname" type="s:string" />
                <s:element name="path" type="s:string" />
                <s:element name="description" type="s:string" />
                <s:element name="notification" type="s:string" />
                <s:element name="mail" type="s:string" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSEmailNotificationResponse">
              <s:sequence>
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>
              </s:sequence>
            </s:complexType>

          <s:complexType name="WSEmailTestRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="contextId" type="s:long"/>
                <s:element name="SMTPHost" type="s:string" />
                <s:element name="login" type="s:string" />
                <s:element name="password" type="s:string" />
                <s:element name="message" type="s:string" />
                <s:element name="from" type="s:string" />
                <s:element name="recipients" type="s:string" />
                <s:element name="cc" type="s:string" />
                <s:element name="cancel" type="s:byte" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSEmailTestResponse">
              <s:sequence>
                <s:element name="contextId" type="s:long"/>
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSGetEMailListRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />        
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSEMailEntry">
              <s:sequence>
                <!-- e-mail content in short form -->
                <s:element name="email" type="s:string" />        
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSEMailList">
              <s:sequence>
                <s:element name="entries" minOccurs="0" maxOccurs="unbounded" type="tns:WSEMailEntry" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetEMailListResponse">
              <s:sequence>
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>
                <s:element name="list" type="tns:WSEMailList"/>
              </s:sequence>
            </s:complexType>
                
            <s:complexType name="WSCleanEMailQueueRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />        
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSCleanEMailQueueResponse">
              <s:sequence>
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>            
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSUserRoleEntry">
              <s:sequence>
                <s:element name="name" type="s:string" />
                <s:element name="roles" type="s:string" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSUserRoleList">
              <s:sequence>
                <s:element name="entries" minOccurs="0" maxOccurs="unbounded" type="tns:WSUserRoleEntry" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSUserRoleRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="command" type="s:string" />
                <s:element name="entry" type="tns:WSUserRoleEntry"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSUserRoleResponse">
              <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>
                <s:element name="list" type="tns:WSUserRoleList"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSDASMSetMigratorStateRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="setName" type="s:string" />    
                <s:element name="managedSetName" type="s:string" />    
                <s:element name="state" type="s:string" />                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSDASMSetMigratorStateResponse">
              <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetBackupConfigRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="setName" type="s:string" />                
                <s:element name="mediaType" type="s:int" />                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetBackupConfigResponse">
              <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>
                <s:element name="target" type="s:int"/>
                <s:element name="mirrorPath" type="s:string" />
                <s:element name="primaryPath" type="s:string" />
                <s:element name="dataSize" type="s:string" />
                <s:element name="daysAfter" type="s:int"/>
                <s:element name="copies" type="s:int"/>
                <s:element name="firstDisk" type="s:int"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSSetBackupConfigRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="setName" type="s:string" />      
                <s:element name="defaults" type="s:int"/>
                <s:element name="target" type="s:int"/>
                <s:element name="mirrorPath" type="s:string" />
                <s:element name="primaryPath" type="s:string" />
                <s:element name="dataSize" type="s:string" />
                <s:element name="daysAfter" type="s:int"/>
                <s:element name="copies" type="s:int"/>
                <s:element name="firstDisk" type="s:int"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSSetBackupConfigResponse">
              <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetBackupListRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="setName" type="s:string" />   
                <s:element name="path" type="s:string"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSBackupEntry">
              <s:sequence>
                <s:element name="fname" type="s:string" />                
                <s:element name="item" type="s:string" />                
                <s:element name="name" type="s:string" />                
                <s:element name="version" type="s:string" />                
                <s:element name="size" type="s:string" />                
                <s:element name="date" type="s:string" />                
                <s:element name="comment" type="s:string" />                
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSBackupList">
              <s:sequence>
                <s:element name="entries" minOccurs="0" maxOccurs="unbounded" type="tns:WSBackupEntry" />
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGetBackupListResponse">
              <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>        
                <s:element name="path" type="s:string"/>
                <s:element name="list" type="tns:WSBackupList"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSRestoreDBBackupRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="contextId" type="s:long" />
                <s:element name="setName" type="s:string" />               
                <s:element name="backupFName" type="s:string" />               
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSRestoreDBBackupResponse">
              <s:sequence>
                <s:element name="contextId" type="s:long" />
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>                    
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSRestoreDBMediaRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="contextId" type="s:long" />
                <s:element name="setName" type="s:string" />               
                <s:element name="cacheRoot" type="s:string" />
                <s:element name="snapTime" type="s:string" />
                <s:element name="flags" type="s:int" />               
                <s:element name="startVol" type="s:int" />               
                <s:element name="lastVol" type="s:int" />               
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSRestoreDBMediaResponse">
              <s:sequence>
                <s:element name="contextId" type="s:long" />
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>                    
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSSDF2TDORequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />
                <s:element name="setName" type="s:string" />               
                <s:element name="background" type="s:int" />               
                <s:element name="restore" type="s:int" />                               
              </s:sequence>
            </s:complexType>
            
            <s:complexType name="WSSDF2TDOResponse">
              <s:sequence>
                <s:element name="error" type="s:unsignedInt" />
                <s:element name="description" type="s:string"/>                    
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSUserAccountEntry">
              <s:sequence>
                <s:element name="uid" type="s:int"/>
                <s:element name="gid" type="s:int"/>
                <s:element name="userName" type="s:string" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSUserAccountList">
              <s:sequence>
                <s:element name="entries" minOccurs="0" maxOccurs="unbounded" type="tns:WSUserAccountEntry" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSGetUserListRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />                
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSGetUserListResponse">
              <s:sequence>
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>
                <s:element name="listUsers" type="tns:WSUserAccountList"/>
              </s:sequence>
            </s:complexType>
    
            <s:complexType name="WSGroupEntry">
              <s:sequence>
                <s:element name="name" type="s:string" />
                <s:element name="gid" type="s:int" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSGroupList">
              <s:sequence>
                <s:element name="entries" minOccurs="0" maxOccurs="unbounded" type="tns:WSGroupEntry" />
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSGetGroupListRequest">
              <s:sequence>
                <s:element name="userToken" type="s:string" />                
              </s:sequence>
            </s:complexType>

            <s:complexType name="WSGetGroupListResponse">
              <s:sequence>
                <s:element name="error" type="s:int"/>
                <s:element name="description" type="s:string"/>
                <s:element name="listGroups" type="tns:WSGroupList"/>
              </s:sequence>
            </s:complexType>
    
          <s:complexType name="WSGetWSDLRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSGetWSDLResponse">
            <s:sequence>
              <!--[WSDL content]-->
              <s:element name="wsdl" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSXAGetSpecialStreamRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />              
              <s:element name="streamName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSXAGetSpecialStreamResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!--[Stream content base64 encoded]-->
              <s:element name="streamValue" type="s:string" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSXAPutSpecialStreamRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
              <s:element name="streamName" type="s:string" />
              <!--[Stream content base64 encoded]-->
              <s:element name="streamValue" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSXAPutSpecialStreamResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />              
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSXADeleteSpecialStreamRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />
              <s:element name="streamName" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSXADeleteSpecialStreamResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />              
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSXAGetStatSpecialStreamRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />              
              <s:element name="streamName" type="s:string" />
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSXAGetStatSpecialStreamResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!--[non-zero value means Stream exists]-->
              <s:element name="streamExists" type="s:int" />
              <!--[Stream's data length in bytes]-->
              <s:element name="streamLength" type="s:int" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSXAEnumSpecialStreamsRequest">
            <s:sequence>
              <s:element name="userToken" type="s:string" />
              <s:element name="fileName" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStreamEntry">
            <s:sequence>
              <s:element name="name" type="s:string" />              
            </s:sequence>
          </s:complexType>

          <s:complexType name="WSStreamList">
            <s:sequence>
              <s:element name="entries" minOccurs="0" maxOccurs="unbounded" type="tns:WSStreamEntry" />
            </s:sequence>
          </s:complexType>
    
          <s:complexType name="WSXAEnumSpecialStreamsResponse">
            <s:sequence>
              <s:element name="error" type="s:unsignedInt" />
              <s:element name="description" type="s:string" />
              <!--[List of Stream names]-->
              <s:element name="streamList" type="tns:WSStreamList" />            
            </s:sequence>
          </s:complexType>

  </schema>
    </wsdl:types>
    <wsdl:message name="WSGetServerInfoSoapIn">
        <wsdl:part name="parameters" type="tns:WSGetServerInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetServerInfoSoapOut">
        <wsdl:part name="parameters" type="tns:WSGetServerInfoResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetServerInfoExSoapIn">
        <wsdl:part name="parameters" type="tns:WSGetServerInfoExRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetServerInfoExSoapOut">
        <wsdl:part name="parameters" type="tns:WSGetServerInfoExResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetServerFeaturesSoapIn">
        <wsdl:part name="parameters" type="tns:WSGetServerFeaturesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetServerFeaturesSoapOut">
        <wsdl:part name="parameters" type="tns:WSGetServerFeaturesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetVLInfoSoapIn">
        <wsdl:part name="parameters" type="tns:WSGetVLInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetVLInfoSoapOut">
        <wsdl:part name="parameters" type="tns:WSGetVLInfoResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVInfoExtendedSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetIVInfoExtendedRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVInfoExtendedSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetIVInfoExtendedResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVInfoSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetIVInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVInfoSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetIVInfoResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFSStatSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetFSStatRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFSStatSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetFSStatResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFileInfoSoapIn">
        <wsdl:part name="parameters" type="tns:WSGetFileInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFileInfoSoapOut">
        <wsdl:part name="parameters" type="tns:WSGetFileInfoResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetGroupFileInfoSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetGroupFileInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetGroupFileInfoSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetGroupFileInfoResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetGroupFileRetentionInfoSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetGroupFileRetentionInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetGroupFileRetentionInfoSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetGroupFileRetentionInfoResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRetrieveFileSoapIn">
        <wsdl:part name="parameters" type="tns:WSRetrieveFileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRetrieveFileSoapOut">
        <wsdl:part name="parameters" type="tns:WSRetrieveFileResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRetrieveFileStatusSoapIn">
        <wsdl:part name="parameters" type="tns:WSRetrieveFileStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRetrieveFileStatusSoapOut">
        <wsdl:part name="parameters" type="tns:WSRetrieveFileStatusResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchFileRetrieveSoapIn">
        <wsdl:part name="parameters" type="tns:WSBatchFileRetrieveRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchFileRetrieveSoapOut">
        <wsdl:part name="parameters" type="tns:WSBatchFileRetrieveResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchFileStoreSoapIn">
        <wsdl:part name="parameters" type="tns:WSBatchFileStoreRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchFileStoreSoapOut">
        <wsdl:part name="parameters" type="tns:WSBatchFileStoreResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchJobStatusSoapIn">
        <wsdl:part name="parameters" type="tns:WSBatchJobStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchJobStatusSoapOut">
        <wsdl:part name="parameters" type="tns:WSBatchJobStatusResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchJobObjectStatusSoapIn">
        <wsdl:part name="parameters" type="tns:WSBatchJobObjectStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSBatchJobObjectStatusSoapOut">
        <wsdl:part name="parameters" type="tns:WSBatchJobObjectStatusResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSUserLoginSoapIn">
        <wsdl:part name="parameters" type="tns:WSUserLoginRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSUserLoginSoapOut">
        <wsdl:part name="parameters" type="tns:WSUserLoginResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSUserLogoutSoapIn">
        <wsdl:part name="parameters" type="tns:WSUserLogoutRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSUserLogoutSoapOut">
        <wsdl:part name="parameters" type="tns:WSUserLogoutResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSReadDirSoapIn">
        <wsdl:part name="parameters" type="tns:WSReadDirRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSReadDirSoapOut">
        <wsdl:part name="parameters" type="tns:WSReadDirResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSReadDirFilesSoapIn">
      <wsdl:part name="parameters" type="tns:WSReadDirFilesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSReadDirFilesSoapOut">
      <wsdl:part name="parameters" type="tns:WSReadDirFilesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMArchivingSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMArchivingRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMArchivingSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMArchivingResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVListSoapIn">
        <wsdl:part name="parameters" type="tns:WSGetIVListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVListSoapOut">
        <wsdl:part name="parameters" type="tns:WSGetIVListResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVListExSoapIn">
        <wsdl:part name="parameters" type="tns:WSGetIVListExRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetIVListExSoapOut">
        <wsdl:part name="parameters" type="tns:WSGetIVListExResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSListFilesByTimeSoapIn">
        <wsdl:part name="parameters" type="tns:WSListFilesByTimeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSListFilesByTimeSoapOut">
        <wsdl:part name="parameters" type="tns:WSListFilesByTimeResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRetrieveFilesSortedListSoapIn">
        <wsdl:part name="parameters" type="tns:WSRetrieveFilesSortedListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRetrieveFilesSortedListSoapOut">
        <wsdl:part name="parameters" type="tns:WSRetrieveFilesSortedListResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFilesSortedListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetFilesSortedListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFilesSortedListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetFilesSortedListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetElementStatusSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetElementStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetElementStatusSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetElementStatusResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSetSlotStatusSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetSlotStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetSlotStatusSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetSlotStatusResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSetDrivesStatusSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetDrivesStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetDrivesStatusSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetDrivesStatusResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSetPrintersStatusSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetPrintersStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetPrintersStatusSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetPrintersStatusResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationExchangeSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationExchangeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationExchangeSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationExchangeResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationExportSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationExportRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationExportSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationExportResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationImportSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationImportRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationImportSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationImportResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationFlipSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationFlipRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationFlipSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationFlipResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationLoadSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationLoadRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationLoadSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationLoadResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationUnloadSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationUnloadRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationUnloadSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationUnloadResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationResetSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationResetRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationResetSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationResetResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationMagazineSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationMagazineRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationMagazineSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationMagazineResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationSchedulerSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationSchedulerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationSchedulerSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationSchedulerResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationCleaningSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationCleaningRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationCleaningSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationCleaningResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryGetSlotStateSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryGetSlotStateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryGetSlotStateSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryGetSlotStateResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryGetDriveStateSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryGetDriveStateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryGetDriveStateSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryGetDriveStateResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibrarySetDriveStateSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibrarySetDriveStateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibrarySetDriveStateSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibrarySetDriveStateResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSLibraryOperationRefreshSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationRefreshRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryOperationRefreshSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryOperationRefreshResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetRemoteDevicesListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetRemoteDevicesListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetRemoteDevicesListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetRemoteDevicesListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetGasConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetGasConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetGasConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetGasConfigResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGasDomainSoapIn">
      <wsdl:part name="parameters" type="tns:WSGasDomainRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGasDomainSoapOut">
      <wsdl:part name="parameters" type="tns:WSGasDomainResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGasNodeSoapIn">
      <wsdl:part name="parameters" type="tns:WSGasNodeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGasNodeSoapOut">
      <wsdl:part name="parameters" type="tns:WSGasNodeResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGasPairSoapIn">
      <wsdl:part name="parameters" type="tns:WSGasPairRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGasPairSoapOut">
      <wsdl:part name="parameters" type="tns:WSGasPairResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGasCrossSoapIn">
      <wsdl:part name="parameters" type="tns:WSGasCrossRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGasCrossSoapOut">
      <wsdl:part name="parameters" type="tns:WSGasCrossResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetDevicesListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetDevicesListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetDevicesListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetDevicesListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSetPathsClaimingSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetPathsClaimingRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetPathsClaimingSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetPathsClaimingResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSConfigureLibrarySoapIn">
      <wsdl:part name="parameters" type="tns:WSConfigureLibraryRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSConfigureLibrarySoapOut">
      <wsdl:part name="parameters" type="tns:WSConfigureLibraryResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSRescanHardwareSoapIn">
      <wsdl:part name="parameters" type="tns:WSRescanHardwareRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRescanHardwareSoapOut">
      <wsdl:part name="parameters" type="tns:WSRescanHardwareResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSCSIInquirySoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSIInquiryRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSIInquirySoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSIInquiryResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSCSISerialNumberSoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSISerialNumberRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSISerialNumberSoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSISerialNumberResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSSCSICapabilitySoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSICapabilityRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSICapabilitySoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSICapabilityResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSCSIInventorySoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSIInventoryRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSIInventorySoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSIInventoryResponse"></wsdl:part>
    </wsdl:message>
    
    <wsdl:message name="WSSCSICapacitySoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSICapacityRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSICapacitySoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSICapacityResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSCSILocateSoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSILocateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSILocateSoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSILocateResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSSCSIReadSoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSIReadRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSIReadSoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSIReadResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLCreateEditSetSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLCreateEditSetRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLCreateEditSetSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLCreateEditSetResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLDelSetSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLDelSetRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLDelSetSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLDelSetResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLAddToSetSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLAddToSetRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLAddToSetSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLAddToSetResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLDelFromSetSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLDelFromSetRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLDelFromSetSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLDelFromSetResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLLSDevSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLLSDevRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLLSDevSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLLSDevResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLLSSetSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLLSSetRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLLSSetSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLLSSetResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLLSVolumeSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLLSVolumeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLLSVolumeSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLLSVolumeResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLLTFSSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLLTFSRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLLTFSSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLLTFSResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLMediaUsageSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLMediaUsageRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLMediaUsageSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLMediaUsageResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMMRamDiskSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMRamDiskRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMRamDiskSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMRamDiskResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLConfSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLConfRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLConfSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLConfResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLCacheSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLCacheRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLCacheSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLCacheResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLMountIVSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLMountIVRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLMountIVSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLMountIVResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLUMountIVSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLUMountIVRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLUMountIVSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLUMountIVResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLEraseSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLEraseRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLEraseSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLEraseResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLLeaseSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLLeaseRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLLeaseSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLLeaseResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLCloseSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLCloseRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLCloseSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLCloseResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLExportBulkSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLExportBulkRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLExportBulkSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLExportBulkResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLMagazineSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLMagazineRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLMagazineSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLMagazineResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLRecoverSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLRecoverRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLRecoverSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLRecoverResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLInSetSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLInSetRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLInSetSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLInSetResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLMIcDBSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLMIcDBRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLMIcDBSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLMIcDBResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLPingSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLPingRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLPingSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLPingResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLOffSyncSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLOffSyncRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLOffSyncSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLOffSyncResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLExchangeSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLExchangeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLExchangeSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLExchangeResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLRefreshSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLRefreshRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLRefreshSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLRefreshResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLReplaceSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLReplaceRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLReplaceSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLReplaceResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLRestoreFSDBSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLRestoreFSDBRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLRestoreFSDBSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLRestoreFSDBResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLReuseSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLReuseRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLReuseSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLReuseResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLScratchSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLScratchRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLScratchSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLScratchResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLStartMirroringSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLStartMirroringRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLStartMirroringSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLStartMirroringResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLInitMirroringSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLInitMirroringRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLInitMirroringSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLInitMirroringResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLQListSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLQListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLQListSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLQListResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLQMoveSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLQMoveRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLQMoveSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLQMoveResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLQRemoveSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLQRemoveRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLQRemoveSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLQRemoveResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLRecordSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLRecordRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLRecordSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLRecordResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLPublishSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLPublishRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLPublishSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLPublishResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLScheduleSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLScheduleRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLScheduleSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLScheduleResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLReplicaSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLReplicaRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLReplicaSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLReplicaResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLLSMDbSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLLSMDbRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLLSMDbSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLLSMDbResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLSDF2TDOSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLSDF2TDORequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLSDF2TDOSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLSDF2TDOResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSEnumMediaByLibraryNameSoapIn">
      <wsdl:part name="parameters" type="tns:WSEnumMediaByLibraryNameRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSEnumMediaByLibraryNameSoapOut">
      <wsdl:part name="parameters" type="tns:WSEnumMediaByLibraryNameResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLVerifySoapIn">
      <wsdl:part name="parameters" type="tns:WSVLVerifyRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLVerifySoapOut">
      <wsdl:part name="parameters" type="tns:WSVLVerifyResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLFixDBSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLFixDBRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLFixDBSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLFixDBResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLCopyCompareSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLCopyCompareRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLCopyCompareSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLCopyCompareResponse"></wsdl:part>
    </wsdl:message>
    
    <wsdl:message name="WSStartASMServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSStartASMServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSStartASMServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSStartASMServerResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSStopASMServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSStopASMServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSStopASMServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSStopASMServerResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSKillASMServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSKillASMServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSKillASMServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSKillASMServerResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSStartQS3ServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSStartQS3ServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSStartQS3ServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSStartQS3ServerResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSStopQS3ServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSStopQS3ServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSStopQS3ServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSStopQS3ServerResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSQS3GetAccountListSoapIn">
      <wsdl:part name="parameters" type="tns:WSQS3GetAccountListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQS3GetAccountListSoapOut">
      <wsdl:part name="parameters" type="tns:WSQS3GetAccountListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQS3GetAccountSoapIn">
      <wsdl:part name="parameters" type="tns:WSQS3GetAccountRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQS3GetAccountSoapOut">
      <wsdl:part name="parameters" type="tns:WSQS3GetAccountResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQS3CreateAccountSoapIn">
      <wsdl:part name="parameters" type="tns:WSQS3CreateAccountRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQS3CreateAccountSoapOut">
      <wsdl:part name="parameters" type="tns:WSQS3CreateAccountResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQS3ModifyAccountSoapIn">
      <wsdl:part name="parameters" type="tns:WSQS3ModifyAccountRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQS3ModifyAccountSoapOut">
      <wsdl:part name="parameters" type="tns:WSQS3ModifyAccountResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQS3RemoveAccountSoapIn">
      <wsdl:part name="parameters" type="tns:WSQS3RemoveAccountRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQS3RemoveAccountSoapOut">
      <wsdl:part name="parameters" type="tns:WSQS3RemoveAccountResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQS3GetServerConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSQS3GetServerConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQS3GetServerConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSQS3GetServerConfigResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQS3PutServerConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSQS3PutServerConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQS3PutServerConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSQS3PutServerConfigResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQWSDGetServerConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSQWSDGetServerConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQWSDGetServerConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSQWSDGetServerConfigResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQWSDPutServerConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSQWSDPutServerConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQWSDPutServerConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSQWSDPutServerConfigResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSStartCryptoServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSStartCryptoServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSStartCryptoServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSStartCryptoServerResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSStopCryptoServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSStopCryptoServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSStopCryptoServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSStopCryptoServerResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSAuthorizeCryptoServerSoapIn">
      <wsdl:part name="parameters" type="tns:WSAuthorizeCryptoServerRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSAuthorizeCryptoServerSoapOut">
      <wsdl:part name="parameters" type="tns:WSAuthorizeCryptoServerResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetCertificateDetailsSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetCertificateDetailsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetCertificateDetailsSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetCertificateDetailsResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSiteCertificateCreateSoapIn">
      <wsdl:part name="parameters" type="tns:WSSiteCertificateCreateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSiteCertificateCreateSoapOut">
      <wsdl:part name="parameters" type="tns:WSSiteCertificateCreateResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetSetServerPrioritySoapIn">
      <wsdl:part name="parameters" type="tns:WSGetSetServerPriorityRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetSetServerPrioritySoapOut">
      <wsdl:part name="parameters" type="tns:WSGetSetServerPriorityResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSChangeMaxXferSizeSoapIn">
      <wsdl:part name="parameters" type="tns:WSChangeMaxXferSizeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSChangeMaxXferSizeSoapOut">
      <wsdl:part name="parameters" type="tns:WSChangeMaxXferSizeResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMultipathManagementSoapIn">
      <wsdl:part name="parameters" type="tns:WSMultipathManagementRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMultipathManagementSoapOut">
      <wsdl:part name="parameters" type="tns:WSMultipathManagementResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMultipathManagementApplySoapIn">
      <wsdl:part name="parameters" type="tns:WSMultipathManagementApplyRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMultipathManagementApplySoapOut">
      <wsdl:part name="parameters" type="tns:WSMultipathManagementApplyResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSSetSwapTimesSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetSwapTimesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetSwapTimesSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetSwapTimesResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetDeviceConfigStatusSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetDeviceConfigStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetDeviceConfigStatusSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetDeviceConfigStatusResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetDriveCapabilitiesSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetDriveCapabilitiesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetDriveCapabilitiesSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetDriveCapabilitiesResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetDriveProfileSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetDriveProfileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetDriveProfileSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetDriveProfileResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSetDriveProfileSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetDriveProfileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetDriveProfileSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetDriveProfileResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSResetDriveProfileSoapIn">
      <wsdl:part name="parameters" type="tns:WSResetDriveProfileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSResetDriveProfileSoapOut">
      <wsdl:part name="parameters" type="tns:WSResetDriveProfileResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetLibraryStatisticsSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetLibraryStatisticsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetLibraryStatisticsSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetLibraryStatisticsResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetLibraryOptionsSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetLibraryOptionsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetLibraryOptionsSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetLibraryOptionsResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetSCSIDeviceInfoSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetSCSIDeviceInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetSCSIDeviceInfoSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetSCSIDeviceInfoResponse"></wsdl:part>
    </wsdl:message>

   <wsdl:message name="WSSchedulerSoapIn">
      <wsdl:part name="parameters" type="tns:WSSchedulerRequest"></wsdl:part>
   </wsdl:message>
   <wsdl:message name="WSSchedulerSoapOut">
      <wsdl:part name="parameters" type="tns:WSSchedulerResponse"></wsdl:part>
   </wsdl:message>

   <wsdl:message name="WSDbBackupSoapIn">
      <wsdl:part name="parameters" type="tns:WSDbBackupRequest"></wsdl:part>
   </wsdl:message>
   <wsdl:message name="WSDbBackupSoapOut">
      <wsdl:part name="parameters" type="tns:WSDbBackupResponse"></wsdl:part>
   </wsdl:message>

  <wsdl:message name="WSGetSysLogSoapIn">
    <wsdl:part name="parameters" type="tns:WSGetSysLogRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="WSGetSysLogSoapOut">
    <wsdl:part name="parameters" type="tns:WSGetSysLogResponse"></wsdl:part>
  </wsdl:message>

  <wsdl:message name="WSSysLogActionSoapIn">
      <wsdl:part name="parameters" type="tns:WSSysLogActionRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSysLogActionSoapOut">
      <wsdl:part name="parameters" type="tns:WSSysLogActionResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSysLogGetAllFilesSoapIn">
      <wsdl:part name="parameters" type="tns:WSSysLogGetAllFilesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSysLogGetAllFilesSoapOut">
      <wsdl:part name="parameters" type="tns:WSSysLogGetAllFilesResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSysLogDownloadFileSoapIn">
      <wsdl:part name="parameters" type="tns:WSSysLogDownloadFileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSysLogDownloadFileSoapOut">
      <wsdl:part name="parameters" type="tns:WSSysLogDownloadFileResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGenericDownloadFileSoapIn">
      <wsdl:part name="parameters" type="tns:WSGenericDownloadFileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGenericDownloadFileSoapOut">
      <wsdl:part name="parameters" type="tns:WSGenericDownloadFileResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGenericUploadFileSoapIn">
      <wsdl:part name="parameters" type="tns:WSGenericUploadFileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGenericUploadFileSoapOut">
      <wsdl:part name="parameters" type="tns:WSGenericUploadFileResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetSCSILogSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetSCSILogRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetSCSILogSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetSCSILogResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSCSILogGetControlSoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSILogGetControlRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSILogGetControlSoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSILogGetControlResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSSCSILogSetControlSoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSILogSetControlRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSILogSetControlSoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSILogSetControlResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSCSILogEnableDeviceSoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSILogEnableDeviceRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSILogEnableDeviceSoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSILogEnableDeviceResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSCleanSCSILogSoapIn">
      <wsdl:part name="parameters" type="tns:WSCleanSCSILogRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSCleanSCSILogSoapOut">
      <wsdl:part name="parameters" type="tns:WSCleanSCSILogResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSCSILogGetPendingSoapIn">
      <wsdl:part name="parameters" type="tns:WSSCSILogGetPendingRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSCSILogGetPendingSoapOut">
      <wsdl:part name="parameters" type="tns:WSSCSILogGetPendingResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLGetIVSAdvancedConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLGetIVSAdvancedConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLGetIVSAdvancedConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLGetIVSAdvancedConfigResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLSetIVSAdvancedConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLSetIVSAdvancedConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLSetIVSAdvancedConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLSetIVSAdvancedConfigResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLGetMountOnDateListSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLGetMountOnDateListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLGetMountOnDateListSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLGetMountOnDateListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLMountOnDateSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLMountOnDateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLMountOnDateSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLMountOnDateResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLUMountOnDateSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLUMountOnDateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLUMountOnDateSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLUMountOnDateResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLRemoveMountOnDateSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLRemoveMountOnDateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLRemoveMountOnDateSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLRemoveMountOnDateResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetFSPPFilesListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetFSPPFilesListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFSPPFilesListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetFSPPFilesListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetFSPPSwitchOnOffSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetFSPPSwitchOnOffRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFSPPSwitchOnOffSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetFSPPSwitchOnOffResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetFSPPStatusSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetFSPPStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFSPPStatusSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetFSPPStatusResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMMTuningCacheSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMTuningCacheRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMTuningCacheSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMTuningCacheResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMGetPinToCachePolicySoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetPinToCachePolicyRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetPinToCachePolicySoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetPinToCachePolicyResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMSetPinToCachePolicySoapIn">
      <wsdl:part name="parameters" type="tns:WSMMSetPinToCachePolicyRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMSetPinToCachePolicySoapOut">
      <wsdl:part name="parameters" type="tns:WSMMSetPinToCachePolicyResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMGetFileAttributesSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetFileAttributesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetFileAttributesSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetFileAttributesResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMMSetFileAttributesSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMSetFileAttributesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMSetFileAttributesSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMSetFileAttributesResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSOfflineLocationSoapIn">
      <wsdl:part name="parameters" type="tns:WSOfflineLocationRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSOfflineLocationSoapOut">
      <wsdl:part name="parameters" type="tns:WSOfflineLocationResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSAutomountPropertiesSoapIn">
      <wsdl:part name="parameters" type="tns:WSAutomountPropertiesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSAutomountPropertiesSoapOut">
      <wsdl:part name="parameters" type="tns:WSAutomountPropertiesResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVerifyDigestSoapIn">
      <wsdl:part name="parameters" type="tns:WSVerifyDigestRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVerifyDigestSoapOut">
      <wsdl:part name="parameters" type="tns:WSVerifyDigestResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMediaUsageSoapIn">
      <wsdl:part name="parameters" type="tns:WSMediaUsageRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMediaUsageSoapOut">
      <wsdl:part name="parameters" type="tns:WSMediaUsageResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMGetCoveredInfoSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetCoveredInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetCoveredInfoSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetCoveredInfoResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMGetSpecialStreamSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetSpecialStreamRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetSpecialStreamSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetSpecialStreamResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMSetKeepModeSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMSetKeepModeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMSetKeepModeSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMSetKeepModeResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMAddTreeSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMAddTreeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMAddTreeSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMAddTreeResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMMChangeSubTreeSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMChangeSubTreeRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMChangeSubTreeSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMChangeSubTreeResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMPurgeFileSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMPurgeFileRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMPurgeFileSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMPurgeFileResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSCheckVLChangesSoapIn">
      <wsdl:part name="parameters" type="tns:WSCheckVLChangesRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSCheckVLChangesSoapOut">
      <wsdl:part name="parameters" type="tns:WSCheckVLChangesResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDHCPSetProtocolSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDHCPSetProtocolRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDHCPSetProtocolSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDHCPSetProtocolResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDCSVaultSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDCSVaultRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDCSVaultSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDCSVaultResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDAddBucketSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDAddBucketRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDAddBucketSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDAddBucketResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDTenantRemoveSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDTenantRemoveRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDTenantRemoveSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDTenantRemoveResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDDefineSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDDefineRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDDefineSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDDefineResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDDeleteSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDDeleteRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDDeleteSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDDeleteResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDRenameSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDRenameRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDRenameSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDRenameResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDGetBucketListSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDGetBucketListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDGetBucketListSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDGetBucketListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetQSSDListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetQSSDListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetQSSDListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetQSSDListResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetQSSDLicensedListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetQSSDLicensedListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetQSSDLicensedListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetQSSDLicensedListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSQSSDRefreshSoapIn">
      <wsdl:part name="parameters" type="tns:WSQSSDRefreshRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSQSSDRefreshSoapOut">
      <wsdl:part name="parameters" type="tns:WSQSSDRefreshResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetLicenseInfoSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetLicenseInfoRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetLicenseInfoSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetLicenseInfoResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSActivateLicenseSoapIn">
      <wsdl:part name="parameters" type="tns:WSActivateLicenseRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSActivateLicenseSoapOut">
      <wsdl:part name="parameters" type="tns:WSActivateLicenseResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetFolderListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetFolderListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetFolderListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetFolderListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSCreateFolderSoapIn">
      <wsdl:part name="parameters" type="tns:WSCreateFolderRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSCreateFolderSoapOut">
      <wsdl:part name="parameters" type="tns:WSCreateFolderResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSCheckDirectorySoapIn">
      <wsdl:part name="parameters" type="tns:WSCheckDirectoryRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSCheckDirectorySoapOut">
      <wsdl:part name="parameters" type="tns:WSCheckDirectoryResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetPerfFilesListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetPerfFilesListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetPerfFilesListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetPerfFilesListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetPerfFileContentSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetPerfFileContentRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetPerfFileContentSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetPerfFileContentResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetPerfMeasurementOptionsSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetPerfMeasurementOptionsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetPerfMeasurementOptionsSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetPerfMeasurementOptionsResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSSetPerfMeasurementOptionsSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetPerfMeasurementOptionsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetPerfMeasurementOptionsSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetPerfMeasurementOptionsResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMGetMeasurementOptionsSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetMeasurementOptionsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetMeasurementOptionsSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetMeasurementOptionsResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMSetMeasurementOptionsSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMSetMeasurementOptionsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMSetMeasurementOptionsSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMSetMeasurementOptionsResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMStartStopArchivingSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMStartStopArchivingRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMStartStopArchivingSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMStartStopArchivingResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMResumeArchivingSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMResumeArchivingRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMResumeArchivingSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMResumeArchivingResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMResumeMirrorSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMResumeMirrorRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMResumeMirrorSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMResumeMirrorResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMDelayedArchivingSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMDelayedArchivingRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMDelayedArchivingSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMDelayedArchivingResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMGetQueueListSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetQueueListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetQueueListSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetQueueListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSMMGetTransferStatusSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetTransferStatusRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetTransferStatusSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetTransferStatusResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSEventsGetListSoapIn">
      <wsdl:part name="parameters" type="tns:WSEventsGetListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSEventsGetListSoapOut">
      <wsdl:part name="parameters" type="tns:WSEventsGetListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSRemoveEventSoapIn">
      <wsdl:part name="parameters" type="tns:WSRemoveEventRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRemoveEventSoapOut">
      <wsdl:part name="parameters" type="tns:WSRemoveEventResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSCancelEventSoapIn">
      <wsdl:part name="parameters" type="tns:WSCancelEventRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSCancelEventSoapOut">
      <wsdl:part name="parameters" type="tns:WSCancelEventResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetMultiIncrementalDBSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetMultiIncrementalDBRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetMultiIncrementalDBSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetMultiIncrementalDBResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMicDBOperationSoapIn">
      <wsdl:part name="parameters" type="tns:WSMicDBOperationRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMicDBOperationSoapOut">
      <wsdl:part name="parameters" type="tns:WSMicDBOperationResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLExportMediaExSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLExportMediaExRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLExportMediaExSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLExportMediaExResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLExportMediaSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLExportMediaRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLExportMediaSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLExportMediaResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLMediaAskHelpSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLMediaAskHelpRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLMediaAskHelpSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLMediaAskHelpResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSVLMediaConfirmSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLMediaConfirmRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLMediaConfirmSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLMediaConfirmResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSVLImportMediaSoapIn">
      <wsdl:part name="parameters" type="tns:WSVLImportMediaRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSVLImportMediaSoapOut">
      <wsdl:part name="parameters" type="tns:WSVLImportMediaResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSJBGetVolumeListSoapIn">
      <wsdl:part name="parameters" type="tns:WSJBGetVolumeListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSJBGetVolumeListSoapOut">
      <wsdl:part name="parameters" type="tns:WSJBGetVolumeListResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSLibraryResetStatisticsSoapIn">
      <wsdl:part name="parameters" type="tns:WSLibraryResetStatisticsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSLibraryResetStatisticsSoapOut">
      <wsdl:part name="parameters" type="tns:WSLibraryResetStatisticsResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMMRebuildQuotasSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMRebuildQuotasRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMRebuildQuotasSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMRebuildQuotasResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMMGetQuotaAccountsSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMGetQuotaAccountsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMGetQuotaAccountsSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMGetQuotaAccountsResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSMMSetQuotaAccountsSoapIn">
      <wsdl:part name="parameters" type="tns:WSMMSetQuotaAccountsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSMMSetQuotaAccountsSoapOut">
      <wsdl:part name="parameters" type="tns:WSMMSetQuotaAccountsResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSEmailNotificationSoapIn">
      <wsdl:part name="parameters" type="tns:WSEmailNotificationRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSEmailNotificationSoapOut">
      <wsdl:part name="parameters" type="tns:WSEmailNotificationResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSEmailTestSoapIn">
      <wsdl:part name="parameters" type="tns:WSEmailTestRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSEmailTestSoapOut">
      <wsdl:part name="parameters" type="tns:WSEmailTestResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetEMailListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetEMailListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetEMailListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetEMailListResponse"></wsdl:part>
    </wsdl:message>
    
    <wsdl:message name="WSCleanEMailQueueSoapIn">
      <wsdl:part name="parameters" type="tns:WSCleanEMailQueueRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSCleanEMailQueueSoapOut">
      <wsdl:part name="parameters" type="tns:WSCleanEMailQueueResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSUserRoleSoapIn">
      <wsdl:part name="parameters" type="tns:WSUserRoleRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSUserRoleSoapOut">
      <wsdl:part name="parameters" type="tns:WSUserRoleResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSDASMSetMigratorStateSoapIn">
      <wsdl:part name="parameters" type="tns:WSDASMSetMigratorStateRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSDASMSetMigratorStateSoapOut">
      <wsdl:part name="parameters" type="tns:WSDASMSetMigratorStateResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetBackupConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetBackupConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetBackupConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetBackupConfigResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSSetBackupConfigSoapIn">
      <wsdl:part name="parameters" type="tns:WSSetBackupConfigRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSetBackupConfigSoapOut">
      <wsdl:part name="parameters" type="tns:WSSetBackupConfigResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetBackupListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetBackupListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetBackupListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetBackupListResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSRestoreDBBackupSoapIn">
      <wsdl:part name="parameters" type="tns:WSRestoreDBBackupRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRestoreDBBackupSoapOut">
      <wsdl:part name="parameters" type="tns:WSRestoreDBBackupResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSRestoreDBMediaSoapIn">
      <wsdl:part name="parameters" type="tns:WSRestoreDBMediaRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSRestoreDBMediaSoapOut">
      <wsdl:part name="parameters" type="tns:WSRestoreDBMediaResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSSDF2TDOSoapIn">
      <wsdl:part name="parameters" type="tns:WSSDF2TDORequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSSDF2TDOSoapOut">
      <wsdl:part name="parameters" type="tns:WSSDF2TDOResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetUserListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetUserListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetUserListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetUserListResponse"></wsdl:part>
    </wsdl:message>

    <wsdl:message name="WSGetGroupListSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetGroupListRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetGroupListSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetGroupListResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSGetWSDLSoapIn">
      <wsdl:part name="parameters" type="tns:WSGetWSDLRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSGetWSDLSoapOut">
      <wsdl:part name="parameters" type="tns:WSGetWSDLResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSXAGetSpecialStreamSoapIn">
      <wsdl:part name="parameters" type="tns:WSXAGetSpecialStreamRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSXAGetSpecialStreamSoapOut">
      <wsdl:part name="parameters" type="tns:WSXAGetSpecialStreamResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSXAPutSpecialStreamSoapIn">
      <wsdl:part name="parameters" type="tns:WSXAPutSpecialStreamRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSXAPutSpecialStreamSoapOut">
      <wsdl:part name="parameters" type="tns:WSXAPutSpecialStreamResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSXADeleteSpecialStreamSoapIn">
      <wsdl:part name="parameters" type="tns:WSXADeleteSpecialStreamRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSXADeleteSpecialStreamSoapOut">
      <wsdl:part name="parameters" type="tns:WSXADeleteSpecialStreamResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSXAGetStatSpecialStreamSoapIn">
      <wsdl:part name="parameters" type="tns:WSXAGetStatSpecialStreamRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSXAGetStatSpecialStreamSoapOut">
      <wsdl:part name="parameters" type="tns:WSXAGetStatSpecialStreamResponse"></wsdl:part>
    </wsdl:message>
  
    <wsdl:message name="WSXAEnumSpecialStreamsSoapIn">
      <wsdl:part name="parameters" type="tns:WSXAEnumSpecialStreamsRequest"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="WSXAEnumSpecialStreamsSoapOut">
      <wsdl:part name="parameters" type="tns:WSXAEnumSpecialStreamsResponse"></wsdl:part>
    </wsdl:message>
  
  <wsdl:portType name="WSWebServiceSoapPort">
    <!-- Following operation are supported by WSWebService -->
        <wsdl:operation name="WSGetServerInfo">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get ASM servers status information.</wsdl:documentation>
            <wsdl:input message="tns:WSGetServerInfoSoapIn" />
            <wsdl:output message="tns:WSGetServerInfoSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetServerInfoEx">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get ASM extended servers status information.</wsdl:documentation>
            <wsdl:input message="tns:WSGetServerInfoExSoapIn" />
            <wsdl:output message="tns:WSGetServerInfoExSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetServerFeatures">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get ASM server features information.</wsdl:documentation>
            <wsdl:input message="tns:WSGetServerFeaturesSoapIn" />
            <wsdl:output message="tns:WSGetServerFeaturesSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetVLInfo">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get integral volume information.</wsdl:documentation>
            <wsdl:input message="tns:WSGetVLInfoSoapIn" />
            <wsdl:output message="tns:WSGetVLInfoSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetIVInfoExtended">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get integral volume information including media list.</wsdl:documentation>
          <wsdl:input message="tns:WSGetIVInfoExtendedSoapIn" />
          <wsdl:output message="tns:WSGetIVInfoExtendedSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetIVInfo">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get integral volume information.</wsdl:documentation>
          <wsdl:input message="tns:WSGetIVInfoSoapIn" />
          <wsdl:output message="tns:WSGetIVInfoSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetFSStat">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get WS mm_param volume information.</wsdl:documentation>
          <wsdl:input message="tns:WSGetFSStatSoapIn" />
          <wsdl:output message="tns:WSGetFSStatSoapOut" />
        </wsdl:operation>    
        <wsdl:operation name="WSGetFileInfo">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get WS file or directory information.</wsdl:documentation>
            <wsdl:input message="tns:WSGetFileInfoSoapIn" />
            <wsdl:output message="tns:WSGetFileInfoSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetGroupFileInfo">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get file or directory information for a group of ones.</wsdl:documentation>
            <wsdl:input message="tns:WSGetGroupFileInfoSoapIn" />
            <wsdl:output message="tns:WSGetGroupFileInfoSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetGroupFileRetentionInfo">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get retention period for a group of files.</wsdl:documentation>
          <wsdl:input message="tns:WSGetGroupFileRetentionInfoSoapIn" />
          <wsdl:output message="tns:WSGetGroupFileRetentionInfoSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSRetrieveFile">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Retrieve file or file part from IV.</wsdl:documentation>
            <wsdl:input message="tns:WSRetrieveFileSoapIn" />
            <wsdl:output message="tns:WSRetrieveFileSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSRetrieveFileStatus">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get status of file retrieve operation.</wsdl:documentation>
            <wsdl:input message="tns:WSRetrieveFileStatusSoapIn" />
            <wsdl:output message="tns:WSRetrieveFileStatusSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSBatchFileRetrieve">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Retrieve a set of files.</wsdl:documentation>
            <wsdl:input message="tns:WSBatchFileRetrieveSoapIn" />
            <wsdl:output message="tns:WSBatchFileRetrieveSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSBatchFileStore">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store a set of files.</wsdl:documentation>
            <wsdl:input message="tns:WSBatchFileStoreSoapIn" />
            <wsdl:output message="tns:WSBatchFileStoreSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSBatchJobStatus">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get batch job status.</wsdl:documentation>
            <wsdl:input message="tns:WSBatchJobStatusSoapIn" />
            <wsdl:output message="tns:WSBatchJobStatusSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSBatchJobObjectStatus">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get batch job object status.</wsdl:documentation>
            <wsdl:input message="tns:WSBatchJobObjectStatusSoapIn" />
            <wsdl:output message="tns:WSBatchJobObjectStatusSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSUserLogin">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Authenticate user using provided username and password.</wsdl:documentation>
            <wsdl:input message="tns:WSUserLoginSoapIn" />
            <wsdl:output message="tns:WSUserLoginSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSUserLogout">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invalidate provided user token</wsdl:documentation>
            <wsdl:input message="tns:WSUserLogoutSoapIn" />
            <wsdl:output message="tns:WSUserLogoutSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSReadDir">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Read directory structure</wsdl:documentation>
            <wsdl:input message="tns:WSReadDirSoapIn" />
            <wsdl:output message="tns:WSReadDirSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSReadDirFiles">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Read target directory and get files stat</wsdl:documentation>
          <wsdl:input message="tns:WSReadDirFilesSoapIn" />
          <wsdl:output message="tns:WSReadDirFilesSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSMMArchiving">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Tells the MM Server to start archiving i.e. process the delayed events</wsdl:documentation>
          <wsdl:input message="tns:WSMMArchivingSoapIn" />
          <wsdl:output message="tns:WSMMArchivingSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetIVList">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get integral volumes list</wsdl:documentation>
            <wsdl:input message="tns:WSGetIVListSoapIn" />
            <wsdl:output message="tns:WSGetIVListSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetIVListEx">
            <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get integral volumes list</wsdl:documentation>
            <wsdl:input message="tns:WSGetIVListExSoapIn" />
            <wsdl:output message="tns:WSGetIVListExSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSListMigratedFilesByTime">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get files list by time</wsdl:documentation>
          <wsdl:input message="tns:WSListFilesByTimeSoapIn" />
          <wsdl:output message="tns:WSListFilesByTimeSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSRetrieveFilesSortedList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get sorted file list</wsdl:documentation>
          <wsdl:input message="tns:WSRetrieveFilesSortedListSoapIn" />
          <wsdl:output message="tns:WSRetrieveFilesSortedListSoapOut" />
        </wsdl:operation>
        <wsdl:operation name="WSGetFilesSortedList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get sorted file list</wsdl:documentation>
          <wsdl:input message="tns:WSGetFilesSortedListSoapIn" />
          <wsdl:output message="tns:WSGetFilesSortedListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetElementStatus">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get element (Library, Drive, Changer, etc) status</wsdl:documentation>
          <wsdl:input message="tns:WSGetElementStatusSoapIn" />
          <wsdl:output message="tns:WSGetElementStatusSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSetSlotStatus">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set Slot status</wsdl:documentation>
          <wsdl:input message="tns:WSSetSlotStatusSoapIn" />
          <wsdl:output message="tns:WSSetSlotStatusSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSetDrivesStatus">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set WS Drives status</wsdl:documentation>
          <wsdl:input message="tns:WSSetDrivesStatusSoapIn" />
          <wsdl:output message="tns:WSSetDrivesStatusSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSetPrintersStatus">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set WS Printers status</wsdl:documentation>
          <wsdl:input message="tns:WSSetPrintersStatusSoapIn" />
          <wsdl:output message="tns:WSSetPrintersStatusSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationExchange">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes an Exchange operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationExchangeSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationExchangeSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationExport">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes an Export operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationExportSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationExportSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationImport">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes an Import operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationImportSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationImportSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationFlip">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a Flip operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationFlipSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationFlipSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationLoad">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a Load operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationLoadSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationLoadSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationUnload">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes an Unload operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationUnloadSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationUnloadSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationReset">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a Reset operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationResetSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationResetSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationMagazine">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a Magazine operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationMagazineSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationMagazineSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationScheduler">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a Scheduler operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationSchedulerSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationSchedulerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationCleaning">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes an Cleaning operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationCleaningSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationCleaningSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryGetSlotState">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns slots data for selected Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryGetSlotStateSoapIn" />
          <wsdl:output message="tns:WSLibraryGetSlotStateSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryGetDriveState">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns drive data for selected Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryGetDriveStateSoapIn" />
          <wsdl:output message="tns:WSLibraryGetDriveStateSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibrarySetDriveState">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets drive data for selected Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibrarySetDriveStateSoapIn" />
          <wsdl:output message="tns:WSLibrarySetDriveStateSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationRefresh">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a Refresh operation on Library hardware</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryOperationRefreshSoapIn" />
          <wsdl:output message="tns:WSLibraryOperationRefreshSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetRemoteDevicesList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of configured remote host devices</wsdl:documentation>
          <wsdl:input message="tns:WSGetRemoteDevicesListSoapIn" />
          <wsdl:output message="tns:WSGetRemoteDevicesListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetGasConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of GAS hosts</wsdl:documentation>
          <wsdl:input message="tns:WSGetGasConfigSoapIn" />
          <wsdl:output message="tns:WSGetGasConfigSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGasDomain">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create or delete GAS domain definition</wsdl:documentation>
          <wsdl:input message="tns:WSGasDomainSoapIn" />
          <wsdl:output message="tns:WSGasDomainSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGasNode">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Manages GAS nodes</wsdl:documentation>
          <wsdl:input message="tns:WSGasNodeSoapIn" />
          <wsdl:output message="tns:WSGasNodeSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGasPair">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Pairs GAS hosts</wsdl:documentation>
          <wsdl:input message="tns:WSGasPairSoapIn" />
          <wsdl:output message="tns:WSGasPairSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGasCross">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cross pairs GAS hosts</wsdl:documentation>
          <wsdl:input message="tns:WSGasCrossSoapIn" />
          <wsdl:output message="tns:WSGasCrossSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetDevicesList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of configured and non-configured devices</wsdl:documentation>
          <wsdl:input message="tns:WSGetDevicesListSoapIn" />
          <wsdl:output message="tns:WSGetDevicesListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSetPathsClaiming">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements claiming or reclaiming procedure for the Library device</wsdl:documentation>
          <wsdl:input message="tns:WSSetPathsClaimingSoapIn" />
          <wsdl:output message="tns:WSSetPathsClaimingSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSConfigureLibrary">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements Library configuration</wsdl:documentation>
          <wsdl:input message="tns:WSConfigureLibrarySoapIn" />
          <wsdl:output message="tns:WSConfigureLibrarySoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSRescanHardware">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes hardware scanning</wsdl:documentation>
          <wsdl:input message="tns:WSRescanHardwareSoapIn" />
          <wsdl:output message="tns:WSRescanHardwareSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSCSIInquiry">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements inquiry request to SCSI device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSIInquirySoapIn" />
          <wsdl:output message="tns:WSSCSIInquirySoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSCSISerialNumber">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements serial number request to SCSI device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSISerialNumberSoapIn" />
          <wsdl:output message="tns:WSSCSISerialNumberSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSCSICapability">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements capability request to SCSI device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSICapabilitySoapIn" />
          <wsdl:output message="tns:WSSCSICapabilitySoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSCSIInventory">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements inventory request to SCSI device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSIInventorySoapIn" />
          <wsdl:output message="tns:WSSCSIInventorySoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSCSICapacity">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements capacity request to SCSI device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSICapacitySoapIn" />
          <wsdl:output message="tns:WSSCSICapacitySoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSCSILocate">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements locate request to SCSI device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSILocateSoapIn" />
          <wsdl:output message="tns:WSSCSILocateSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSCSIRead">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements read request to SCSI device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSIReadSoapIn" />
          <wsdl:output message="tns:WSSCSIReadSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLCreateEditSet">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates an Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLCreateEditSetSoapIn" />
          <wsdl:output message="tns:WSVLCreateEditSetSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLDelSet">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deletes an Integral Volume set from VL database</wsdl:documentation>
          <wsdl:input message="tns:WSVLDelSetSoapIn" />
          <wsdl:output message="tns:WSVLDelSetSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLAddToSet">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Adds media to Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLAddToSetSoapIn" />
          <wsdl:output message="tns:WSVLAddToSetSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLDelFromSet">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deletes media from Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLDelFromSetSoapIn" />
          <wsdl:output message="tns:WSVLDelFromSetSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLLSDev">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the status of the media and library(es) or standalone drive(s)</wsdl:documentation>
            <wsdl:input message="tns:WSVLLSDevSoapIn" />
          <wsdl:output message="tns:WSVLLSDevSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLLSSet">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the VL status for the specified Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLLSSetSoapIn" />
          <wsdl:output message="tns:WSVLLSSetSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLLSVolume">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides possibility to list volume content</wsdl:documentation>
          <wsdl:input message="tns:WSVLLSVolumeSoapIn" />
          <wsdl:output message="tns:WSVLLSVolumeSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLLTFS">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks or repairs incomplete LTFS tape</wsdl:documentation>
          <wsdl:input message="tns:WSVLLTFSSoapIn" />
          <wsdl:output message="tns:WSVLLTFSSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLMediaUsage">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Analyses media usage within in an Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLMediaUsageSoapIn" />
          <wsdl:output message="tns:WSVLMediaUsageSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSMMRamDisk">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">MM Param RAM Disk set</wsdl:documentation>
          <wsdl:input message="tns:WSMMRamDiskSoapIn" />
          <wsdl:output message="tns:WSMMRamDiskSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLConf">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">VL Conf management</wsdl:documentation>
          <wsdl:input message="tns:WSVLConfSoapIn" />
          <wsdl:output message="tns:WSVLConfSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLCache">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates or edits cache information for an Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLCacheSoapIn" />
          <wsdl:output message="tns:WSVLCacheSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLMountIV">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Mounts an Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLMountIVSoapIn" />
          <wsdl:output message="tns:WSVLMountIVSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLUMountIV">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Detaches the file system mentioned from the file hierarchy</wsdl:documentation>
          <wsdl:input message="tns:WSVLUMountIVSoapIn" />
          <wsdl:output message="tns:WSVLUMountIVSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLErase">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Erases a media</wsdl:documentation>
          <wsdl:input message="tns:WSVLEraseSoapIn" />
          <wsdl:output message="tns:WSVLEraseSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLLease">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Manages the drive lease time for the in-set-media slot</wsdl:documentation>
          <wsdl:input message="tns:WSVLLeaseSoapIn" />
          <wsdl:output message="tns:WSVLLeaseSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLClose">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Closes an UDF volume (surface or media)</wsdl:documentation>
          <wsdl:input message="tns:WSVLCloseSoapIn" />
          <wsdl:output message="tns:WSVLCloseSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLExportBulk">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Exports multiple media from the tape library with multiple mailboxes</wsdl:documentation>
          <wsdl:input message="tns:WSVLExportBulkSoapIn" />
          <wsdl:output message="tns:WSVLExportBulkSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLMagazine">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Exchanges media in the library using the magazines and updates the VL database</wsdl:documentation>
          <wsdl:input message="tns:WSVLMagazineSoapIn" />
          <wsdl:output message="tns:WSVLMagazineSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLRecover">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes recover procedure on a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSVLRecoverSoapIn" />
          <wsdl:output message="tns:WSVLRecoverSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLInSet">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Edits a media in the Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLInSetSoapIn" />
          <wsdl:output message="tns:WSVLInSetSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLMIcDB">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">View and modify multiple incremental copy (MiC) database</wsdl:documentation>
          <wsdl:input message="tns:WSVLMIcDBSoapIn" />
          <wsdl:output message="tns:WSVLMIcDBSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLPing">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks to see if the vlserver is running</wsdl:documentation>
          <wsdl:input message="tns:WSVLPingSoapIn" />
          <wsdl:output message="tns:WSVLPingSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLOffSync">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Syncs mirror media</wsdl:documentation>
          <wsdl:input message="tns:WSVLOffSyncSoapIn" />
          <wsdl:output message="tns:WSVLOffSyncSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLExchange">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Moves media from one slot to other in the library</wsdl:documentation>
          <wsdl:input message="tns:WSVLExchangeSoapIn" />
          <wsdl:output message="tns:WSVLExchangeSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLRefresh">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Refreshes media, library(es) and standalone drive(s) and fixes the VL database</wsdl:documentation>
          <wsdl:input message="tns:WSVLRefreshSoapIn" />
          <wsdl:output message="tns:WSVLRefreshSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLReplace">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Replaces a media in a Mirrored Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLReplaceSoapIn" />
          <wsdl:output message="tns:WSVLReplaceSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLRestoreFSDB">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Recreates filesystem databases</wsdl:documentation>
          <wsdl:input message="tns:WSVLRestoreFSDBSoapIn" />
          <wsdl:output message="tns:WSVLRestoreFSDBSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLReuse">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Relocates data, erases the media and adds it to an Integral Volume set</wsdl:documentation>
          <wsdl:input message="tns:WSVLReuseSoapIn" />
          <wsdl:output message="tns:WSVLReuseSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLScratch">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Declares media type as scratch</wsdl:documentation>
          <wsdl:input message="tns:WSVLScratchSoapIn" />
          <wsdl:output message="tns:WSVLScratchSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLStartMirroring">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Manages synchronization of the mirror set</wsdl:documentation>
          <wsdl:input message="tns:WSVLStartMirroringSoapIn" />
          <wsdl:output message="tns:WSVLStartMirroringSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLInitMirroring">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Initializes mirror set</wsdl:documentation>
          <wsdl:input message="tns:WSVLInitMirroringSoapIn" />
          <wsdl:output message="tns:WSVLInitMirroringSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLQList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Prints delayed job queue obtained from the ASM, including scheduler daemon</wsdl:documentation>
          <wsdl:input message="tns:WSVLQListSoapIn" />
          <wsdl:output message="tns:WSVLQListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLQMove">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Moves records in the delayed job queue list</wsdl:documentation>
          <wsdl:input message="tns:WSVLQMoveSoapIn" />
          <wsdl:output message="tns:WSVLQMoveSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLQRemove">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes records in the delayed job queue list</wsdl:documentation>
          <wsdl:input message="tns:WSVLQRemoveSoapIn" />
          <wsdl:output message="tns:WSVLQRemoveSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLRecord">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Records an ISO/UDF image to a media</wsdl:documentation>
          <wsdl:input message="tns:WSVLRecordSoapIn" />
          <wsdl:output message="tns:WSVLRecordSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLPublish">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates job to publish</wsdl:documentation>
          <wsdl:input message="tns:WSVLPublishSoapIn" />
          <wsdl:output message="tns:WSVLPublishSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLSchedule">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides generic job scheduling support</wsdl:documentation>
          <wsdl:input message="tns:WSVLScheduleSoapIn" />
          <wsdl:output message="tns:WSVLScheduleSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLReplica">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Handle replication Integral Volume sets</wsdl:documentation>
          <wsdl:input message="tns:WSVLReplicaSoapIn" />
          <wsdl:output message="tns:WSVLReplicaSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLLSMDb">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Prints media database</wsdl:documentation>
          <wsdl:input message="tns:WSVLLSMDbSoapIn" />
          <wsdl:output message="tns:WSVLLSMDbSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLSDF2TDO">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Converts SDF Integral Volume set to TDO type</wsdl:documentation>
          <wsdl:input message="tns:WSVLSDF2TDOSoapIn" />
          <wsdl:output message="tns:WSVLSDF2TDOSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSEnumMediaByLibraryName">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns media list for the given library name</wsdl:documentation>
          <wsdl:input message="tns:WSEnumMediaByLibraryNameSoapIn" />
          <wsdl:output message="tns:WSEnumMediaByLibraryNameSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLVerify">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a Verify operation on VL database</wsdl:documentation>
          <wsdl:input message="tns:WSVLVerifySoapIn" />
          <wsdl:output message="tns:WSVLVerifySoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLFixDB">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Fixes possible errors in VL database</wsdl:documentation>
          <wsdl:input message="tns:WSVLFixDBSoapIn" />
          <wsdl:output message="tns:WSVLFixDBSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLCopyCompare">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes a delayed Copy/Compare operation</wsdl:documentation>
          <wsdl:input message="tns:WSVLCopyCompareSoapIn" />
          <wsdl:output message="tns:WSVLCopyCompareSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSStartASMServer">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts ASM server</wsdl:documentation>
          <wsdl:input message="tns:WSStartASMServerSoapIn" />
          <wsdl:output message="tns:WSStartASMServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSStopASMServer">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stops ASM server</wsdl:documentation>
          <wsdl:input message="tns:WSStopASMServerSoapIn" />
          <wsdl:output message="tns:WSStopASMServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSKillASMServer">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Kills ASM server</wsdl:documentation>
          <wsdl:input message="tns:WSKillASMServerSoapIn" />
          <wsdl:output message="tns:WSKillASMServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSStartQS3Server">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts QS3 server</wsdl:documentation>
          <wsdl:input message="tns:WSStartQS3ServerSoapIn" />
          <wsdl:output message="tns:WSStartQS3ServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSStopQS3Server">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stops QS3 server</wsdl:documentation>
          <wsdl:input message="tns:WSStopQS3ServerSoapIn" />
          <wsdl:output message="tns:WSStopQS3ServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQS3GetAccountList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of QS3 server accounts</wsdl:documentation>
          <wsdl:input message="tns:WSQS3GetAccountListSoapIn" />
          <wsdl:output message="tns:WSQS3GetAccountListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQS3GetAccount">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of QS3 server accounts</wsdl:documentation>
          <wsdl:input message="tns:WSQS3GetAccountSoapIn" />
          <wsdl:output message="tns:WSQS3GetAccountSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQS3CreateAccount">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates QS3 server account</wsdl:documentation>
          <wsdl:input message="tns:WSQS3CreateAccountSoapIn" />
          <wsdl:output message="tns:WSQS3CreateAccountSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQS3ModifyAccount">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates QS3 server existing account</wsdl:documentation>
          <wsdl:input message="tns:WSQS3ModifyAccountSoapIn" />
          <wsdl:output message="tns:WSQS3ModifyAccountSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQS3RemoveAccount">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes QS3 server account</wsdl:documentation>
          <wsdl:input message="tns:WSQS3RemoveAccountSoapIn" />
          <wsdl:output message="tns:WSQS3RemoveAccountSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQS3GetServerConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns QS3 server configuration contents</wsdl:documentation>
          <wsdl:input message="tns:WSQS3GetServerConfigSoapIn" />
          <wsdl:output message="tns:WSQS3GetServerConfigSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQS3PutServerConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stores QS3 server configuration contents</wsdl:documentation>
          <wsdl:input message="tns:WSQS3PutServerConfigSoapIn" />
          <wsdl:output message="tns:WSQS3PutServerConfigSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQWSDGetServerConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns QWSD server configuration contents</wsdl:documentation>
          <wsdl:input message="tns:WSQWSDGetServerConfigSoapIn" />
          <wsdl:output message="tns:WSQWSDGetServerConfigSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQWSDPutServerConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stores QWSD server configuration contents</wsdl:documentation>
          <wsdl:input message="tns:WSQWSDPutServerConfigSoapIn" />
          <wsdl:output message="tns:WSQWSDPutServerConfigSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSStartCryptoServer">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts Crypto server</wsdl:documentation>
          <wsdl:input message="tns:WSStartCryptoServerSoapIn" />
          <wsdl:output message="tns:WSStartCryptoServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSStopCryptoServer">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stops Crypto server</wsdl:documentation>
          <wsdl:input message="tns:WSStopCryptoServerSoapIn" />
          <wsdl:output message="tns:WSStopCryptoServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSAuthorizeCryptoServer">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Authorizes Crypto server</wsdl:documentation>
          <wsdl:input message="tns:WSAuthorizeCryptoServerSoapIn" />
          <wsdl:output message="tns:WSAuthorizeCryptoServerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetCertificateDetails">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns certificate details</wsdl:documentation>
          <wsdl:input message="tns:WSGetCertificateDetailsSoapIn" />
          <wsdl:output message="tns:WSGetCertificateDetailsSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSiteCertificateCreate">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates sit0 certificate</wsdl:documentation>
          <wsdl:input message="tns:WSSiteCertificateCreateSoapIn" />
          <wsdl:output message="tns:WSSiteCertificateCreateSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetSetServerPriority">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets and sets ASM server priority value</wsdl:documentation>
          <wsdl:input message="tns:WSGetSetServerPrioritySoapIn" />
          <wsdl:output message="tns:WSGetSetServerPrioritySoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSChangeMaxXferSize">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes MaxXfer value for device</wsdl:documentation>
          <wsdl:input message="tns:WSChangeMaxXferSizeSoapIn" />
          <wsdl:output message="tns:WSChangeMaxXferSizeSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSMultipathManagement">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Implements multipath management</wsdl:documentation>
          <wsdl:input message="tns:WSMultipathManagementSoapIn" />
          <wsdl:output message="tns:WSMultipathManagementSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMultipathManagementApply">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Applies multipath management changes</wsdl:documentation>
          <wsdl:input message="tns:WSMultipathManagementApplySoapIn" />
          <wsdl:output message="tns:WSMultipathManagementApplySoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSetSwapTimes">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets swap times for device</wsdl:documentation>
          <wsdl:input message="tns:WSSetSwapTimesSoapIn" />
          <wsdl:output message="tns:WSSetSwapTimesSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetDeviceConfigStatus">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns configuration status for device</wsdl:documentation>
          <wsdl:input message="tns:WSGetDeviceConfigStatusSoapIn" />
          <wsdl:output message="tns:WSGetDeviceConfigStatusSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetDriveCapabilities">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns drive capabilities for a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSGetDriveCapabilitiesSoapIn" />
          <wsdl:output message="tns:WSGetDriveCapabilitiesSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetDriveProfile">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets profile for a drive selected</wsdl:documentation>
          <wsdl:input message="tns:WSGetDriveProfileSoapIn" />
          <wsdl:output message="tns:WSGetDriveProfileSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSetDriveProfile">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets profile for a drive selected</wsdl:documentation>
          <wsdl:input message="tns:WSSetDriveProfileSoapIn" />
          <wsdl:output message="tns:WSSetDriveProfileSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSResetDriveProfile">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resets profile for a drive selected</wsdl:documentation>
          <wsdl:input message="tns:WSResetDriveProfileSoapIn" />
          <wsdl:output message="tns:WSResetDriveProfileSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetLibraryStatistics">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Library statistics</wsdl:documentation>
          <wsdl:input message="tns:WSGetLibraryStatisticsSoapIn" />
          <wsdl:output message="tns:WSGetLibraryStatisticsSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetLibraryOptions">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Library options</wsdl:documentation>
          <wsdl:input message="tns:WSGetLibraryOptionsSoapIn" />
          <wsdl:output message="tns:WSGetLibraryOptionsSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetSCSIDeviceInfo">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns different SCSI information for a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSGetSCSIDeviceInfoSoapIn" />
          <wsdl:output message="tns:WSGetSCSIDeviceInfoSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetSysLog">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns syslog content</wsdl:documentation>
          <wsdl:input message="tns:WSGetSysLogSoapIn" />
          <wsdl:output message="tns:WSGetSysLogSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSScheduler">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns scheduled jobs queue list</wsdl:documentation>
          <wsdl:input message="tns:WSSchedulerSoapIn" />
          <wsdl:output message="tns:WSSchedulerSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSDbBackup">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns TDO SDF backup info</wsdl:documentation>
          <wsdl:input message="tns:WSDbBackupSoapIn" />
          <wsdl:output message="tns:WSDbBackupSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSysLogAction">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cleans up syslog content</wsdl:documentation>
          <wsdl:input message="tns:WSSysLogActionSoapIn" />
          <wsdl:output message="tns:WSSysLogActionSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSysLogGetAllFiles">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns content of the log directory</wsdl:documentation>
          <wsdl:input message="tns:WSSysLogGetAllFilesSoapIn" />
          <wsdl:output message="tns:WSSysLogGetAllFilesSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSysLogDownloadFile">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns content of the requested log file</wsdl:documentation>
          <wsdl:input message="tns:WSSysLogDownloadFileSoapIn" />
          <wsdl:output message="tns:WSSysLogDownloadFileSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGenericDownloadFile">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Downloads requested file from a predefined directory</wsdl:documentation>
          <wsdl:input message="tns:WSGenericDownloadFileSoapIn" />
          <wsdl:output message="tns:WSGenericDownloadFileSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGenericUploadFile">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Uploads requested file to a predefined directory</wsdl:documentation>
          <wsdl:input message="tns:WSGenericUploadFileSoapIn" />
          <wsdl:output message="tns:WSGenericUploadFileSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogGetControl">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get SCSI logging features</wsdl:documentation>
          <wsdl:input message="tns:WSSCSILogGetControlSoapIn" />
          <wsdl:output message="tns:WSSCSILogGetControlSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogSetControl">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set SCSI logging features</wsdl:documentation>
          <wsdl:input message="tns:WSSCSILogSetControlSoapIn" />
          <wsdl:output message="tns:WSSCSILogSetControlSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogEnableDevice">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Enables or disabled SCSI logging for a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSSCSILogEnableDeviceSoapIn" />
          <wsdl:output message="tns:WSSCSILogEnableDeviceSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetSCSILog">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns SCSI log content</wsdl:documentation>
          <wsdl:input message="tns:WSGetSCSILogSoapIn" />
          <wsdl:output message="tns:WSGetSCSILogSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSCleanSCSILog">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cleans up SCSI log content</wsdl:documentation>
          <wsdl:input message="tns:WSCleanSCSILogSoapIn" />
          <wsdl:output message="tns:WSCleanSCSILogSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogGetPending">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get pending SCSI commands</wsdl:documentation>
          <wsdl:input message="tns:WSSCSILogGetPendingSoapIn" />
          <wsdl:output message="tns:WSSCSILogGetPendingSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLGetIVSAdvancedConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns an advanced configuration for Integral Volume Set in XML format</wsdl:documentation>
          <wsdl:input message="tns:WSVLGetIVSAdvancedConfigSoapIn" />
          <wsdl:output message="tns:WSVLGetIVSAdvancedConfigSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLSetIVSAdvancedConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates an advanced configuration for Integral Volume Set in XML format</wsdl:documentation>
          <wsdl:input message="tns:WSVLSetIVSAdvancedConfigSoapIn" />
          <wsdl:output message="tns:WSVLSetIVSAdvancedConfigSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLGetMountOnDateList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of Integral Volume Sets mounted on date</wsdl:documentation>
          <wsdl:input message="tns:WSVLGetMountOnDateListSoapIn" />
          <wsdl:output message="tns:WSVLGetMountOnDateListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSVLMountOnDate">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Mounts an Integral Volume Set on date specified</wsdl:documentation>
          <wsdl:input message="tns:WSVLMountOnDateSoapIn" />
          <wsdl:output message="tns:WSVLMountOnDateSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLUMountOnDate">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Unmounts an Integral Volume Set on date specified</wsdl:documentation>
          <wsdl:input message="tns:WSVLUMountOnDateSoapIn" />
          <wsdl:output message="tns:WSVLUMountOnDateSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLRemoveMountOnDate">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes an Integral Volume Set on date specified</wsdl:documentation>
          <wsdl:input message="tns:WSVLRemoveMountOnDateSoapIn" />
          <wsdl:output message="tns:WSVLRemoveMountOnDateSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetFSPPFilesList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns files list registered by FSPP</wsdl:documentation>
          <wsdl:input message="tns:WSGetFSPPFilesListSoapIn" />
          <wsdl:output message="tns:WSGetFSPPFilesListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetFSPPSwitchOnOff">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Enables or disables events registration on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSGetFSPPSwitchOnOffSoapIn" />
          <wsdl:output message="tns:WSGetFSPPSwitchOnOffSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetFSPPStatus">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns FSPP status (enabled or disabled) of events registration on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSGetFSPPStatusSoapIn" />
          <wsdl:output message="tns:WSGetFSPPStatusSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSMMTuningCache">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Provides cache tuning for an Integral Volume Set</wsdl:documentation>
          <wsdl:input message="tns:WSMMTuningCacheSoapIn" />
          <wsdl:output message="tns:WSMMTuningCacheSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMGetPinToCachePolicy">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns pin-to-cache policy for a specified file</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetPinToCachePolicySoapIn" />
          <wsdl:output message="tns:WSMMGetPinToCachePolicySoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMSetPinToCachePolicy">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets pin-to-cache policy for a specified file</wsdl:documentation>
          <wsdl:input message="tns:WSMMSetPinToCachePolicySoapIn" />
          <wsdl:output message="tns:WSMMSetPinToCachePolicySoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMGetFileAttributes">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns attributes for a specified file</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetFileAttributesSoapIn" />
          <wsdl:output message="tns:WSMMGetFileAttributesSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMSetFileAttributes">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets attributes for a specified file</wsdl:documentation>
          <wsdl:input message="tns:WSMMSetFileAttributesSoapIn" />
          <wsdl:output message="tns:WSMMSetFileAttributesSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSOfflineLocation">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns offline location of media with this file</wsdl:documentation>
          <wsdl:input message="tns:WSOfflineLocationSoapIn" />
          <wsdl:output message="tns:WSOfflineLocationSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSAutomountProperties">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns used and free size fo AM volume</wsdl:documentation>
          <wsdl:input message="tns:WSAutomountPropertiesSoapIn" />
          <wsdl:output message="tns:WSAutomountPropertiesSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMGetCoveredInfo">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns covered info for a specified object</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetCoveredInfoSoapIn" />
          <wsdl:output message="tns:WSMMGetCoveredInfoSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMGetSpecialStream">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns special stream content in base64</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetSpecialStreamSoapIn" />
          <wsdl:output message="tns:WSMMGetSpecialStreamSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVerifyDigest">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns digest verification progress report</wsdl:documentation>
          <wsdl:input message="tns:WSVerifyDigestSoapIn" />
          <wsdl:output message="tns:WSVerifyDigestSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMediaUsage">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns media usage calculating progress report</wsdl:documentation>
          <wsdl:input message="tns:WSMediaUsageSoapIn" />
          <wsdl:output message="tns:WSMediaUsageSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMSetKeepMode">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets keep mode for a specified object</wsdl:documentation>
          <wsdl:input message="tns:WSMMSetKeepModeSoapIn" />
          <wsdl:output message="tns:WSMMSetKeepModeSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMAddTree">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Adds subtree for a specified object</wsdl:documentation>
          <wsdl:input message="tns:WSMMAddTreeSoapIn" />
          <wsdl:output message="tns:WSMMAddTreeSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSMMChangeSubTree">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes subtree mode for a specified object</wsdl:documentation>
          <wsdl:input message="tns:WSMMChangeSubTreeSoapIn" />
          <wsdl:output message="tns:WSMMChangeSubTreeSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMPurgeFile">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes file data from cache for a specified object</wsdl:documentation>
          <wsdl:input message="tns:WSMMPurgeFileSoapIn" />
          <wsdl:output message="tns:WSMMPurgeFileSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSCheckVLChanges">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks for changes in VL database</wsdl:documentation>
          <wsdl:input message="tns:WSCheckVLChangesSoapIn" />
          <wsdl:output message="tns:WSCheckVLChangesSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDDefine">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Defines new QSSD Integral Volume Set</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDDefineSoapIn" />
          <wsdl:output message="tns:WSQSSDDefineSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDHCPSetProtocol">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Adds new QSSD bucket/partition</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDHCPSetProtocolSoapIn" />
          <wsdl:output message="tns:WSQSSDHCPSetProtocolSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDCSVault">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Edits CS vault parameters</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDCSVaultSoapIn" />
          <wsdl:output message="tns:WSQSSDCSVaultSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDAddBucket">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Adds new QSSD bucket/partition</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDAddBucketSoapIn" />
          <wsdl:output message="tns:WSQSSDAddBucketSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDTenantRemove">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes HCP QSSD tenant</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDTenantRemoveSoapIn" />
          <wsdl:output message="tns:WSQSSDTenantRemoveSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDDelete">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deletes QSSD Definition</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDDeleteSoapIn" />
          <wsdl:output message="tns:WSQSSDDeleteSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDRename">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Renames QSSD Definition</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDRenameSoapIn" />
          <wsdl:output message="tns:WSQSSDRenameSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDGetBucketList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Retruns buckets list for a specified QSSD name</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDGetBucketListSoapIn" />
          <wsdl:output message="tns:WSQSSDGetBucketListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetQSSDList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns QSSD list</wsdl:documentation>
          <wsdl:input message="tns:WSGetQSSDListSoapIn" />
          <wsdl:output message="tns:WSGetQSSDListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetQSSDLicensedList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of licensed QSSD types</wsdl:documentation>
          <wsdl:input message="tns:WSGetQSSDLicensedListSoapIn" />
          <wsdl:output message="tns:WSGetQSSDLicensedListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSQSSDRefresh">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invokes refresh command on a QSSD specified by name</wsdl:documentation>
          <wsdl:input message="tns:WSQSSDRefreshSoapIn" />
          <wsdl:output message="tns:WSQSSDRefreshSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetLicenseInfo">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns license information</wsdl:documentation>
          <wsdl:input message="tns:WSGetLicenseInfoSoapIn" />
          <wsdl:output message="tns:WSGetLicenseInfoSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSActivateLicense">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Activate license</wsdl:documentation>
          <wsdl:input message="tns:WSActivateLicenseSoapIn" />
          <wsdl:output message="tns:WSActivateLicenseSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetFolderList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns plain list of folders</wsdl:documentation>
          <wsdl:input message="tns:WSGetFolderListSoapIn" />
          <wsdl:output message="tns:WSGetFolderListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSCreateFolder">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates a new folders</wsdl:documentation>
          <wsdl:input message="tns:WSCreateFolderSoapIn" />
          <wsdl:output message="tns:WSCreateFolderSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSCheckDirectory">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks directory path for existence and emptyness</wsdl:documentation>
          <wsdl:input message="tns:WSCheckDirectorySoapIn" />
          <wsdl:output message="tns:WSCheckDirectorySoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetPerfFilesList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of performance files</wsdl:documentation>
          <wsdl:input message="tns:WSGetPerfFilesListSoapIn" />
          <wsdl:output message="tns:WSGetPerfFilesListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetPerfFileContent">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns performance file content</wsdl:documentation>
          <wsdl:input message="tns:WSGetPerfFileContentSoapIn" />
          <wsdl:output message="tns:WSGetPerfFileContentSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetPerfMeasurementOptions">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns performance measurement options for a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSGetPerfMeasurementOptionsSoapIn" />
          <wsdl:output message="tns:WSGetPerfMeasurementOptionsSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSSetPerfMeasurementOptions">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets performance measurement options for a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSSetPerfMeasurementOptionsSoapIn" />
          <wsdl:output message="tns:WSSetPerfMeasurementOptionsSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMGetMeasurementOptions">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns cache performance measurement options for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetMeasurementOptionsSoapIn" />
          <wsdl:output message="tns:WSMMGetMeasurementOptionsSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMSetMeasurementOptions">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets cache performance measurement options for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMSetMeasurementOptionsSoapIn" />
          <wsdl:output message="tns:WSMMSetMeasurementOptionsSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMStartStopArchiving">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts or stops archiving on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMStartStopArchivingSoapIn" />
          <wsdl:output message="tns:WSMMStartStopArchivingSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMResumeArchiving">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resumes archiving on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMResumeArchivingSoapIn" />
          <wsdl:output message="tns:WSMMResumeArchivingSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMResumeMirror">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resumes archiving on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMResumeMirrorSoapIn" />
          <wsdl:output message="tns:WSMMResumeMirrorSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMDelayedArchiving">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Schedules archiving on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMDelayedArchivingSoapIn" />
          <wsdl:output message="tns:WSMMDelayedArchivingSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMGetQueueList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of queue schedules on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetQueueListSoapIn" />
          <wsdl:output message="tns:WSMMGetQueueListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMMGetTransferStatus">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns trnafer status on a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetTransferStatusSoapIn" />
          <wsdl:output message="tns:WSMMGetTransferStatusSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSEventsGetList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of console events</wsdl:documentation>
          <wsdl:input message="tns:WSEventsGetListSoapIn" />
          <wsdl:output message="tns:WSEventsGetListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSRemoveEvent">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes specified type of events</wsdl:documentation>
          <wsdl:input message="tns:WSRemoveEventSoapIn" />
          <wsdl:output message="tns:WSRemoveEventSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSCancelEvent">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cancels specified event</wsdl:documentation>
          <wsdl:input message="tns:WSCancelEventSoapIn" />
          <wsdl:output message="tns:WSCancelEventSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetMultiIncrementalDB">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns MultiIncremental database for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSGetMultiIncrementalDBSoapIn" />
          <wsdl:output message="tns:WSGetMultiIncrementalDBSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSMicDBOperation">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns MultiIncremental database operation result</wsdl:documentation>
          <wsdl:input message="tns:WSMicDBOperationSoapIn" />
          <wsdl:output message="tns:WSMicDBOperationSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLExportMediaEx">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Do media export in interactive mode on a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSVLExportMediaExSoapIn" />
          <wsdl:output message="tns:WSVLExportMediaExSoapOut" />
        </wsdl:operation>
          
        <wsdl:operation name="WSVLExportMedia">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Do media export in interactive mode on a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSVLExportMediaSoapIn" />
          <wsdl:output message="tns:WSVLExportMediaSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLMediaAskHelp">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lets the user to implement interactivity for media operations</wsdl:documentation>
          <wsdl:input message="tns:WSVLMediaAskHelpSoapIn" />
          <wsdl:output message="tns:WSVLMediaAskHelpSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLMediaConfirm">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Puts user's confirmation on question from the server side in interactive media operation</wsdl:documentation>
          <wsdl:input message="tns:WSVLMediaConfirmSoapIn" />
          <wsdl:output message="tns:WSVLMediaConfirmSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSVLImportMedia">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Do media import in interactive mode on a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSVLImportMediaSoapIn" />
          <wsdl:output message="tns:WSVLImportMediaSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSJBGetVolumeList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns volume list for a specified simulated device</wsdl:documentation>
          <wsdl:input message="tns:WSJBGetVolumeListSoapIn" />
          <wsdl:output message="tns:WSJBGetVolumeListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSLibraryResetStatistics">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resets statistics for a specified device</wsdl:documentation>
          <wsdl:input message="tns:WSLibraryResetStatisticsSoapIn" />
          <wsdl:output message="tns:WSLibraryResetStatisticsSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSMMRebuildQuotas">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of Quota Management accounts for a specified Integral Volume Set</wsdl:documentation>
          <wsdl:input message="tns:WSMMRebuildQuotasSoapIn" />
          <wsdl:output message="tns:WSMMRebuildQuotasSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSMMGetQuotaAccounts">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of Quota Management accounts for a specified Integral Volume Set</wsdl:documentation>
          <wsdl:input message="tns:WSMMGetQuotaAccountsSoapIn" />
          <wsdl:output message="tns:WSMMGetQuotaAccountsSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSMMSetQuotaAccounts">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Modifies Quota Management accounts for a specified Integral Volume Set</wsdl:documentation>
          <wsdl:input message="tns:WSMMSetQuotaAccountsSoapIn" />
          <wsdl:output message="tns:WSMMSetQuotaAccountsSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSEmailNotification">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Email notification</wsdl:documentation>
          <wsdl:input message="tns:WSEmailNotificationSoapIn" />
          <wsdl:output message="tns:WSEmailNotificationSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSEmailTest">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Email test</wsdl:documentation>
          <wsdl:input message="tns:WSEmailTestSoapIn" />
          <wsdl:output message="tns:WSEmailTestSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetEMailList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns list of e-mails in queue</wsdl:documentation>
          <wsdl:input message="tns:WSGetEMailListSoapIn" />
          <wsdl:output message="tns:WSGetEMailListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSCleanEMailQueue">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Cleans up e-mail queue</wsdl:documentation>
          <wsdl:input message="tns:WSCleanEMailQueueSoapIn" />
          <wsdl:output message="tns:WSCleanEMailQueueSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSUserRole">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">User role interface</wsdl:documentation>
          <wsdl:input message="tns:WSUserRoleSoapIn" />
          <wsdl:output message="tns:WSUserRoleSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSDASMSetMigratorState">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets migrator state for DASM IVS</wsdl:documentation>
          <wsdl:input message="tns:WSDASMSetMigratorStateSoapIn" />
          <wsdl:output message="tns:WSDASMSetMigratorStateSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetBackupConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns DB Backup configuration for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSGetBackupConfigSoapIn" />
          <wsdl:output message="tns:WSGetBackupConfigSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSetBackupConfig">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates DB Backup configuration for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSSetBackupConfigSoapIn" />
          <wsdl:output message="tns:WSSetBackupConfigSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetBackupList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns Backup list for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSGetBackupListSoapIn" />
          <wsdl:output message="tns:WSGetBackupListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSRestoreDBBackup">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Restores database from backup list for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSRestoreDBBackupSoapIn" />
          <wsdl:output message="tns:WSRestoreDBBackupSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSRestoreDBMedia">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Restores database from media for a specified IVS</wsdl:documentation>
          <wsdl:input message="tns:WSRestoreDBMediaSoapIn" />
          <wsdl:output message="tns:WSRestoreDBMediaSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSSDF2TDO">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Converts SDF set type to TDO</wsdl:documentation>
          <wsdl:input message="tns:WSSDF2TDOSoapIn" />
          <wsdl:output message="tns:WSSDF2TDOSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetUserList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns user accounts list</wsdl:documentation>
          <wsdl:input message="tns:WSGetUserListSoapIn" />
          <wsdl:output message="tns:WSGetUserListSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSGetGroupList">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns groups list</wsdl:documentation>
          <wsdl:input message="tns:WSGetGroupListSoapIn" />
          <wsdl:output message="tns:WSGetGroupListSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSGetWSDL">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns content of WSDL file</wsdl:documentation>
          <wsdl:input message="tns:WSGetWSDLSoapIn" />
          <wsdl:output message="tns:WSGetWSDLSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSXAGetSpecialStream">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns base64 encoded content of special stream specified with its name</wsdl:documentation>
          <wsdl:input message="tns:WSXAGetSpecialStreamSoapIn" />
          <wsdl:output message="tns:WSXAGetSpecialStreamSoapOut" />
        </wsdl:operation>

        <wsdl:operation name="WSXAPutSpecialStream">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Writes special stream specified with name to object</wsdl:documentation>
          <wsdl:input message="tns:WSXAPutSpecialStreamSoapIn" />
          <wsdl:output message="tns:WSXAPutSpecialStreamSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSXADeleteSpecialStream">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Deletes special streams specified with its name</wsdl:documentation>
          <wsdl:input message="tns:WSXADeleteSpecialStreamSoapIn" />
          <wsdl:output message="tns:WSXADeleteSpecialStreamSoapOut" />
        </wsdl:operation>
    
        <wsdl:operation name="WSXAGetStatSpecialStream">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns special stream statistics specified with its name</wsdl:documentation>
          <wsdl:input message="tns:WSXAGetStatSpecialStreamSoapIn" />
          <wsdl:output message="tns:WSXAGetStatSpecialStreamSoapOut" />
        </wsdl:operation>
            
        <wsdl:operation name="WSXAEnumSpecialStreams">
          <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns kist if special stream name for specified file name</wsdl:documentation>
          <wsdl:input message="tns:WSXAEnumSpecialStreamsSoapIn" />
          <wsdl:output message="tns:WSXAEnumSpecialStreamsSoapOut" />
        </wsdl:operation>
            
  </wsdl:portType>
    <wsdl:binding name="WSWebServiceSoapBinding" type="tns:WSWebServiceSoapPort">
        <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http" />
        <wsdl:operation name="WSGetServerInfo">
            <soap:operation soapAction="WSGetServerInfo" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetServerInfoEx">
            <soap:operation soapAction="WSGetServerInfoEx" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetServerFeatures">
            <soap:operation soapAction="WSGetServerFeatures" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetVLInfo">
            <soap:operation soapAction="WSGetVLInfo" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetIVInfoExtended">
          <soap:operation soapAction="WSGetIVInfoExtended" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetIVInfo">
          <soap:operation soapAction="WSGetIVInfo" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetFSStat">
          <soap:operation soapAction="WSGetFSStat" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetFileInfo">
          <soap:operation soapAction="WSGetFileInfo" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetGroupFileInfo">
          <soap:operation soapAction="WSGetGroupFileInfo" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetGroupFileRetentionInfo">
          <soap:operation soapAction="WSGetGroupFileRetentionInfo" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSRetrieveFile">
            <soap:operation soapAction="WSRetrieveFile" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSRetrieveFileStatus">
            <soap:operation soapAction="WSRetrieveFileStatus" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSBatchFileRetrieve">
            <soap:operation soapAction="WSBatchFileRetrieve" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSBatchFileStore">
            <soap:operation soapAction="WSBatchFileStore" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSBatchJobStatus">
            <soap:operation soapAction="WSBatchJobStatus" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSBatchJobObjectStatus">
            <soap:operation soapAction="WSBatchJobObjectStatus" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSUserLogin">
            <soap:operation soapAction="WSUserLogin" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSUserLogout">
            <soap:operation soapAction="WSUserLogout" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSReadDir">
            <soap:operation soapAction="WSReadDir" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSReadDirFiles">
          <soap:operation soapAction="WSReadDirFiles" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSMMArchiving">
          <soap:operation soapAction="WSMMArchiving" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetIVList">
            <soap:operation soapAction="WSGetIVList" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetIVListEx">
            <soap:operation soapAction="WSGetIVListEx" style="rpc" />
            <wsdl:input>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSListMigratedFilesByTime">
          <soap:operation soapAction="WSListMigratedFilesByTime" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSRetrieveFilesSortedList">
          <soap:operation soapAction="WSRetrieveFilesSortedList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="WSGetFilesSortedList">
          <soap:operation soapAction="WSGetFilesSortedList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetElementStatus">
          <soap:operation soapAction="WSGetElementStatus" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSetSlotStatus">
          <soap:operation soapAction="WSSetSlotStatus" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSetDrivesStatus">
          <soap:operation soapAction="WSSetDrivesStatus" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSetPrintersStatus">
          <soap:operation soapAction="WSSetPrintersStatus" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationExchange">
          <soap:operation soapAction="WSLibraryOperationExchange" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationExport">
          <soap:operation soapAction="WSLibraryOperationExport" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationImport">
          <soap:operation soapAction="WSLibraryOperationImport" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationFlip">
          <soap:operation soapAction="WSLibraryOperationFlip" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationLoad">
          <soap:operation soapAction="WSLibraryOperationLoad" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationUnload">
          <soap:operation soapAction="WSLibraryOperationUnload" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationReset">
          <soap:operation soapAction="WSLibraryOperationReset" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationMagazine">
          <soap:operation soapAction="WSLibraryOperationMagazine" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationScheduler">
          <soap:operation soapAction="WSLibraryOperationScheduler" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationCleaning">
          <soap:operation soapAction="WSLibraryOperationCleaning" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryGetSlotState">
          <soap:operation soapAction="WSLibraryGetSlotState" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryGetDriveState">
          <soap:operation soapAction="WSLibraryGetDriveState" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibrarySetDriveState">
          <soap:operation soapAction="WSLibrarySetDriveState" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSLibraryOperationRefresh">
          <soap:operation soapAction="WSLibraryOperationRefresh" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetRemoteDevicesList">
          <soap:operation soapAction="WSGetRemoteDevicesList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetGasConfig">
          <soap:operation soapAction="WSGetGasConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGasDomain">
          <soap:operation soapAction="WSGasDomain" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGasNode">
          <soap:operation soapAction="WSGasNode" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGasPair">
          <soap:operation soapAction="WSGasPair" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGasCross">
          <soap:operation soapAction="WSGasCross" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetDevicesList">
          <soap:operation soapAction="WSGetDevicesList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSetPathsClaiming">
          <soap:operation soapAction="WSSetPathsClaiming" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSConfigureLibrary">
          <soap:operation soapAction="WSConfigureLibrary" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSRescanHardware">
          <soap:operation soapAction="WSRescanHardware" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSCSIInquiry">
          <soap:operation soapAction="WSSCSIInquiry" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSCSISerialNumber">
          <soap:operation soapAction="WSSCSISerialNumber" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSSCSICapability">
          <soap:operation soapAction="WSSCSICapability" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSSCSIInventory">
          <soap:operation soapAction="WSSCSIInventory" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSSCSICapacity">
          <soap:operation soapAction="WSSCSICapacity" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSCSILocate">
          <soap:operation soapAction="WSSCSILocate" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSSCSIRead">
          <soap:operation soapAction="WSSCSIRead" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLCreateEditSet">
          <soap:operation soapAction="WSVLCreateEditSet" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLDelSet">
          <soap:operation soapAction="WSVLDelSet" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLAddToSet">
          <soap:operation soapAction="WSVLAddToSet" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLDelFromSet">
          <soap:operation soapAction="WSVLDelFromSet" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLLSDev">
          <soap:operation soapAction="WSVLLSDev" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLLSSet">
          <soap:operation soapAction="WSVLLSSet" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLLSVolume">
          <soap:operation soapAction="WSVLLSVolume" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLLTFS">
          <soap:operation soapAction="WSVLLTFS" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLMediaUsage">
          <soap:operation soapAction="WSVLMediaUsage" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSMMRamDisk">
          <soap:operation soapAction="WSMMRamDisk" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLConf">
          <soap:operation soapAction="WSVLConf" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLCache">
          <soap:operation soapAction="WSVLCache" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLMountIV">
          <soap:operation soapAction="WSVLMountIV" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLUMountIV">
          <soap:operation soapAction="WSVLUMountIV" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLErase">
          <soap:operation soapAction="WSVLErase" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLLease">
          <soap:operation soapAction="WSVLLease" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLClose">
          <soap:operation soapAction="WSVLClose" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLExportBulk">
          <soap:operation soapAction="WSVLExportBulk" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLMagazine">
          <soap:operation soapAction="WSVLMagazine" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLRecover">
          <soap:operation soapAction="WSVLRecover" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLInSet">
          <soap:operation soapAction="WSVLInSet" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLMIcDB">
          <soap:operation soapAction="WSVLMIcDB" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLPing">
          <soap:operation soapAction="WSVLPing" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLOffSync">
          <soap:operation soapAction="WSVLOffSync" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLExchange">
          <soap:operation soapAction="WSVLExchange" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLRefresh">
          <soap:operation soapAction="WSVLRefresh" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLReplace">
          <soap:operation soapAction="WSVLReplace" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLRestoreFSDB">
          <soap:operation soapAction="WSVLRestoreFSDB" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLReuse">
          <soap:operation soapAction="WSVLReuse" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLScratch">
          <soap:operation soapAction="WSVLScratch" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLInitMirroring">
          <soap:operation soapAction="WSVLInitMirroring" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLStartMirroring">
          <soap:operation soapAction="WSVLStartMirroring" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLQList">
          <soap:operation soapAction="WSVLQList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLQMove">
          <soap:operation soapAction="WSVLQMove" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLQRemove">
          <soap:operation soapAction="WSVLQRemove" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLRecord">
          <soap:operation soapAction="WSVLRecord" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLPublish">
          <soap:operation soapAction="WSVLPublish" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLSchedule">
          <soap:operation soapAction="WSVLSchedule" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLReplica">
          <soap:operation soapAction="WSVLReplica" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLLSMDb">
          <soap:operation soapAction="WSVLLSMDb" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLSDF2TDO">
          <soap:operation soapAction="WSVLSDF2TDO" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSEnumMediaByLibraryName">
          <soap:operation soapAction="WSEnumMediaByLibraryName" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLVerify">
          <soap:operation soapAction="WSVLVerify" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLFixDB">
          <soap:operation soapAction="WSVLFixDB" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLCopyCompare">
          <soap:operation soapAction="WSVLCopyCompare" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSStartASMServer">
          <soap:operation soapAction="WSStartASMServer" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSStopASMServer">
          <soap:operation soapAction="WSStopASMServer" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSKillASMServer">
          <soap:operation soapAction="WSKillASMServer" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSStartQS3Server">
        <soap:operation soapAction="WSStartQS3Server" style="rpc" />
        <wsdl:input>
          <soap:body use="literal" namespace="WSWebService" />
        </wsdl:input>
        <wsdl:output>
          <soap:body use="literal" namespace="WSWebService" />
        </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSStopQS3Server">
          <soap:operation soapAction="WSStopQS3Server" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQS3GetAccountList">
          <soap:operation soapAction="WSQS3GetAccountList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQS3GetAccount">
          <soap:operation soapAction="WSQS3GetAccount" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQS3CreateAccount">
          <soap:operation soapAction="WSQS3CreateAccount" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQS3ModifyAccount">
          <soap:operation soapAction="WSQS3ModifyAccount" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQS3RemoveAccount">
          <soap:operation soapAction="WSQS3RemoveAccount" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQS3GetServerConfig">
          <soap:operation soapAction="WSQS3GetServerConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQS3PutServerConfig">
          <soap:operation soapAction="WSQS3PutServerConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQWSDGetServerConfig">
          <soap:operation soapAction="WSQWSDGetServerConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQWSDPutServerConfig">
          <soap:operation soapAction="WSQWSDPutServerConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSStartCryptoServer">
          <soap:operation soapAction="WSStartCryptoServer" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSStopCryptoServer">
          <soap:operation soapAction="WSStopCryptoServer" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSAuthorizeCryptoServer">
          <soap:operation soapAction="WSAuthorizeCryptoServer" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetCertificateDetails">
          <soap:operation soapAction="WSGetCertificateDetails" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSiteCertificateCreate">
          <soap:operation soapAction="WSSiteCertificateCreate" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetSetServerPriority">
          <soap:operation soapAction="WSGetSetServerPriority" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSChangeMaxXferSize">
          <soap:operation soapAction="WSChangeMaxXferSize" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSMultipathManagement">
          <soap:operation soapAction="WSMultipathManagement" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMultipathManagementApply">
          <soap:operation soapAction="WSMultipathManagementApply" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSSetSwapTimes">
          <soap:operation soapAction="WSSetSwapTimes" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetDeviceConfigStatus">
          <soap:operation soapAction="WSGetDeviceConfigStatus" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetDriveCapabilities">
          <soap:operation soapAction="WSGetDriveCapabilities" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetDriveProfile">
          <soap:operation soapAction="WSGetDriveProfile" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSetDriveProfile">
          <soap:operation soapAction="WSSetDriveProfile" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSResetDriveProfile">
          <soap:operation soapAction="WSResetDriveProfile" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetLibraryStatistics">
          <soap:operation soapAction="WSGetLibraryStatistics" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetLibraryOptions">
          <soap:operation soapAction="WSGetLibraryOptions" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetSCSIDeviceInfo">
          <soap:operation soapAction="WSGetSCSIDeviceInfo" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

         <wsdl:operation name="WSScheduler">
            <soap:operation soapAction="WSScheduler" style="rpc" />
            <wsdl:input>
               <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
               <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
         </wsdl:operation>

         <wsdl:operation name="WSDbBackup">
            <soap:operation soapAction="WSDbBackup" style="rpc" />
            <wsdl:input>
               <soap:body use="literal" namespace="WSWebService" />
            </wsdl:input>
            <wsdl:output>
               <soap:body use="literal" namespace="WSWebService" />
            </wsdl:output>
         </wsdl:operation>

         <wsdl:operation name="WSGetSysLog">
          <soap:operation soapAction="WSGetSysLog" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSysLogAction">
          <soap:operation soapAction="WSSysLogAction" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSysLogGetAllFiles">
          <soap:operation soapAction="WSSysLogGetAllFiles" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSysLogDownloadFile">
          <soap:operation soapAction="WSSysLogDownloadFile" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGenericDownloadFile">
          <soap:operation soapAction="WSGenericDownloadFile" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGenericUploadFile">
          <soap:operation soapAction="WSGenericUploadFile" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetSCSILog">
          <soap:operation soapAction="WSGetSCSILog" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogGetControl">
          <soap:operation soapAction="WSSCSILogGetControl" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogSetControl">
          <soap:operation soapAction="WSSCSILogSetControl" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogEnableDevice">
          <soap:operation soapAction="WSSCSILogEnableDevice" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSCleanSCSILog">
          <soap:operation soapAction="WSCleanSCSILog" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSCSILogGetPending">
          <soap:operation soapAction="WSSCSILogGetPending" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLGetIVSAdvancedConfig">
          <soap:operation soapAction="WSVLGetIVSAdvancedConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLSetIVSAdvancedConfig">
          <soap:operation soapAction="WSVLSetIVSAdvancedConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLGetMountOnDateList">
          <soap:operation soapAction="WSVLGetMountOnDateList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLMountOnDate">
          <soap:operation soapAction="WSVLMountOnDate" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLUMountOnDate">
          <soap:operation soapAction="WSVLUMountOnDate" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLRemoveMountOnDate">
          <soap:operation soapAction="WSVLRemoveMountOnDate" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetFSPPFilesList">
          <soap:operation soapAction="WSGetFSPPFilesList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetFSPPSwitchOnOff">
          <soap:operation soapAction="WSGetFSPPSwitchOnOff" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetFSPPStatus">
          <soap:operation soapAction="WSGetFSPPStatus" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSMMTuningCache">
          <soap:operation soapAction="WSMMTuningCache" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetPinToCachePolicy">
          <soap:operation soapAction="WSMMGetPinToCachePolicy" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMSetPinToCachePolicy">
          <soap:operation soapAction="WSMMSetPinToCachePolicy" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetFileAttributes">
          <soap:operation soapAction="WSMMGetFileAttributes" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMSetFileAttributes">
          <soap:operation soapAction="WSMMSetFileAttributes" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSOfflineLocation">
          <soap:operation soapAction="WSOfflineLocation" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSAutomountProperties">
          <soap:operation soapAction="WSAutomountProperties" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetCoveredInfo">
          <soap:operation soapAction="WSMMGetCoveredInfo" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetSpecialStream">
          <soap:operation soapAction="WSMMGetSpecialStream" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVerifyDigest">
          <soap:operation soapAction="WSVerifyDigest" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMediaUsage">
          <soap:operation soapAction="WSMediaUsage" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMSetKeepMode">
          <soap:operation soapAction="WSMMSetKeepMode" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMAddTree">
          <soap:operation soapAction="WSMMAddTree" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSMMChangeSubTree">
          <soap:operation soapAction="WSMMChangeSubTree" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMPurgeFile">
          <soap:operation soapAction="WSMMPurgeFile" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSCheckVLChanges">
          <soap:operation soapAction="WSCheckVLChanges" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSQSSDDefine">
          <soap:operation soapAction="WSQSSDDefine" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDHCPSetProtocol">
          <soap:operation soapAction="WSQSSDHCPSetProtocol" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDCSVault">
          <soap:operation soapAction="WSQSSDCSVault" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDAddBucket">
          <soap:operation soapAction="WSQSSDAddBucket" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDTenantRemove">
          <soap:operation soapAction="WSQSSDTenantRemove" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDDelete">
          <soap:operation soapAction="WSQSSDDelete" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDRename">
          <soap:operation soapAction="WSQSSDRename" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDGetBucketList">
          <soap:operation soapAction="WSQSSDGetBucketList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetQSSDList">
          <soap:operation soapAction="WSGetQSSDList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetQSSDLicensedList">
          <soap:operation soapAction="WSGetQSSDLicensedList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSQSSDRefresh">
          <soap:operation soapAction="WSQSSDRefresh" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetLicenseInfo">
          <soap:operation soapAction="WSGetLicenseInfo" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSActivateLicense">
          <soap:operation soapAction="WSActivateLicense" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetFolderList">
          <soap:operation soapAction="WSGetFolderList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSCreateFolder">
          <soap:operation soapAction="WSCreateFolder" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSCheckDirectory">
          <soap:operation soapAction="WSCheckDirectory" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetPerfFilesList">
          <soap:operation soapAction="WSGetPerfFilesList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetPerfFileContent">
          <soap:operation soapAction="WSGetPerfFileContent" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetPerfMeasurementOptions">
          <soap:operation soapAction="WSGetPerfMeasurementOptions" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSSetPerfMeasurementOptions">
          <soap:operation soapAction="WSSetPerfMeasurementOptions" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetMeasurementOptions">
          <soap:operation soapAction="WSMMGetMeasurementOptions" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMSetMeasurementOptions">
          <soap:operation soapAction="WSMMSetMeasurementOptions" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMStartStopArchiving">
          <soap:operation soapAction="WSMMStartStopArchiving" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMResumeArchiving">
          <soap:operation soapAction="WSMMResumeArchiving" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMResumeMirror">
          <soap:operation soapAction="WSMMResumeMirror" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMDelayedArchiving">
          <soap:operation soapAction="WSMMDelayedArchiving" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetQueueList">
          <soap:operation soapAction="WSMMGetQueueList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSEventsGetList">
          <soap:operation soapAction="WSEventsGetList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetTransferStatus">
          <soap:operation soapAction="WSMMGetTransferStatus" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSRemoveEvent">
          <soap:operation soapAction="WSRemoveEvent" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSCancelEvent">
          <soap:operation soapAction="WSCancelEvent" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetMultiIncrementalDB">
          <soap:operation soapAction="WSGetMultiIncrementalDB" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMicDBOperation">
          <soap:operation soapAction="WSMicDBOperation" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLExportMediaEx">
          <soap:operation soapAction="WSVLExportMediaEx" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLExportMedia">
          <soap:operation soapAction="WSVLExportMedia" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLMediaAskHelp">
          <soap:operation soapAction="WSVLMediaAskHelp" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSVLMediaConfirm">
          <soap:operation soapAction="WSVLMediaConfirm" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSVLImportMedia">
          <soap:operation soapAction="WSVLImportMedia" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSJBGetVolumeList">
          <soap:operation soapAction="WSJBGetVolumeList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSLibraryResetStatistics">
          <soap:operation soapAction="WSLibraryResetStatistics" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSMMRebuildQuotas">
          <soap:operation soapAction="WSMMRebuildQuotas" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSMMGetQuotaAccounts">
          <soap:operation soapAction="WSMMGetQuotaAccounts" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSMMSetQuotaAccounts">
          <soap:operation soapAction="WSMMSetQuotaAccounts" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSEmailNotification">
          <soap:operation soapAction="WSEmailNotification" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSEmailTest">
          <soap:operation soapAction="WSEmailTest" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetEMailList">
          <soap:operation soapAction="WSGetEMailList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSCleanEMailQueue">
          <soap:operation soapAction="WSCleanEMailQueue" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSUserRole">
          <soap:operation soapAction="WSUserRole" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSDASMSetMigratorState">
          <soap:operation soapAction="WSDASMSetMigratorState" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetBackupConfig">
          <soap:operation soapAction="WSGetBackupConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSSetBackupConfig">
          <soap:operation soapAction="WSSetBackupConfig" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSGetBackupList">
          <soap:operation soapAction="WSGetBackupList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSRestoreDBBackup">
          <soap:operation soapAction="WSRestoreDBBackup" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSRestoreDBMedia">
          <soap:operation soapAction="WSRestoreDBMedia" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSSDF2TDO">
          <soap:operation soapAction="WSSDF2TDO" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetUserList">
          <soap:operation soapAction="WSGetUserList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetGroupList">
          <soap:operation soapAction="WSGetGroupList" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

        <wsdl:operation name="WSGetWSDL">
          <soap:operation soapAction="WSGetWSDL" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSXAGetSpecialStream">
          <soap:operation soapAction="WSXAGetSpecialStream" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
    
        <wsdl:operation name="WSXAPutSpecialStream">
          <soap:operation soapAction="WSXAPutSpecialStream" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSXADeleteSpecialStream">
          <soap:operation soapAction="WSXADeleteSpecialStream" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
      
        <wsdl:operation name="WSXAGetStatSpecialStream">
          <soap:operation soapAction="WSXAGetStatSpecialStream" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>
    
        <wsdl:operation name="WSXAEnumSpecialStreams">
          <soap:operation soapAction="WSXAEnumSpecialStreams" style="rpc" />
          <wsdl:input>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:input>
          <wsdl:output>
            <soap:body use="literal" namespace="WSWebService" />
          </wsdl:output>
        </wsdl:operation>

    </wsdl:binding>
      <wsdl:service name="WSWebService">
        <wsdl:port name="WSWebServiceSoapPort" binding="tns:WSWebServiceSoapBinding">
            <soap:address location="https://127.0.0.1:18082" />
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
